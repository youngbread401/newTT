{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, get, off } from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from \"./components/DiceModel\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\nvar app = initializeApp(firebaseConfig);\nvar database = getDatabase(app);\nvar LETTERS = Array.from({\n  length: 26\n}, function (_, i) {\n  return String.fromCharCode(65 + i);\n});\nvar COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f', '#9b59b6', '#1abc9c', '#e67e22', '#ffffff'];\nvar GRID_SIZE = 10;\nvar ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nvar SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nvar CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nvar DICE_TYPES = [{\n  sides: 4,\n  color: '#FF6B6B'\n}, {\n  sides: 6,\n  color: '#4ECDC4'\n}, {\n  sides: 8,\n  color: '#45B7D1'\n}, {\n  sides: 10,\n  color: '#96CEB4'\n}, {\n  sides: 12,\n  color: '#FFEEAD'\n}, {\n  sides: 20,\n  color: '#D4A5A5'\n}, {\n  sides: 100,\n  color: '#9B59B6'\n}];\nvar STATUS_EFFECTS = [{\n  id: 'blinded',\n  name: 'Blinded',\n  icon: '👁️'\n}, {\n  id: 'charmed',\n  name: 'Charmed',\n  icon: '💕'\n}, {\n  id: 'deafened',\n  name: 'Deafened',\n  icon: '👂'\n}, {\n  id: 'frightened',\n  name: 'Frightened',\n  icon: '😨'\n}, {\n  id: 'grappled',\n  name: 'Grappled',\n  icon: '🤼'\n}, {\n  id: 'incapacitated',\n  name: 'Incapacitated',\n  icon: '💫'\n}, {\n  id: 'invisible',\n  name: 'Invisible',\n  icon: '👻'\n}, {\n  id: 'paralyzed',\n  name: 'Paralyzed',\n  icon: '⚡'\n}, {\n  id: 'petrified',\n  name: 'Petrified',\n  icon: '🗿'\n}, {\n  id: 'poisoned',\n  name: 'Poisoned',\n  icon: '🤢'\n}, {\n  id: 'prone',\n  name: 'Prone',\n  icon: '⬇️'\n}, {\n  id: 'restrained',\n  name: 'Restrained',\n  icon: '⛓️'\n}, {\n  id: 'stunned',\n  name: 'Stunned',\n  icon: '💫'\n}, {\n  id: 'unconscious',\n  name: 'Unconscious',\n  icon: '💤'\n}];\nvar windowDimensions = Dimensions.get('window');\nvar isSmallScreen = windowDimensions.width < 768;\nvar THEME = {\n  primary: '#1E1E1E',\n  secondary: '#2D2D2D',\n  accent: '#7289DA',\n  gold: '#FFD700',\n  danger: '#ED4245',\n  success: '#3BA55C',\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1E1E1E',\n    secondary: '#2D2D2D',\n    dark: '#141414',\n    panel: '#363636'\n  }\n};\nvar initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true\n  },\n  partyLoot: {\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  lastUpdate: Date.now()\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%'\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%'\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start'\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1,\n    width: '100%'\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%'\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%'\n  },\n  sidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%'\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center'\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40'\n  },\n  diceResult: {\n    color: THEME.text.light\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%'\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent\n  },\n  initiativeText: {\n    color: THEME.text.light\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold'\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none'\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center'\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent\n  }\n});\nvar additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%'\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  sheetSection: {\n    marginBottom: 20\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold'\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5\n  },\n  abilityMod: {\n    color: THEME.text.light\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center'\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4\n  }\n});\nvar diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: '0px 2px 3.84px rgba(0, 0, 0, 0.25)'\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold'\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center'\n  },\n  controlActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200\n  },\n  historyScroll: {\n    padding: 10\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary\n  },\n  historyLeft: {\n    flex: 1\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  diceControls: {\n    flexDirection: 'column',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  diceContainer: {\n    width: isSmallScreen ? 80 : 100,\n    height: isSmallScreen ? 80 : 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginBottom: 5\n  }\n});\nvar statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80\n  },\n  effectActive: {\n    backgroundColor: THEME.accent\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12\n  }\n});\nvar saveGameState = function () {\n  var _ref = _asyncToGenerator(function* () {\n    if (firebaseRef.current) {\n      try {\n        yield set(firebaseRef.current, {\n          tokens: tokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          characters: characters,\n          settings: initialGameState.settings,\n          lastUpdate: Date.now()\n        });\n      } catch (error) {\n        console.error('Error saving game state:', error);\n        Alert.alert('Error', 'Failed to save game state');\n      }\n    }\n  });\n  return function saveGameState() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar CharacterSheetModal = memo(function (_ref2) {\n  var visible = _ref2.visible,\n    onClose = _ref2.onClose,\n    character = _ref2.character,\n    characters = _ref2.characters,\n    onUpdate = _ref2.onUpdate;\n  var _useState = useState(function () {\n      return {\n        name: (character == null ? void 0 : character.name) || '',\n        class: (character == null ? void 0 : character.class) || '',\n        level: (character == null ? void 0 : character.level) || 1,\n        owner: (character == null ? void 0 : character.owner) || '',\n        proficiencyBonus: (character == null ? void 0 : character.proficiencyBonus) || 2,\n        abilityScores: (character == null ? void 0 : character.abilityScores) || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: (character == null ? void 0 : character.proficientSkills) || [],\n        currency: (character == null ? void 0 : character.currency) || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: (character == null ? void 0 : character.items) || [],\n        inventory: (character == null ? void 0 : character.inventory) || []\n      };\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    editedCharacter = _useState2[0],\n    setEditedCharacter = _useState2[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var handleAbilityScoreChange = function handleAbilityScoreChange(ability, value) {\n    var newScore = parseInt(value) || 0;\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        abilityScores: _objectSpread(_objectSpread({}, prev.abilityScores), {}, _defineProperty({}, ability, newScore))\n      });\n    });\n  };\n  var toggleProficiency = function toggleProficiency(skill) {\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        proficientSkills: prev.proficientSkills.includes(skill) ? prev.proficientSkills.filter(function (s) {\n          return s !== skill;\n        }) : [].concat(_toConsumableArray(prev.proficientSkills), [skill])\n      });\n    });\n  };\n  var getSkillModifier = function getSkillModifier(skill, ability) {\n    var abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    var profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n  var handleSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var updatedCharacter = _objectSpread(_objectSpread({}, character), editedCharacter);\n        onUpdate(updatedCharacter);\n      } catch (error) {\n        console.error('Error saving character:', error);\n        Alert.alert('Error', 'Failed to save character');\n      }\n    });\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(GestureScrollView, {\n          children: [_jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Character Info\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: editedCharacter.name,\n              onChangeText: function onChangeText(text) {\n                return setEditedCharacter(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Character Name\",\n              placeholderTextColor: THEME.text.light + '80'\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10\n              },\n              children: [_jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: editedCharacter.class,\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      class: text\n                    });\n                  });\n                },\n                placeholder: \"Class\",\n                placeholderTextColor: THEME.text.light + '80'\n              }), _jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: String(editedCharacter.level),\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      level: parseInt(text) || 1\n                    });\n                  });\n                },\n                placeholder: \"Level\",\n                keyboardType: \"numeric\",\n                placeholderTextColor: THEME.text.light + '80'\n              })]\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Ability Scores\"\n            }), _jsx(View, {\n              style: additionalStyles.abilityScores,\n              children: ABILITY_SCORES.map(function (ability) {\n                return _jsxs(View, {\n                  style: additionalStyles.abilityBox,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.abilityLabel,\n                    children: ability\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.abilityScore,\n                    value: String(editedCharacter.abilityScores[ability]),\n                    onChangeText: function onChangeText(text) {\n                      return handleAbilityScoreChange(ability, text);\n                    },\n                    keyboardType: \"numeric\",\n                    maxLength: 2,\n                    selectTextOnFocus: true\n                  }), _jsxs(Text, {\n                    style: additionalStyles.abilityMod,\n                    children: [calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : '', calculateModifier(editedCharacter.abilityScores[ability])]\n                  })]\n                }, ability);\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Skills\"\n            }), _jsx(View, {\n              style: additionalStyles.skillsList,\n              children: Object.entries(SKILLS).map(function (_ref4) {\n                var _ref5 = _slicedToArray(_ref4, 2),\n                  ability = _ref5[0],\n                  skills = _ref5[1];\n                return skills.map(function (skill) {\n                  return _jsxs(TouchableOpacity, {\n                    style: additionalStyles.skillItem,\n                    onPress: function onPress() {\n                      return toggleProficiency(skill);\n                    },\n                    children: [_jsx(View, {\n                      style: [additionalStyles.proficientDot, {\n                        backgroundColor: editedCharacter.proficientSkills.includes(skill) ? THEME.accent : THEME.background.secondary\n                      }]\n                    }), _jsx(Text, {\n                      style: additionalStyles.skillName,\n                      children: skill\n                    }), _jsxs(Text, {\n                      style: additionalStyles.skillMod,\n                      children: [getSkillModifier(skill, ability) >= 0 ? '+' : '', getSkillModifier(skill, ability)]\n                    })]\n                  }, skill);\n                });\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Inventory\"\n            }), _jsx(View, {\n              style: additionalStyles.lootSection,\n              children: CURRENCY.map(function (currency) {\n                return _jsxs(View, {\n                  style: additionalStyles.currencyRow,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.currencyLabel,\n                    children: currency\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.currencyInput,\n                    value: String(editedCharacter.currency[currency] || 0),\n                    onChangeText: function onChangeText(text) {\n                      var value = parseInt(text) || 0;\n                      setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                }, currency);\n              })\n            }), _jsxs(View, {\n              style: additionalStyles.lootSection,\n              children: [_jsxs(View, {\n                style: additionalStyles.lootHeader,\n                children: [_jsx(Text, {\n                  style: additionalStyles.sectionTitle,\n                  children: \"Items\"\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.addButton,\n                  onPress: function onPress() {\n                    setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: [].concat(_toConsumableArray(prev.items), [{\n                          name: '',\n                          quantity: 1,\n                          notes: '',\n                          addedBy: character.name\n                        }])\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"Add Item\"\n                  })\n                })]\n              }), editedCharacter.items.map(function (item, index) {\n                return _jsxs(View, {\n                  style: additionalStyles.itemRow,\n                  children: [_jsxs(View, {\n                    style: additionalStyles.itemInfo,\n                    children: [_jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        flex: 2\n                      }],\n                      value: item.name,\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          name: text\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      placeholder: \"Item name\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), _jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        width: 60\n                      }],\n                      value: String(item.quantity),\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          quantity: parseInt(text) || 1\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      keyboardType: \"numeric\",\n                      placeholder: \"Qty\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                      style: additionalStyles.removeButton,\n                      onPress: function onPress() {\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: prev.items.filter(function (_, i) {\n                              return i !== index;\n                            })\n                          });\n                        });\n                      },\n                      children: _jsx(Text, {\n                        style: styles.buttonText,\n                        children: \"\\xD7\"\n                      })\n                    })]\n                  }), _jsxs(Text, {\n                    style: additionalStyles.addedBy,\n                    children: [\"Added by: \", item.addedBy]\n                  })]\n                }, index);\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.success\n              }],\n              onPress: handleSave,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Save Changes\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n});\nvar TokenModal = memo(function (_ref6) {\n  var showTokenModal = _ref6.showTokenModal,\n    setShowTokenModal = _ref6.setShowTokenModal,\n    selectedToken = _ref6.selectedToken,\n    setSelectedToken = _ref6.setSelectedToken,\n    tokens = _ref6.tokens,\n    firebaseRef = _ref6.firebaseRef,\n    initialGameState = _ref6.initialGameState,\n    layers = _ref6.layers,\n    initiative = _ref6.initiative,\n    inCombat = _ref6.inCombat,\n    currentTurn = _ref6.currentTurn,\n    THEME = _ref6.THEME;\n  return _jsx(Modal, {\n    visible: showTokenModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {\n      return setShowTokenModal(false);\n    },\n    children: _jsx(Pressable, {\n      style: [styles.modalOverlay, {\n        cursor: 'default'\n      }],\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      },\n      children: _jsx(View, {\n        style: styles.modalContent,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.select({\n            ios: 'padding',\n            android: 'height'\n          }),\n          style: styles.modalContainer,\n          keyboardVerticalOffset: Platform.select({\n            ios: 64,\n            android: 0\n          }),\n          children: _jsxs(Pressable, {\n            onPress: function onPress(e) {\n              return e.stopPropagation();\n            },\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Edit Token\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: selectedToken == null ? void 0 : selectedToken.name,\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Token Name\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              spellCheck: false,\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginBottom: 10\n              },\n              children: [_jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.hp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var hp = parseInt(text) || 0;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        hp: Math.max(0, hp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Current HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.maxHp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var maxHp = parseInt(text) || 1;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        maxHp: Math.max(1, maxHp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Max HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              })]\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: String((selectedToken == null ? void 0 : selectedToken.initiativeBonus) || '0'),\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    initiativeBonus: parseInt(text) || 0\n                  });\n                });\n              },\n              keyboardType: \"numeric\",\n              placeholder: \"Initiative Bonus\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: statusStyles.effectsContainer,\n              children: [_jsx(Text, {\n                style: statusStyles.effectsTitle,\n                children: \"Status Effects\"\n              }), _jsx(View, {\n                style: statusStyles.effectsGrid,\n                children: STATUS_EFFECTS.map(function (effect) {\n                  var _selectedToken$effect;\n                  return _jsx(TouchableOpacity, {\n                    style: [statusStyles.effectButton, (selectedToken == null ? void 0 : (_selectedToken$effect = selectedToken.effects) == null ? void 0 : _selectedToken$effect.includes(effect.id)) && statusStyles.effectActive],\n                    onPress: function onPress() {\n                      setSelectedToken(function (prev) {\n                        var currentEffects = prev.effects || [];\n                        var newEffects = currentEffects.includes(effect.id) ? currentEffects.filter(function (e) {\n                          return e !== effect.id;\n                        }) : [].concat(_toConsumableArray(currentEffects), [effect.id]);\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          effects: newEffects\n                        });\n                      });\n                    },\n                    children: _jsxs(Text, {\n                      style: statusStyles.effectText,\n                      children: [effect.icon, \" \", effect.name]\n                    })\n                  }, effect.id);\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.modalButtons,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    var newTokens = _objectSpread({}, tokens);\n                    delete newTokens[selectedToken.position];\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: newTokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: inCombat,\n                      currentTurn: currentTurn\n                    }));\n                    setShowTokenModal(false);\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Delete\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    var newTokens = _objectSpread(_objectSpread({}, tokens), {}, _defineProperty({}, selectedToken.position, selectedToken));\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: newTokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: inCombat,\n                      currentTurn: currentTurn\n                    }));\n                    setShowTokenModal(false);\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Save\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n});\nvar modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001\n  }\n});\nvar RoomModal = memo(function (_ref7) {\n  var showRoomModal = _ref7.showRoomModal,\n    setShowRoomModal = _ref7.setShowRoomModal,\n    isConnected = _ref7.isConnected,\n    roomCode = _ref7.roomCode,\n    setRoomCode = _ref7.setRoomCode,\n    isJoining = _ref7.isJoining,\n    connectToRoom = _ref7.connectToRoom;\n  return _jsx(Modal, {\n    visible: showRoomModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    style: {\n      zIndex: 999\n    },\n    children: _jsx(View, {\n      style: [modalStyles.modalOverlay, {\n        pointerEvents: 'auto'\n      }],\n      children: _jsxs(View, {\n        style: modalStyles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Join Room\"\n        }), _jsx(TextInput, {\n          style: [styles.input, {\n            marginBottom: 15,\n            zIndex: 1002\n          }],\n          value: roomCode,\n          onChangeText: function onChangeText(text) {\n            setRoomCode(text.trim().toLowerCase());\n          },\n          placeholder: \"Enter room code...\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          editable: !isJoining,\n          autoFocus: true,\n          blurOnSubmit: false\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n            width: '100%',\n            zIndex: 1002\n          }],\n          onPress: function onPress() {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          },\n          disabled: isJoining,\n          children: isJoining ? _jsxs(View, {\n            style: styles.loadingButtonContent,\n            children: [_jsx(ActivityIndicator, {\n              color: THEME.text.light\n            }), _jsx(Text, {\n              style: [styles.buttonText, {\n                marginLeft: 10\n              }],\n              children: \"Connecting...\"\n            })]\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Join Room\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar PartyLootModal = memo(function (_ref8) {\n  var visible = _ref8.visible,\n    onClose = _ref8.onClose,\n    partyLoot = _ref8.partyLoot,\n    onUpdate = _ref8.onUpdate,\n    playerName = _ref8.playerName;\n  var _useState3 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: []\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editedLoot = _useState4[0],\n    setEditedLoot = _useState4[1];\n  useEffect(function () {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: [styles.modalContent, {\n          maxHeight: '90%'\n        }],\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Party Loot\"\n        }), _jsxs(ScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (type) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: type\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedLoot.currency[type] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, type, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, type);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedLoot(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      items: [].concat(_toConsumableArray(prev.items), [{\n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedLoot.items.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    flex: 2\n                  }],\n                  value: item.name,\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      name: text\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  placeholder: \"Item name\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    width: 60\n                  }],\n                  value: String(item.quantity),\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      quantity: parseInt(text) || 1\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Qty\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.removeButton,\n                  onPress: function onPress() {\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: prev.items.filter(function (_, i) {\n                          return i !== index;\n                        })\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"\\xD7\"\n                  })\n                })]\n              }, item.id || index);\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonRow,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, styles.closeButton],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(editedLoot);\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar GridZoomControls = memo(function (_ref9) {\n  var zoomLevel = _ref9.zoomLevel,\n    setZoomLevel = _ref9.setZoomLevel;\n  var debouncedZoom = debounce(function (newZoom) {\n    setZoomLevel(newZoom);\n  }, 100);\n  return _jsxs(View, {\n    style: styles.zoomControls,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.max(0.5, zoomLevel - 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"-\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.min(2, zoomLevel + 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"+\"\n      })\n    })]\n  });\n});\nvar InventoryModal = memo(function (_ref10) {\n  var visible = _ref10.visible,\n    onClose = _ref10.onClose,\n    character = _ref10.character,\n    onUpdate = _ref10.onUpdate;\n  var _useState5 = useState({\n      currency: (character == null ? void 0 : character.currency) || {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      inventory: (character == null ? void 0 : character.inventory) || []\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editedInventory = _useState6[0],\n    setEditedInventory = _useState6[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!visible || !character) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(Text, {\n          style: additionalStyles.sectionTitle,\n          children: [character.name, \"'s Inventory\"]\n        }), _jsxs(GestureScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (currency) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: currency\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedInventory.currency[currency] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedInventory(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, currency);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedInventory(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      inventory: [].concat(_toConsumableArray(prev.inventory), [{\n                        name: '',\n                        quantity: 1,\n                        notes: '',\n                        addedBy: character.name\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedInventory.inventory.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsxs(View, {\n                  style: additionalStyles.itemInfo,\n                  children: [_jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      flex: 2\n                    }],\n                    value: item.name,\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        name: text\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    placeholder: \"Item name\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      width: 60\n                    }],\n                    value: String(item.quantity),\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        quantity: parseInt(text) || 1\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholder: \"Qty\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                    style: additionalStyles.removeButton,\n                    onPress: function onPress() {\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: prev.inventory.filter(function (_, i) {\n                            return i !== index;\n                          })\n                        });\n                      });\n                    },\n                    children: _jsx(Text, {\n                      style: styles.buttonText,\n                      children: \"\\xD7\"\n                    })\n                  })]\n                }), _jsxs(Text, {\n                  style: additionalStyles.addedBy,\n                  children: [\"Added by: \", item.addedBy]\n                })]\n              }, index);\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n                currency: editedInventory.currency,\n                inventory: editedInventory.inventory\n              }));\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar PlayerNameModal = memo(function (_ref11) {\n  var visible = _ref11.visible,\n    onSubmit = _ref11.onSubmit;\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    name = _useState8[0],\n    setName = _useState8[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Enter Your Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: setName,\n          placeholder: \"Your name\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"words\"\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.success,\n            width: '100%',\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            return onSubmit(name);\n          },\n          disabled: !name.trim(),\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Continue\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2\n  }\n});\nexport default function App() {\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    roomCode = _useState10[0],\n    setRoomCode = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isConnected = _useState12[0],\n    setIsConnected = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isLoading = _useState14[0],\n    setIsLoading = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isJoining = _useState16[0],\n    setIsJoining = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isUpdating = _useState18[0],\n    setIsUpdating = _useState18[1];\n  var _useState19 = useState(true),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showRoomModal = _useState20[0],\n    setShowRoomModal = _useState20[1];\n  var _useState21 = useState(true),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isDarkMode = _useState22[0],\n    setIsDarkMode = _useState22[1];\n  var _useState23 = useState(isSmallScreen ? 0.8 : 1),\n    _useState24 = _slicedToArray(_useState23, 2),\n    zoomLevel = _useState24[0],\n    setZoomLevel = _useState24[1];\n  var _useState25 = useState({}),\n    _useState26 = _slicedToArray(_useState25, 2),\n    tokens = _useState26[0],\n    setTokens = _useState26[1];\n  var _useState27 = useState(COLORS[0]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    currentColor = _useState28[0],\n    setCurrentColor = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    initiative = _useState30[0],\n    setInitiative = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    inCombat = _useState32[0],\n    setInCombat = _useState32[1];\n  var _useState33 = useState(0),\n    _useState34 = _slicedToArray(_useState33, 2),\n    currentTurn = _useState34[0],\n    setCurrentTurn = _useState34[1];\n  var _useState35 = useState(initialGameState.layers),\n    _useState36 = _slicedToArray(_useState35, 2),\n    layers = _useState36[0],\n    setLayers = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    diceHistory = _useState38[0],\n    setDiceHistory = _useState38[1];\n  var _useState39 = useState(false),\n    _useState40 = _slicedToArray(_useState39, 2),\n    advantage = _useState40[0],\n    setAdvantage = _useState40[1];\n  var _useState41 = useState(0),\n    _useState42 = _slicedToArray(_useState41, 2),\n    modifier = _useState42[0],\n    setModifier = _useState42[1];\n  var _useState43 = useState(null),\n    _useState44 = _slicedToArray(_useState43, 2),\n    selectedToken = _useState44[0],\n    setSelectedToken = _useState44[1];\n  var _useState45 = useState(false),\n    _useState46 = _slicedToArray(_useState45, 2),\n    showTokenModal = _useState46[0],\n    setShowTokenModal = _useState46[1];\n  var _useState47 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: [],\n      currentViewer: null\n    }),\n    _useState48 = _slicedToArray(_useState47, 2),\n    partyLoot = _useState48[0],\n    setPartyLoot = _useState48[1];\n  var _useState49 = useState(false),\n    _useState50 = _slicedToArray(_useState49, 2),\n    showPartyLoot = _useState50[0],\n    setShowPartyLoot = _useState50[1];\n  var _useState51 = useState(1),\n    _useState52 = _slicedToArray(_useState51, 2),\n    diceQuantity = _useState52[0],\n    setDiceQuantity = _useState52[1];\n  var _useState53 = useState([]),\n    _useState54 = _slicedToArray(_useState53, 2),\n    characters = _useState54[0],\n    setCharacters = _useState54[1];\n  var _useState55 = useState(false),\n    _useState56 = _slicedToArray(_useState55, 2),\n    showCharacterSheet = _useState56[0],\n    setShowCharacterSheet = _useState56[1];\n  var _useState57 = useState(null),\n    _useState58 = _slicedToArray(_useState57, 2),\n    selectedCharacter = _useState58[0],\n    setSelectedCharacter = _useState58[1];\n  var _useState59 = useState(false),\n    _useState60 = _slicedToArray(_useState59, 2),\n    showInventory = _useState60[0],\n    setShowInventory = _useState60[1];\n  var _useState61 = useState(''),\n    _useState62 = _slicedToArray(_useState61, 2),\n    playerName = _useState62[0],\n    setPlayerName = _useState62[1];\n  var _useState63 = useState(true),\n    _useState64 = _slicedToArray(_useState63, 2),\n    showPlayerNameModal = _useState64[0],\n    setShowPlayerNameModal = _useState64[1];\n  var _useState65 = useState('normal'),\n    _useState66 = _slicedToArray(_useState65, 2),\n    rollType = _useState66[0],\n    setRollType = _useState66[1];\n  var firebaseRef = useRef(null);\n  var unsubscribeRef = useRef(null);\n  var handleDisconnect = useCallback(function () {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n  var handleInitiativeRoll = useCallback(function () {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n    var rolls = Object.entries(tokens).map(function (_ref12) {\n      var _ref13 = _slicedToArray(_ref12, 2),\n        position = _ref13[0],\n        token = _ref13[1];\n      var roll = Math.floor(Math.random() * 20) + 1;\n      var initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position: position,\n        initiative: initiative,\n        details: token.name + \" (\" + initiative + \")\"\n      };\n    });\n    rolls.sort(function (a, b) {\n      return b.initiative - a.initiative;\n    });\n    if (firebaseRef.current) {\n      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n        tokens: tokens,\n        layers: layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      }));\n    }\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n  var rollDice = useCallback(function (sides) {\n    var allRolls = [];\n    for (var d = 0; d < diceQuantity; d++) {\n      var rolls = [];\n      var numRolls = rollType !== 'normal' ? 2 : 1;\n      for (var i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n      var finalRoll = rollType === 'advantage' ? Math.max.apply(Math, rolls) : rollType === 'disadvantage' ? Math.min.apply(Math, rolls) : rolls[0];\n      allRolls.push({\n        rolls: rolls,\n        total: finalRoll\n      });\n    }\n    var grandTotal = allRolls.reduce(function (sum, roll) {\n      return sum + roll.total;\n    }, 0) + modifier;\n    var newResult = {\n      dice: diceQuantity + \"d\" + sides,\n      rolls: allRolls.map(function (r) {\n        return r.rolls;\n      }).flat(),\n      individualTotals: allRolls.map(function (r) {\n        return r.total;\n      }),\n      modifier: modifier,\n      rollType: rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n    setDiceHistory(function (prev) {\n      return [newResult].concat(_toConsumableArray(prev.slice(0, 49)));\n    });\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n  var handleCellPress = useCallback(function () {\n    var _ref14 = _asyncToGenerator(function* (row, col) {\n      if (!firebaseRef.current) return;\n      try {\n        var position = row + \"-\" + col;\n        var newTokens = _objectSpread({}, tokens);\n        if (tokens[position]) {\n          delete newTokens[position];\n        } else {\n          newTokens[position] = {\n            name: \"Token \" + (Object.keys(tokens).length + 1),\n            color: currentColor,\n            hp: 10,\n            maxHp: 10,\n            initiativeBonus: 0,\n            effects: [],\n            position: position\n          };\n        }\n        yield set(firebaseRef.current, {\n          tokens: newTokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          lastUpdate: Date.now()\n        });\n        setTokens(newTokens);\n      } catch (error) {\n        console.error('Error updating tokens:', error);\n        Alert.alert('Error', 'Failed to update token');\n      }\n    });\n    return function (_x, _x2) {\n      return _ref14.apply(this, arguments);\n    };\n  }(), [tokens, currentColor, layers, initiative, inCombat, currentTurn, partyLoot]);\n  var savePlayerData = useCallback(function () {\n    var _ref15 = _asyncToGenerator(function* (updatedCharacters) {\n      if (!playerName || !roomCode) return;\n      try {\n        var roomPlayerRef = ref(database, \"rooms/\" + roomCode + \"/players/\" + playerName);\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerData = {\n          characters: updatedCharacters,\n          lastUpdate: Date.now()\n        };\n        yield Promise.all([set(roomPlayerRef, playerData), set(globalPlayerRef, playerData)]);\n      } catch (error) {\n        console.error('Error saving player data:', error);\n        Alert.alert('Error', 'Failed to save character data');\n      }\n    });\n    return function (_x3) {\n      return _ref15.apply(this, arguments);\n    };\n  }(), [playerName, roomCode]);\n  var connectToRoom = useCallback(function () {\n    var _ref16 = _asyncToGenerator(function* (code) {\n      if (!code.trim() || !playerName) {\n        Alert.alert(\"Error\", \"Please enter a room code and player name\");\n        return;\n      }\n      setIsJoining(true);\n      setIsLoading(true);\n      try {\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerSnapshot = yield get(globalPlayerRef);\n        if (playerSnapshot.exists()) {\n          var playerData = playerSnapshot.val();\n          setCharacters(playerData.characters || []);\n        }\n        var gameRef = ref(database, \"rooms/\" + code);\n        firebaseRef.current = gameRef;\n        var snapshot = yield get(gameRef);\n        if (!snapshot.exists()) {\n          yield set(gameRef, initialGameState);\n        }\n        var unsubscribe = onValue(gameRef, function (snapshot) {\n          var data = snapshot.val();\n          if (data) {\n            setTokens(data.tokens || {});\n            setLayers(data.layers || initialGameState.layers);\n            setInitiative(data.initiative || []);\n            setInCombat(data.inCombat || false);\n            setCurrentTurn(data.currentTurn || 0);\n            setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n            if (data.players && data.players[playerName]) {\n              setCharacters(data.players[playerName].characters || []);\n            }\n          }\n        });\n        unsubscribeRef.current = unsubscribe;\n        setRoomCode(code);\n        setShowRoomModal(false);\n        setIsConnected(true);\n      } catch (error) {\n        console.error('Connection error:', error);\n        Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n        setIsConnected(false);\n      } finally {\n        setIsJoining(false);\n        setIsLoading(false);\n      }\n    });\n    return function (_x4) {\n      return _ref16.apply(this, arguments);\n    };\n  }(), [playerName]);\n  useEffect(function () {\n    var handleOffline = function handleOffline() {\n      Alert.alert('Connection Lost', 'Please check your internet connection', [{\n        text: 'OK'\n      }]);\n    };\n    window.addEventListener('offline', handleOffline);\n    return function () {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n  var layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%'\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    }\n  };\n  return _jsx(SafeAreaView, {\n    style: [styles.container, isDarkMode && styles.darkMode],\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TokenModal, {\n        showTokenModal: showTokenModal,\n        setShowTokenModal: setShowTokenModal,\n        selectedToken: selectedToken,\n        setSelectedToken: setSelectedToken,\n        tokens: tokens,\n        firebaseRef: firebaseRef,\n        initialGameState: initialGameState,\n        layers: layers,\n        initiative: initiative,\n        inCombat: inCombat,\n        currentTurn: currentTurn,\n        THEME: THEME\n      }), _jsx(RoomModal, {\n        showRoomModal: showRoomModal,\n        setShowRoomModal: setShowRoomModal,\n        isConnected: isConnected,\n        roomCode: roomCode,\n        setRoomCode: setRoomCode,\n        isJoining: isJoining,\n        connectToRoom: connectToRoom\n      }), _jsx(PlayerNameModal, {\n        visible: showPlayerNameModal && !playerName,\n        onSubmit: function onSubmit(name) {\n          setPlayerName(name);\n          setShowPlayerNameModal(false);\n          setIsConnected(true);\n        }\n      }), _jsx(PartyLootModal, {\n        visible: showPartyLoot,\n        onClose: function onClose() {\n          return setShowPartyLoot(false);\n        },\n        partyLoot: partyLoot,\n        playerName: playerName,\n        onUpdate: function onUpdate(updatedLoot) {\n          setPartyLoot(updatedLoot);\n          if (firebaseRef.current) {\n            set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n              tokens: tokens,\n              layers: layers,\n              initiative: initiative,\n              inCombat: inCombat,\n              currentTurn: currentTurn,\n              partyLoot: updatedLoot\n            }));\n          }\n        }\n      }), _jsx(CharacterSheetModal, {\n        visible: showCharacterSheet,\n        onClose: function onClose() {\n          return setShowCharacterSheet(false);\n        },\n        character: selectedCharacter || {\n          name: '',\n          class: '',\n          level: 1,\n          owner: playerName,\n          proficiencyBonus: 2,\n          abilityScores: {\n            STR: 10,\n            DEX: 10,\n            CON: 10,\n            INT: 10,\n            WIS: 10,\n            CHA: 10\n          },\n          proficientSkills: [],\n          currency: {\n            CP: 0,\n            SP: 0,\n            EP: 0,\n            GP: 0,\n            PP: 0\n          },\n          items: [],\n          inventory: []\n        },\n        characters: characters,\n        onUpdate: (function () {\n          var _ref17 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n              var newCharacters = selectedCharacter ? characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              }) : [].concat(_toConsumableArray(characters), [updatedCharacter]);\n              setCharacters(newCharacters);\n              var playerRef = ref(database, \"players/\" + playerName);\n              yield set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n              if (firebaseRef.current) {\n                var roomPlayerRef = ref(database, \"rooms/\" + roomCode + \"/players/\" + playerName);\n                yield set(roomPlayerRef, {\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                });\n              }\n              setShowCharacterSheet(false);\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          });\n          return function (_x5) {\n            return _ref17.apply(this, arguments);\n          };\n        }())\n      }), _jsx(InventoryModal, {\n        visible: showInventory,\n        onClose: function onClose() {\n          return setShowInventory(false);\n        },\n        character: selectedCharacter,\n        onUpdate: (function () {\n          var _ref18 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              var newCharacters = characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              });\n              setCharacters(newCharacters);\n              yield savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          });\n          return function (_x6) {\n            return _ref18.apply(this, arguments);\n          };\n        }())\n      }), !isConnected ? _jsx(View, {\n        style: styles.loadingContainer,\n        children: isLoading ? _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(ActivityIndicator, {\n            size: \"large\",\n            color: THEME.accent\n          }), _jsx(Text, {\n            style: [styles.loadingText, {\n              marginTop: 20\n            }],\n            children: \"Connecting to room...\"\n          })]\n        }) : _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Enter a room code to begin\"\n        })\n      }) : _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"D&D Combat Tracker\"\n          }), _jsxs(ScrollView, {\n            horizontal: isSmallScreen,\n            showsHorizontalScrollIndicator: false,\n            contentContainerStyle: styles.controls,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: function onPress() {\n                return setShowRoomModal(true);\n              },\n              children: _jsxs(Text, {\n                style: styles.buttonText,\n                children: [\"Room: \", roomCode]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: handleInitiativeRoll,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Roll Initiative\"\n              })\n            }), inCombat && _jsxs(_Fragment, {\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  var nextTurn = (currentTurn + 1) % initiative.length;\n                  setCurrentTurn(nextTurn);\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: true,\n                      currentTurn: nextTurn\n                    }));\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Next Turn\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: [],\n                      inCombat: false,\n                      currentTurn: 0\n                    }));\n                  }\n                  setInitiative([]);\n                  setInCombat(false);\n                  setCurrentTurn(0);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"End Combat\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.danger\n              }],\n              onPress: function onPress() {\n                Alert.alert(\"Leave Room\", \"Are you sure you want to leave this room?\", [{\n                  text: \"Cancel\",\n                  style: \"cancel\"\n                }, {\n                  text: \"Leave\",\n                  style: \"destructive\",\n                  onPress: function onPress() {\n                    if (unsubscribeRef.current) {\n                      unsubscribeRef.current();\n                      unsubscribeRef.current = null;\n                    }\n                    if (firebaseRef.current) {\n                      off(firebaseRef.current);\n                      firebaseRef.current = null;\n                    }\n                    setIsConnected(false);\n                    setRoomCode('');\n                    setTokens({});\n                    setInitiative([]);\n                    setInCombat(false);\n                    setCurrentTurn(0);\n                    setPartyLoot(initialGameState.partyLoot);\n                    setShowRoomModal(true);\n                    setShowPlayerNameModal(true);\n                  }\n                }]);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Leave Room\"\n              })\n            })]\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.content,\n          children: _jsxs(View, {\n            style: styles.mainArea,\n            children: [_jsxs(View, {\n              style: styles.gridSection,\n              children: [_jsx(ScrollView, {\n                horizontal: true,\n                contentContainerStyle: {\n                  minWidth: '100%'\n                },\n                children: _jsx(ScrollView, {\n                  children: _jsxs(View, {\n                    style: [styles.gridContainer, {\n                      transform: [{\n                        scale: zoomLevel\n                      }]\n                    }],\n                    children: [_jsx(View, {\n                      style: styles.colorPicker,\n                      children: COLORS.map(function (color) {\n                        return _jsx(TouchableOpacity, {\n                          style: [styles.colorButton, {\n                            backgroundColor: color\n                          }, color === currentColor && styles.selectedColor],\n                          onPress: function onPress() {\n                            return setCurrentColor(color);\n                          }\n                        }, color);\n                      })\n                    }), Array.from({\n                      length: GRID_SIZE\n                    }).map(function (_, row) {\n                      return _jsx(View, {\n                        style: styles.row,\n                        children: Array.from({\n                          length: GRID_SIZE\n                        }).map(function (_, col) {\n                          var _initiative$currentTu;\n                          var position = row + \"-\" + col;\n                          var token = tokens[position];\n                          var isCurrentTurn = inCombat && ((_initiative$currentTu = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu.position) === position;\n                          return _jsx(TouchableOpacity, {\n                            style: [styles.cell, token && {\n                              backgroundColor: token.color\n                            }, isCurrentTurn && styles.currentTurn],\n                            onPress: function onPress() {\n                              return handleCellPress(row, col);\n                            },\n                            onLongPress: function onLongPress() {\n                              if (token) {\n                                setSelectedToken(_objectSpread(_objectSpread({}, token), {}, {\n                                  position: position\n                                }));\n                                setShowTokenModal(true);\n                              }\n                            },\n                            children: token && _jsxs(View, {\n                              style: styles.tokenContent,\n                              children: [_jsx(Text, {\n                                style: [styles.tokenText, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                numberOfLines: 1,\n                                children: token.name\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [token.hp, \"/\", token.maxHp]\n                              }), token.effects && token.effects.length > 0 && _jsx(View, {\n                                style: statusStyles.tokenEffects,\n                                children: token.effects.map(function (effect) {\n                                  var statusEffect = STATUS_EFFECTS.find(function (e) {\n                                    return e.id === effect;\n                                  });\n                                  return statusEffect ? _jsx(Text, {\n                                    style: statusStyles.effectIcon,\n                                    children: statusEffect.icon\n                                  }, effect) : null;\n                                })\n                              })]\n                            })\n                          }, col);\n                        })\n                      }, row);\n                    })]\n                  })\n                })\n              }), _jsx(GridZoomControls, {\n                zoomLevel: zoomLevel,\n                setZoomLevel: setZoomLevel\n              })]\n            }), _jsxs(View, {\n              style: styles.sidebar,\n              children: [_jsxs(View, {\n                style: layoutStyles.sidePanel,\n                children: [_jsx(Text, {\n                  style: layoutStyles.sidePanelTitle,\n                  children: \"Character Management\"\n                }), _jsxs(View, {\n                  style: layoutStyles.buttonRow,\n                  children: [_jsx(TouchableOpacity, {\n                    style: layoutStyles.panelButton,\n                    onPress: function onPress() {\n                      setSelectedCharacter(null);\n                      setShowCharacterSheet(true);\n                    },\n                    children: _jsx(Text, {\n                      style: layoutStyles.panelButtonText,\n                      children: \"New Character\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: layoutStyles.panelButton,\n                    onPress: function onPress() {\n                      return setShowPartyLoot(true);\n                    },\n                    children: _jsx(Text, {\n                      style: layoutStyles.panelButtonText,\n                      children: \"Party Loot\"\n                    })\n                  })]\n                }), _jsx(ScrollView, {\n                  style: {\n                    maxHeight: 200\n                  },\n                  children: characters.filter(function (char) {\n                    return char.owner === playerName;\n                  }).map(function (char, index) {\n                    return _jsxs(View, {\n                      style: [layoutStyles.characterItem, {\n                        marginBottom: 8\n                      }],\n                      children: [_jsxs(View, {\n                        style: layoutStyles.characterInfo,\n                        children: [_jsx(Text, {\n                          style: layoutStyles.characterName,\n                          children: char.name\n                        }), _jsxs(Text, {\n                          style: layoutStyles.characterDetails,\n                          children: [\"Level \", char.level, \" \", char.class]\n                        })]\n                      }), _jsxs(View, {\n                        style: layoutStyles.characterButtons,\n                        children: [_jsx(TouchableOpacity, {\n                          style: [layoutStyles.characterButton, {\n                            backgroundColor: THEME.accent\n                          }],\n                          onPress: function onPress() {\n                            setSelectedCharacter(char);\n                            setShowCharacterSheet(true);\n                          },\n                          children: _jsx(Text, {\n                            style: layoutStyles.characterButtonText,\n                            children: \"Sheet\"\n                          })\n                        }), _jsx(TouchableOpacity, {\n                          style: [layoutStyles.characterButton, {\n                            backgroundColor: THEME.success\n                          }],\n                          onPress: function onPress() {\n                            setSelectedCharacter(char);\n                            setShowInventory(true);\n                          },\n                          children: _jsx(Text, {\n                            style: layoutStyles.characterButtonText,\n                            children: \"Loot\"\n                          })\n                        })]\n                      })]\n                    }, index);\n                  })\n                })]\n              }), _jsxs(View, {\n                style: diceStyles.dicePanel,\n                children: [_jsxs(View, {\n                  style: diceStyles.diceHeader,\n                  children: [_jsx(Text, {\n                    style: diceStyles.diceTitle,\n                    children: \"Dice Roller\"\n                  }), _jsx(TouchableOpacity, {\n                    style: diceStyles.clearButton,\n                    onPress: function onPress() {\n                      return setDiceHistory([]);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.buttonText,\n                      children: \"Clear History\"\n                    })\n                  })]\n                }), _jsxs(View, {\n                  style: diceStyles.diceControls,\n                  children: [_jsxs(View, {\n                    style: diceStyles.controlsRow,\n                    children: [_jsxs(View, {\n                      style: diceStyles.controlGroup,\n                      children: [_jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'advantage' && diceStyles.controlActive, rollType === 'advantage' && {\n                          backgroundColor: THEME.success\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'advantage' ? 'normal' : 'advantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Advantage\"\n                        })\n                      }), _jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'disadvantage' && diceStyles.controlActive, rollType === 'disadvantage' && {\n                          backgroundColor: THEME.danger\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'disadvantage' ? 'normal' : 'disadvantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Disadvantage\"\n                        })\n                      })]\n                    }), _jsxs(View, {\n                      style: diceStyles.modifierGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.modifierLabel,\n                        children: \"Modifier\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.modifierInput,\n                        value: String(modifier),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 0;\n                          setModifier(num);\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    })]\n                  }), _jsx(View, {\n                    style: diceStyles.controlsRow,\n                    children: _jsxs(View, {\n                      style: diceStyles.quantityGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.quantityLabel,\n                        children: \"Quantity\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.quantityInput,\n                        value: String(diceQuantity),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 1;\n                          setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    })\n                  })]\n                }), _jsx(View, {\n                  style: diceStyles.diceGrid,\n                  children: DICE_TYPES.map(function (_ref19) {\n                    var sides = _ref19.sides,\n                      color = _ref19.color;\n                    return _jsxs(View, {\n                      style: diceStyles.diceContainer,\n                      children: [_jsx(DiceRoller, {\n                        sides: sides,\n                        color: color,\n                        quantity: diceQuantity,\n                        onRoll: function onRoll(firstResult) {\n                          var allRolls = Array.from({\n                            length: diceQuantity\n                          }, function () {\n                            return Math.floor(Math.random() * sides) + 1;\n                          });\n                          var finalRolls = allRolls.map(function (roll) {\n                            if (rollType !== 'normal') {\n                              var secondRoll = Math.floor(Math.random() * sides) + 1;\n                              return rollType === 'advantage' ? Math.max(roll, secondRoll) : Math.min(roll, secondRoll);\n                            }\n                            return roll;\n                          });\n                          var total = finalRolls.reduce(function (sum, roll) {\n                            return sum + roll;\n                          }, 0) + modifier;\n                          var newResult = {\n                            dice: diceQuantity + \"d\" + sides,\n                            rolls: allRolls,\n                            individualTotals: finalRolls,\n                            modifier: modifier,\n                            rollType: rollType,\n                            total: total,\n                            timestamp: Date.now()\n                          };\n                          setDiceHistory(function (prev) {\n                            return [newResult].concat(_toConsumableArray(prev.slice(0, 49)));\n                          });\n                          Vibration.vibrate(50);\n                        }\n                      }), _jsxs(Text, {\n                        style: diceStyles.diceButtonText,\n                        children: [\"d\", sides]\n                      })]\n                    }, sides);\n                  })\n                }), _jsx(View, {\n                  style: diceStyles.historyContainer,\n                  children: _jsx(ScrollView, {\n                    style: diceStyles.historyScroll,\n                    children: diceHistory.map(function (result) {\n                      var _result$individualTot;\n                      return _jsxs(View, {\n                        style: diceStyles.historyItem,\n                        children: [_jsxs(View, {\n                          style: diceStyles.historyLeft,\n                          children: [_jsx(View, {\n                            style: diceStyles.historyInfo,\n                            children: _jsxs(Text, {\n                              style: diceStyles.historyDice,\n                              children: [result.dice, result.modifier ? \" + \" + result.modifier : '', result.rollType === 'advantage' ? ' (Adv)' : result.rollType === 'disadvantage' ? ' (Dis)' : '']\n                            })\n                          }), result.individualTotals && result.individualTotals.length > 1 && _jsxs(Text, {\n                            style: diceStyles.historyRolls,\n                            children: [\"Individual: [\", result.individualTotals.join(', '), \"]\"]\n                          }), result.rolls.length > ((_result$individualTot = result.individualTotals) == null ? void 0 : _result$individualTot.length) && _jsxs(Text, {\n                            style: diceStyles.historyRolls,\n                            children: [\"Rolls: \", result.rolls.join(', ')]\n                          })]\n                        }), _jsx(Text, {\n                          style: diceStyles.historyTotal,\n                          children: result.total\n                        })]\n                      }, result.timestamp);\n                    })\n                  })\n                })]\n              }), inCombat && initiative.length > 0 && _jsxs(View, {\n                style: styles.initiativeList,\n                children: [_jsx(Text, {\n                  style: styles.boxTitle,\n                  children: \"Initiative Order\"\n                }), _jsx(ScrollView, {\n                  style: styles.initiativeScroll,\n                  children: initiative.map(function (item, index) {\n                    return _jsx(View, {\n                      style: [styles.initiativeItem, index === currentTurn && styles.currentInitiative],\n                      children: _jsx(Text, {\n                        style: [styles.initiativeText, index === currentTurn && styles.currentInitiativeText],\n                        children: item.details\n                      })\n                    }, item.position);\n                  })\n                })]\n              })]\n            })]\n          })\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","memo","StyleSheet","View","Text","TouchableOpacity","Pressable","TextInput","ScrollView","Alert","Modal","KeyboardAvoidingView","Platform","SafeAreaView","ActivityIndicator","Keyboard","Vibration","Dimensions","initializeApp","getDatabase","ref","onValue","set","get","off","debounce","GestureScrollView","DiceRoller","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","LETTERS","Array","from","length","_","i","String","fromCharCode","COLORS","GRID_SIZE","ABILITY_SCORES","SKILLS","STR","DEX","CON","INT","WIS","CHA","CURRENCY","DICE_TYPES","sides","color","STATUS_EFFECTS","id","name","icon","windowDimensions","isSmallScreen","width","THEME","primary","secondary","accent","gold","danger","success","text","light","dark","background","panel","initialGameState","tokens","layers","grid","terrain","effects","fog","initiative","inCombat","currentTurn","settings","gridSize","showCoordinates","partyLoot","currency","CP","SP","EP","GP","PP","items","currentViewer","characters","lastUpdate","Date","now","styles","create","container","flex","backgroundColor","height","header","padding","title","fontSize","fontWeight","marginBottom","controls","flexDirection","flexWrap","gap","justifyContent","controlButton","borderRadius","minWidth","alignItems","content","mainArea","minHeight","gridSection","sidebar","flexShrink","gridContainer","row","cell","borderWidth","borderColor","tokenContent","tokenText","textAlign","tokenHp","modalOverlay","modalContainer","modalContent","modalTitle","input","modalButtons","marginTop","modalButton","buttonText","loadingContainer","loadingText","loadingButtonContent","diceBox","diceControls","diceButtons","diceButton","diceHistory","maxHeight","diceResultContainer","borderBottomWidth","borderBottomColor","diceResult","diceTotal","diceRolls","initiativeList","initiativeScroll","initiativeItem","currentInitiative","initiativeText","currentInitiativeText","zoomControls","position","right","bottom","display","zoomButton","opacity","advantageButton","advantageActive","modifierInput","boxTitle","colorPicker","colorButton","margin","selectedColor","additionalStyles","characterSheet","maxWidth","sheetHeader","sheetSection","sectionTitle","abilityScores","abilityBox","abilityLabel","abilityScore","abilityMod","skillsList","skillItem","proficientDot","marginRight","skillName","skillMod","closeButton","top","closeButtonText","lootSection","currencyRow","currencyInput","currencyLabel","itemRow","itemInput","removeButton","addButton","lootHeader","itemInfo","addedBy","diceStyles","dicePanel","diceHeader","diceTitle","diceGrid","boxShadow","diceButtonText","controlGroup","controlActive","modifierGroup","modifierLabel","historyContainer","historyScroll","historyItem","paddingVertical","paddingHorizontal","historyLeft","historyInfo","historyDice","historyRolls","historyTotal","clearButton","quantityGroup","quantityLabel","quantityInput","controlsRow","diceContainer","overflow","statusStyles","effectsContainer","borderTopWidth","borderTopColor","paddingTop","effectsTitle","effectsGrid","effectButton","effectActive","effectText","tokenEffects","effectIcon","saveGameState","_ref","_asyncToGenerator","firebaseRef","current","error","console","alert","apply","arguments","CharacterSheetModal","_ref2","visible","onClose","character","onUpdate","_useState","class","level","owner","proficiencyBonus","proficientSkills","inventory","_useState2","_slicedToArray","editedCharacter","setEditedCharacter","calculateModifier","score","Math","floor","handleAbilityScoreChange","ability","value","newScore","parseInt","prev","_objectSpread","_defineProperty","toggleProficiency","skill","includes","filter","s","concat","_toConsumableArray","getSkillModifier","profBonus","handleSave","_ref3","updatedCharacter","transparent","animationType","onRequestClose","children","style","onPress","onChangeText","placeholder","placeholderTextColor","keyboardType","map","maxLength","selectTextOnFocus","Object","entries","_ref4","_ref5","skills","quantity","notes","item","index","newItems","TokenModal","_ref6","showTokenModal","setShowTokenModal","selectedToken","setSelectedToken","cursor","dismiss","behavior","select","ios","android","keyboardVerticalOffset","e","stopPropagation","blurOnSubmit","autoComplete","spellCheck","enablesReturnKeyAutomatically","hp","max","maxHp","initiativeBonus","effect","_selectedToken$effect","currentEffects","newEffects","newTokens","modalStyles","left","zIndex","RoomModal","_ref7","showRoomModal","setShowRoomModal","isConnected","roomCode","setRoomCode","isJoining","connectToRoom","pointerEvents","trim","toLowerCase","autoCapitalize","autoCorrect","editable","autoFocus","disabled","marginLeft","PartyLootModal","_ref8","playerName","_useState3","_useState4","editedLoot","setEditedLoot","type","toString","buttonRow","button","GridZoomControls","_ref9","zoomLevel","setZoomLevel","debouncedZoom","newZoom","min","InventoryModal","_ref10","_useState5","_useState6","editedInventory","setEditedInventory","newInventory","PlayerNameModal","_ref11","onSubmit","_useState7","_useState8","setName","viewerStyles","viewersList","viewersTitle","viewerName","App","_useState9","_useState10","_useState11","_useState12","setIsConnected","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","setIsJoining","_useState17","_useState18","isUpdating","setIsUpdating","_useState19","_useState20","_useState21","_useState22","isDarkMode","setIsDarkMode","_useState23","_useState24","_useState25","_useState26","setTokens","_useState27","_useState28","currentColor","setCurrentColor","_useState29","_useState30","setInitiative","_useState31","_useState32","setInCombat","_useState33","_useState34","setCurrentTurn","_useState35","_useState36","setLayers","_useState37","_useState38","setDiceHistory","_useState39","_useState40","advantage","setAdvantage","_useState41","_useState42","modifier","setModifier","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","setPartyLoot","_useState49","_useState50","showPartyLoot","setShowPartyLoot","_useState51","_useState52","diceQuantity","setDiceQuantity","_useState53","_useState54","setCharacters","_useState55","_useState56","showCharacterSheet","setShowCharacterSheet","_useState57","_useState58","selectedCharacter","setSelectedCharacter","_useState59","_useState60","showInventory","setShowInventory","_useState61","_useState62","setPlayerName","_useState63","_useState64","showPlayerNameModal","setShowPlayerNameModal","_useState65","_useState66","rollType","setRollType","unsubscribeRef","handleDisconnect","handleInitiativeRoll","keys","rolls","_ref12","_ref13","token","roll","random","details","sort","a","b","rollDice","allRolls","d","numRolls","push","finalRoll","total","grandTotal","reduce","sum","newResult","dice","r","flat","individualTotals","timestamp","slice","vibrate","handleCellPress","_ref14","col","_x","_x2","savePlayerData","_ref15","updatedCharacters","roomPlayerRef","globalPlayerRef","playerData","Promise","all","_x3","_ref16","code","playerSnapshot","exists","val","gameRef","snapshot","unsubscribe","data","players","_x4","handleOffline","window","addEventListener","removeEventListener","layoutStyles","sidePanel","sidePanelTitle","panelButton","panelButtonText","darkMode","updatedLoot","_ref17","Error","newCharacters","char","playerRef","_x5","_ref18","_x6","size","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","nextTurn","transform","scale","_initiative$currentTu","isCurrentTurn","onLongPress","numberOfLines","statusEffect","find","characterItem","characterInfo","characterName","characterDetails","characterButtons","characterButton","characterButtonText","num","_ref19","onRoll","firstResult","finalRolls","secondRoll","result","_result$individualTot","join"],"sources":["C:/Users/Daniel/Desktop/3d-dice/App.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef, memo } from 'react';\r\nimport { \r\n  StyleSheet, \r\n  View, \r\n  Text, \r\n  TouchableOpacity, \r\n  Pressable,\r\n  TextInput, \r\n  ScrollView, \r\n  Alert, \r\n  Modal,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n  Keyboard,\r\n  Vibration,\r\n  Dimensions\r\n} from 'react-native';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { \r\n  getDatabase, \r\n  ref, \r\n  onValue, \r\n  set, \r\n  get, \r\n  off \r\n} from 'firebase/database';\r\nimport { debounce } from 'lodash';\r\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\r\nimport { DiceRoller } from './components/DiceModel';\r\n\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\r\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\r\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\r\n  projectId: \"dndcombattracker-572b0\",\r\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\r\n  messagingSenderId: \"812186225431\",\r\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst database = getDatabase(app);\r\n\r\n// Constants\r\nconst LETTERS = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\r\nconst COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f', '#9b59b6', '#1abc9c', '#e67e22', '#ffffff'];\r\nconst GRID_SIZE = 10;\r\nconst ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\r\nconst SKILLS = {\r\n  STR: ['Athletics'],\r\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\r\n  CON: [],\r\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\r\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\r\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\r\n};\r\nconst CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\r\nconst DICE_TYPES = [\r\n  { sides: 4, color: '#FF6B6B' },\r\n  { sides: 6, color: '#4ECDC4' },\r\n  { sides: 8, color: '#45B7D1' },\r\n  { sides: 10, color: '#96CEB4' },\r\n  { sides: 12, color: '#FFEEAD' },\r\n  { sides: 20, color: '#D4A5A5' },\r\n  { sides: 100, color: '#9B59B6' }\r\n];\r\nconst STATUS_EFFECTS = [\r\n  { id: 'blinded', name: 'Blinded', icon: '👁️' },\r\n  { id: 'charmed', name: 'Charmed', icon: '💕' },\r\n  { id: 'deafened', name: 'Deafened', icon: '👂' },\r\n  { id: 'frightened', name: 'Frightened', icon: '😨' },\r\n  { id: 'grappled', name: 'Grappled', icon: '🤼' },\r\n  { id: 'incapacitated', name: 'Incapacitated', icon: '💫' },\r\n  { id: 'invisible', name: 'Invisible', icon: '👻' },\r\n  { id: 'paralyzed', name: 'Paralyzed', icon: '⚡' },\r\n  { id: 'petrified', name: 'Petrified', icon: '🗿' },\r\n  { id: 'poisoned', name: 'Poisoned', icon: '🤢' },\r\n  { id: 'prone', name: 'Prone', icon: '⬇️' },\r\n  { id: 'restrained', name: 'Restrained', icon: '⛓️' },\r\n  { id: 'stunned', name: 'Stunned', icon: '💫' },\r\n  { id: 'unconscious', name: 'Unconscious', icon: '💤' }\r\n];\r\n\r\n// Get window dimensions\r\nconst windowDimensions = Dimensions.get('window');\r\nconst isSmallScreen = windowDimensions.width < 768;\r\n\r\n// Theme configuration\r\nconst THEME = {\r\n  primary: '#1E1E1E',\r\n  secondary: '#2D2D2D',\r\n  accent: '#7289DA',\r\n  gold: '#FFD700',\r\n  danger: '#ED4245',\r\n  success: '#3BA55C',\r\n  text: {\r\n    light: '#FFFFFF',\r\n    dark: '#1E1E1E'\r\n  },\r\n  background: {\r\n    primary: '#1E1E1E',\r\n    secondary: '#2D2D2D',\r\n    dark: '#141414',\r\n    panel: '#363636'\r\n  }\r\n};\r\n\r\n// Initial game state\r\nconst initialGameState = {\r\n  tokens: {},\r\n  layers: {\r\n    grid: true,\r\n    terrain: {},\r\n    tokens: {},\r\n    effects: {},\r\n    fog: {}\r\n  },\r\n  initiative: [],\r\n  inCombat: false,\r\n  currentTurn: 0,\r\n  settings: {\r\n    gridSize: GRID_SIZE,\r\n    showCoordinates: true,\r\n  },\r\n  partyLoot: {\r\n    currency: { CP: 0, SP: 0, EP: 0, GP: 0, PP: 0 },\r\n    items: [],\r\n    currentViewer: null\r\n  },\r\n  characters: [],\r\n  lastUpdate: Date.now()\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: THEME.background.primary,\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  header: {\r\n    padding: isSmallScreen ? 10 : 20,\r\n    backgroundColor: THEME.background.panel,\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    fontSize: isSmallScreen ? 18 : 24,\r\n    fontWeight: 'bold',\r\n    color: THEME.text.light,\r\n    marginBottom: 10,\r\n  },\r\n  controls: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 10,\r\n    justifyContent: isSmallScreen ? 'center' : 'flex-start',\r\n  },\r\n  controlButton: {\r\n    padding: isSmallScreen ? 8 : 10,\r\n    borderRadius: 5,\r\n    minWidth: isSmallScreen ? 80 : 100,\r\n    alignItems: 'center',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    width: '100%',\r\n  },\r\n  mainArea: {\r\n    flex: 1,\r\n    flexDirection: isSmallScreen ? 'column' : 'row',\r\n    padding: isSmallScreen ? 10 : 20,\r\n    gap: 20,\r\n    minHeight: '100%',\r\n  },\r\n  gridSection: {\r\n    flex: 1,\r\n    minHeight: isSmallScreen ? 400 : '100%',\r\n  },\r\n  sidebar: {\r\n    width: isSmallScreen ? '100%' : 350,\r\n    flexShrink: 0,\r\n  },\r\n  gridContainer: {\r\n    padding: isSmallScreen ? 5 : 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n  },\r\n  cell: {\r\n    width: isSmallScreen ? 35 : 60,\r\n    height: isSmallScreen ? 35 : 60,\r\n    borderWidth: 1,\r\n    borderColor: THEME.accent,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: THEME.background.secondary,\r\n  },\r\n  tokenContent: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: isSmallScreen ? 1 : 2,\r\n  },\r\n  tokenText: {\r\n    fontSize: isSmallScreen ? 10 : 12,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  tokenHp: {\r\n    fontSize: isSmallScreen ? 8 : 10,\r\n    textAlign: 'center',\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContainer: {\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  modalContent: {\r\n    backgroundColor: THEME.background.panel,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    width: isSmallScreen ? '90%' : 400,\r\n  },\r\n  modalTitle: {\r\n    fontSize: isSmallScreen ? 18 : 20,\r\n    fontWeight: 'bold',\r\n    color: THEME.text.light,\r\n    marginBottom: 15,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: THEME.accent,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    color: THEME.text.light,\r\n    backgroundColor: THEME.background.primary,\r\n  },\r\n  modalButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 15,\r\n  },\r\n  modalButton: {\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    minWidth: 100,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: THEME.text.light,\r\n    fontWeight: 'bold',\r\n    fontSize: isSmallScreen ? 12 : 14,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: THEME.background.primary,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  loadingText: {\r\n    color: THEME.text.light,\r\n    fontSize: 16,\r\n    marginTop: 10,\r\n  },\r\n  loadingButtonContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  diceBox: {\r\n    width: '100%',\r\n    backgroundColor: THEME.background.panel,\r\n    borderRadius: 10,\r\n    padding: isSmallScreen ? 8 : 15,\r\n  },\r\n  diceControls: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  diceButtons: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 5,\r\n    justifyContent: 'center',\r\n  },\r\n  diceButton: {\r\n    padding: isSmallScreen ? 5 : 10,\r\n    backgroundColor: THEME.primary,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    minWidth: isSmallScreen ? 30 : 60,\r\n  },\r\n  diceHistory: {\r\n    maxHeight: isSmallScreen ? 100 : 200,\r\n    marginTop: 10,\r\n  },\r\n  diceResultContainer: {\r\n    padding: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: THEME.accent + '40',\r\n  },\r\n  diceResult: {\r\n    color: THEME.text.light,\r\n  },\r\n  diceTotal: {\r\n    fontWeight: 'bold',\r\n    color: THEME.accent,\r\n  },\r\n  diceRolls: {\r\n    color: THEME.text.light + '80',\r\n    fontSize: 12,\r\n  },\r\n  initiativeList: {\r\n    backgroundColor: THEME.background.panel,\r\n    borderRadius: 10,\r\n    padding: isSmallScreen ? 8 : 15,\r\n    width: '100%',\r\n  },\r\n  initiativeScroll: {\r\n    maxHeight: isSmallScreen ? 150 : 200,\r\n  },\r\n  initiativeItem: {\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 5,\r\n    backgroundColor: THEME.background.primary,\r\n  },\r\n  currentInitiative: {\r\n    backgroundColor: THEME.accent,\r\n  },\r\n  initiativeText: {\r\n    color: THEME.text.light,\r\n  },\r\n  currentInitiativeText: {\r\n    color: THEME.text.dark,\r\n    fontWeight: 'bold',\r\n  },\r\n  zoomControls: {\r\n    position: 'absolute',\r\n    right: 10,\r\n    bottom: 10,\r\n    flexDirection: 'row',\r\n    gap: 10,\r\n    display: isSmallScreen ? 'flex' : 'none',\r\n  },\r\n  zoomButton: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: THEME.background.panel,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    opacity: 0.8,\r\n  },\r\n  advantageButton: {\r\n    backgroundColor: THEME.background.primary,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n  },\r\n  advantageActive: {\r\n    backgroundColor: THEME.accent,\r\n  },\r\n  modifierInput: {\r\n    backgroundColor: THEME.background.primary,\r\n    color: THEME.text.light,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    width: 60,\r\n    textAlign: 'center',\r\n  },\r\n  boxTitle: {\r\n    color: THEME.text.light,\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  colorPicker: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    gap: isSmallScreen ? 2 : 5,\r\n    marginBottom: isSmallScreen ? 5 : 10,\r\n  },\r\n  colorButton: {\r\n    width: isSmallScreen ? 20 : 30,\r\n    height: isSmallScreen ? 20 : 30,\r\n    borderRadius: isSmallScreen ? 10 : 15,\r\n    margin: isSmallScreen ? 1 : 2,\r\n  },\r\n  selectedColor: {\r\n    borderWidth: 2,\r\n    borderColor: THEME.accent,\r\n  },\r\n});\r\n\r\nconst additionalStyles = StyleSheet.create({\r\n  characterSheet: {\r\n    backgroundColor: THEME.background.panel,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    width: isSmallScreen ? '95%' : '80%',\r\n    maxWidth: 800,\r\n    maxHeight: '90%',\r\n  },\r\n  sheetHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 20,\r\n  },\r\n  sheetSection: {\r\n    marginBottom: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: THEME.text.light,\r\n    marginBottom: 10,\r\n  },\r\n  abilityScores: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    gap: 10,\r\n  },\r\n  abilityBox: {\r\n    backgroundColor: THEME.background.primary,\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    width: isSmallScreen ? '30%' : 100,\r\n    marginBottom: 10,\r\n  },\r\n  abilityLabel: {\r\n    color: THEME.text.light,\r\n    fontWeight: 'bold',\r\n  },\r\n  abilityScore: {\r\n    color: THEME.accent,\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: 5,\r\n  },\r\n  abilityMod: {\r\n    color: THEME.text.light,\r\n  },\r\n  skillsList: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 10,\r\n  },\r\n  skillItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: THEME.background.primary,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    minWidth: isSmallScreen ? '45%' : 200,\r\n  },\r\n  proficientDot: {\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: 5,\r\n    marginRight: 5,\r\n  },\r\n  skillName: {\r\n    color: THEME.text.light,\r\n    flex: 1,\r\n  },\r\n  skillMod: {\r\n    color: THEME.accent,\r\n    fontWeight: 'bold',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    top: 10,\r\n    right: 10,\r\n    padding: 10,\r\n  },\r\n  closeButtonText: {\r\n    color: THEME.text.light,\r\n    fontSize: 20,\r\n  },\r\n  lootSection: {\r\n    backgroundColor: THEME.background.primary,\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    marginBottom: 15,\r\n  },\r\n  currencyRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  currencyInput: {\r\n    backgroundColor: THEME.background.secondary,\r\n    color: THEME.text.light,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    width: 80,\r\n    textAlign: 'center',\r\n  },\r\n  currencyLabel: {\r\n    color: THEME.text.light,\r\n    width: 30,\r\n  },\r\n  itemRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n    gap: 10,\r\n  },\r\n  itemInput: {\r\n    flex: 1,\r\n    backgroundColor: THEME.background.secondary,\r\n    color: THEME.text.light,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n  },\r\n  removeButton: {\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    backgroundColor: THEME.danger,\r\n  },\r\n  addButton: {\r\n    backgroundColor: THEME.success,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  lootHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  itemInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 10,\r\n    flex: 1,\r\n  },\r\n  addedBy: {\r\n    color: THEME.text.light,\r\n    opacity: 0.6,\r\n    fontSize: 12,\r\n    marginTop: 4,\r\n  },\r\n});\r\n\r\nconst diceStyles = StyleSheet.create({\r\n  dicePanel: {\r\n    backgroundColor: THEME.background.panel,\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 15,\r\n  },\r\n  diceHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  diceTitle: {\r\n    color: THEME.text.light,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  diceGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 8,\r\n    justifyContent: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  diceButton: {\r\n    width: isSmallScreen ? 45 : 60,\r\n    height: isSmallScreen ? 45 : 60,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    boxShadow: '0px 2px 3.84px rgba(0, 0, 0, 0.25)', // Replace elevation and shadowProps\r\n  },\r\n  diceButtonText: {\r\n    color: THEME.text.light,\r\n    fontSize: isSmallScreen ? 14 : 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  diceControls: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    backgroundColor: THEME.background.primary,\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginBottom: 15,\r\n  },\r\n  controlGroup: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 8,\r\n  },\r\n  controlButton: {\r\n    backgroundColor: THEME.background.secondary,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    minWidth: 80,\r\n    alignItems: 'center',\r\n  },\r\n  controlActive: {\r\n    backgroundColor: THEME.accent,\r\n  },\r\n  modifierGroup: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 5,\r\n  },\r\n  modifierLabel: {\r\n    color: THEME.text.light,\r\n    fontSize: 14,\r\n  },\r\n  modifierInput: {\r\n    backgroundColor: THEME.background.secondary,\r\n    color: THEME.text.light,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    width: 50,\r\n    textAlign: 'center',\r\n  },\r\n  historyContainer: {\r\n    backgroundColor: THEME.background.primary,\r\n    borderRadius: 8,\r\n    maxHeight: 200,\r\n  },\r\n  historyScroll: {\r\n    padding: 10,\r\n  },\r\n  historyItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: THEME.background.secondary,\r\n  },\r\n  historyLeft: {\r\n    flex: 1,\r\n  },\r\n  historyInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 5,\r\n  },\r\n  historyDice: {\r\n    color: THEME.text.light,\r\n    opacity: 0.7,\r\n  },\r\n  historyRolls: {\r\n    color: THEME.text.light,\r\n    fontSize: 12,\r\n    opacity: 0.5,\r\n  },\r\n  historyTotal: {\r\n    color: THEME.accent,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  clearButton: {\r\n    backgroundColor: THEME.background.secondary,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  quantityGroup: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 5,\r\n  },\r\n  quantityLabel: {\r\n    color: THEME.text.light,\r\n    fontSize: 14,\r\n  },\r\n  quantityInput: {\r\n    backgroundColor: THEME.background.secondary,\r\n    color: THEME.text.light,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    width: 50,\r\n    textAlign: 'center',\r\n  },\r\n  diceControls: {\r\n    flexDirection: 'column',\r\n    backgroundColor: THEME.background.primary,\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginBottom: 15,\r\n    gap: 10,\r\n  },\r\n  controlsRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  diceContainer: {\r\n    width: isSmallScreen ? 80 : 100,\r\n    height: isSmallScreen ? 80 : 100,\r\n    borderRadius: 10,\r\n    overflow: 'hidden',\r\n    marginBottom: 5,\r\n  }\r\n});\r\n\r\nconst statusStyles = StyleSheet.create({\r\n  effectsContainer: {\r\n    marginTop: 15,\r\n    borderTopWidth: 1,\r\n    borderTopColor: THEME.accent + '40',\r\n    paddingTop: 15,\r\n  },\r\n  effectsTitle: {\r\n    color: THEME.text.light,\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  effectsGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 8,\r\n  },\r\n  effectButton: {\r\n    backgroundColor: THEME.background.primary,\r\n    padding: 8,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    minWidth: 80,\r\n  },\r\n  effectActive: {\r\n    backgroundColor: THEME.accent,\r\n  },\r\n  effectText: {\r\n    color: THEME.text.light,\r\n    fontSize: 12,\r\n  },\r\n  tokenEffects: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    gap: 2,\r\n    marginTop: 2,\r\n  },\r\n  effectIcon: {\r\n    fontSize: isSmallScreen ? 10 : 12,\r\n  },\r\n});\r\n\r\n// Create a helper function to save game state\r\nconst saveGameState = async () => {\r\n  if (firebaseRef.current) {\r\n    try {\r\n      await set(firebaseRef.current, {\r\n        tokens,\r\n        layers,\r\n        initiative,\r\n        inCombat,\r\n        currentTurn,\r\n        partyLoot,\r\n        characters,\r\n        settings: initialGameState.settings,\r\n        lastUpdate: Date.now()\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving game state:', error);\r\n      Alert.alert('Error', 'Failed to save game state');\r\n    }\r\n  }\r\n};\r\n\r\n// Add this component definition before the TokenModal component\r\nconst CharacterSheetModal = memo(({ visible, onClose, character, characters, onUpdate }) => {\r\n  const [editedCharacter, setEditedCharacter] = useState(() => ({\r\n    name: character?.name || '',\r\n    class: character?.class || '',\r\n    level: character?.level || 1,\r\n    owner: character?.owner || '',\r\n    proficiencyBonus: character?.proficiencyBonus || 2,\r\n    abilityScores: character?.abilityScores || {\r\n      STR: 10,\r\n      DEX: 10,\r\n      CON: 10,\r\n      INT: 10,\r\n      WIS: 10,\r\n      CHA: 10\r\n    },\r\n    proficientSkills: character?.proficientSkills || [],\r\n    currency: character?.currency || {\r\n      CP: 0,\r\n      SP: 0,\r\n      EP: 0,\r\n      GP: 0,\r\n      PP: 0\r\n    },\r\n    items: character?.items || [],\r\n    inventory: character?.inventory || []\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (visible && character) {\r\n      setEditedCharacter({\r\n        name: character.name || '',\r\n        class: character.class || '',\r\n        level: character.level || 1,\r\n        owner: character.owner || '',\r\n        proficiencyBonus: character.proficiencyBonus || 2,\r\n        abilityScores: character.abilityScores || {\r\n          STR: 10,\r\n          DEX: 10,\r\n          CON: 10,\r\n          INT: 10,\r\n          WIS: 10,\r\n          CHA: 10\r\n        },\r\n        proficientSkills: character.proficientSkills || [],\r\n        currency: character.currency || {\r\n          CP: 0,\r\n          SP: 0,\r\n          EP: 0,\r\n          GP: 0,\r\n          PP: 0\r\n        },\r\n        items: character.items || [],\r\n        inventory: character.inventory || []\r\n      });\r\n    }\r\n  }, [visible, character]);\r\n\r\n  // Add error boundary\r\n  if (!character) {\r\n    console.error('No character data provided to CharacterSheetModal');\r\n    return null;\r\n  }\r\n\r\n  const calculateModifier = (score) => {\r\n    return Math.floor((score - 10) / 2);\r\n  };\r\n\r\n  const handleAbilityScoreChange = (ability, value) => {\r\n    const newScore = parseInt(value) || 0;\r\n    setEditedCharacter(prev => ({\r\n      ...prev,\r\n      abilityScores: {\r\n        ...prev.abilityScores,\r\n        [ability]: newScore\r\n      }\r\n    }));\r\n  };\r\n\r\n  const toggleProficiency = (skill) => {\r\n    setEditedCharacter(prev => ({\r\n      ...prev,\r\n      proficientSkills: prev.proficientSkills.includes(skill)\r\n        ? prev.proficientSkills.filter(s => s !== skill)\r\n        : [...prev.proficientSkills, skill]\r\n    }));\r\n  };\r\n\r\n  const getSkillModifier = (skill, ability) => {\r\n    const abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\r\n    const profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\r\n    return abilityMod + profBonus;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const updatedCharacter = {\r\n        ...character,\r\n        ...editedCharacter\r\n      };\r\n\r\n      onUpdate(updatedCharacter);\r\n    } catch (error) {\r\n      console.error('Error saving character:', error);\r\n      Alert.alert('Error', 'Failed to save character');\r\n    }\r\n  };\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      transparent={true}\r\n      animationType=\"fade\"\r\n      onRequestClose={onClose}\r\n    >\r\n      <View style={styles.modalOverlay}>\r\n        <View style={additionalStyles.characterSheet}>\r\n          <TouchableOpacity \r\n            style={additionalStyles.closeButton}\r\n            onPress={onClose}\r\n          >\r\n            <Text style={additionalStyles.closeButtonText}>×</Text>\r\n          </TouchableOpacity>\r\n\r\n          <GestureScrollView>\r\n            {/* Basic Info */}\r\n            <View style={additionalStyles.sheetSection}>\r\n              <Text style={additionalStyles.sectionTitle}>Character Info</Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                value={editedCharacter.name}\r\n                onChangeText={(text) => setEditedCharacter(prev => ({...prev, name: text}))}\r\n                placeholder=\"Character Name\"\r\n                placeholderTextColor={THEME.text.light + '80'}\r\n              />\r\n              <View style={{ flexDirection: 'row', gap: 10 }}>\r\n                <TextInput\r\n                  style={[styles.input, { flex: 1 }]}\r\n                  value={editedCharacter.class}\r\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, class: text}))}\r\n                  placeholder=\"Class\"\r\n                  placeholderTextColor={THEME.text.light + '80'}\r\n                />\r\n                <TextInput\r\n                  style={[styles.input, { flex: 1 }]}\r\n                  value={String(editedCharacter.level)}\r\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, level: parseInt(text) || 1}))}\r\n                  placeholder=\"Level\"\r\n                  keyboardType=\"numeric\"\r\n                  placeholderTextColor={THEME.text.light + '80'}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            {/* Ability Scores */}\r\n            <View style={additionalStyles.sheetSection}>\r\n              <Text style={additionalStyles.sectionTitle}>Ability Scores</Text>\r\n              <View style={additionalStyles.abilityScores}>\r\n                {ABILITY_SCORES.map(ability => (\r\n                  <View key={ability} style={additionalStyles.abilityBox}>\r\n                    <Text style={additionalStyles.abilityLabel}>{ability}</Text>\r\n                    <TextInput\r\n                      style={additionalStyles.abilityScore}\r\n                      value={String(editedCharacter.abilityScores[ability])}\r\n                      onChangeText={(text) => handleAbilityScoreChange(ability, text)}\r\n                      keyboardType=\"numeric\"\r\n                      maxLength={2}\r\n                      selectTextOnFocus={true}\r\n                    />\r\n                    <Text style={additionalStyles.abilityMod}>\r\n                      {calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : ''}\r\n                      {calculateModifier(editedCharacter.abilityScores[ability])}\r\n                    </Text>\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            </View>\r\n\r\n            {/* Skills */}\r\n            <View style={additionalStyles.sheetSection}>\r\n              <Text style={additionalStyles.sectionTitle}>Skills</Text>\r\n              <View style={additionalStyles.skillsList}>\r\n                {Object.entries(SKILLS).map(([ability, skills]) =>\r\n                  skills.map(skill => (\r\n                    <TouchableOpacity\r\n                      key={skill}\r\n                      style={additionalStyles.skillItem}\r\n                      onPress={() => toggleProficiency(skill)}\r\n                    >\r\n                      <View style={[\r\n                        additionalStyles.proficientDot,\r\n                        {\r\n                          backgroundColor: editedCharacter.proficientSkills.includes(skill)\r\n                            ? THEME.accent\r\n                            : THEME.background.secondary\r\n                        }\r\n                      ]} />\r\n                      <Text style={additionalStyles.skillName}>{skill}</Text>\r\n                      <Text style={additionalStyles.skillMod}>\r\n                        {getSkillModifier(skill, ability) >= 0 ? '+' : ''}\r\n                        {getSkillModifier(skill, ability)}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  ))\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            {/* Inventory */}\r\n            <View style={additionalStyles.sheetSection}>\r\n              <Text style={additionalStyles.sectionTitle}>Inventory</Text>\r\n              \r\n              <View style={additionalStyles.lootSection}>\r\n                {/* Currency */}\r\n                {CURRENCY.map(currency => (\r\n                  <View key={currency} style={additionalStyles.currencyRow}>\r\n                    <Text style={additionalStyles.currencyLabel}>{currency}</Text>\r\n                    <TextInput\r\n                      style={additionalStyles.currencyInput}\r\n                      value={String(editedCharacter.currency[currency] || 0)}\r\n                      onChangeText={(text) => {\r\n                        const value = parseInt(text) || 0;\r\n                        setEditedCharacter(prev => ({\r\n                          ...prev,\r\n                          currency: {\r\n                            ...prev.currency,\r\n                            [currency]: value\r\n                          }\r\n                        }));\r\n                      }}\r\n                      keyboardType=\"numeric\"\r\n                      placeholderTextColor={THEME.text.light + '80'}\r\n                    />\r\n                  </View>\r\n                ))}\r\n              </View>\r\n\r\n              <View style={additionalStyles.lootSection}>\r\n                <View style={additionalStyles.lootHeader}>\r\n                  <Text style={additionalStyles.sectionTitle}>Items</Text>\r\n                  <TouchableOpacity\r\n                    style={additionalStyles.addButton}\r\n                    onPress={() => {\r\n                      setEditedCharacter(prev => ({\r\n                        ...prev,\r\n                        items: [...prev.items, { name: '', quantity: 1, notes: '', addedBy: character.name }]\r\n                      }));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.buttonText}>Add Item</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {editedCharacter.items.map((item, index) => (\r\n                  <View key={index} style={additionalStyles.itemRow}>\r\n                    <View style={additionalStyles.itemInfo}>\r\n                      <TextInput\r\n                        style={[additionalStyles.itemInput, { flex: 2 }]}\r\n                        value={item.name}\r\n                        onChangeText={(text) => {\r\n                          const newItems = [...editedCharacter.items];\r\n                          newItems[index] = { ...item, name: text };\r\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\r\n                        }}\r\n                        placeholder=\"Item name\"\r\n                        placeholderTextColor={THEME.text.light + '80'}\r\n                      />\r\n                      <TextInput\r\n                        style={[additionalStyles.itemInput, { width: 60 }]}\r\n                        value={String(item.quantity)}\r\n                        onChangeText={(text) => {\r\n                          const newItems = [...editedCharacter.items];\r\n                          newItems[index] = { ...item, quantity: parseInt(text) || 1 };\r\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\r\n                        }}\r\n                        keyboardType=\"numeric\"\r\n                        placeholder=\"Qty\"\r\n                        placeholderTextColor={THEME.text.light + '80'}\r\n                      />\r\n                      {item.addedBy === character.name && (\r\n                        <TouchableOpacity\r\n                          style={additionalStyles.removeButton}\r\n                          onPress={() => {\r\n                            setEditedCharacter(prev => ({\r\n                              ...prev,\r\n                              items: prev.items.filter((_, i) => i !== index)\r\n                            }));\r\n                          }}\r\n                        >\r\n                          <Text style={styles.buttonText}>×</Text>\r\n                        </TouchableOpacity>\r\n                      )}\r\n                    </View>\r\n                    <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\r\n                  </View>\r\n                ))}\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\r\n                onPress={handleSave}\r\n              >\r\n                <Text style={styles.buttonText}>Save Changes</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </GestureScrollView>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n// Memoized Modal Components\r\nconst TokenModal = memo(({ \r\n  showTokenModal, \r\n  setShowTokenModal, \r\n  selectedToken, \r\n  setSelectedToken, \r\n  tokens, \r\n  firebaseRef, \r\n  initialGameState, \r\n  layers, \r\n  initiative, \r\n  inCombat, \r\n  currentTurn, \r\n  THEME \r\n}) => (\r\n  <Modal\r\n    visible={showTokenModal}\r\n    transparent={true}\r\n    animationType=\"fade\"\r\n    onRequestClose={() => setShowTokenModal(false)}\r\n  >\r\n    <Pressable \r\n      style={[styles.modalOverlay, { cursor: 'default' }]}\r\n      onPress={() => Keyboard.dismiss()}\r\n    >\r\n      <View style={styles.modalContent}>\r\n        <KeyboardAvoidingView \r\n          behavior={Platform.select({ ios: 'padding', android: 'height' })}\r\n          style={styles.modalContainer}\r\n          keyboardVerticalOffset={Platform.select({ ios: 64, android: 0 })}\r\n        >\r\n          <Pressable onPress={e => e.stopPropagation()}>\r\n            <Text style={styles.modalTitle}>Edit Token</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              value={selectedToken?.name}\r\n              onChangeText={(text) => {\r\n                setSelectedToken(prev => ({\r\n                  ...prev,\r\n                  name: text\r\n                }));\r\n              }}\r\n              placeholder=\"Token Name\"\r\n              placeholderTextColor={THEME.text.light + '80'}\r\n              blurOnSubmit={false}\r\n              autoComplete=\"off\"\r\n              spellCheck={false}\r\n              selectTextOnFocus={true}\r\n              enablesReturnKeyAutomatically={true}\r\n            />\r\n            \r\n            <View style={{ flexDirection: 'row', gap: 10, marginBottom: 10 }}>\r\n              <View style={{ flex: 1 }}>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  value={String(selectedToken?.hp || '')}\r\n                  onChangeText={(text) => {\r\n                    const hp = parseInt(text) || 0;\r\n                    setSelectedToken(prev => ({\r\n                      ...prev,\r\n                      hp: Math.max(0, hp)\r\n                    }));\r\n                  }}\r\n                  keyboardType=\"numeric\"\r\n                  placeholder=\"Current HP\"\r\n                  placeholderTextColor={THEME.text.light + '80'}\r\n                  blurOnSubmit={false}\r\n                  autoComplete=\"off\"\r\n                  selectTextOnFocus={true}\r\n                  enablesReturnKeyAutomatically={true}\r\n                />\r\n              </View>\r\n              <View style={{ flex: 1 }}>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  value={String(selectedToken?.maxHp || '')}\r\n                  onChangeText={(text) => {\r\n                    const maxHp = parseInt(text) || 1;\r\n                    setSelectedToken(prev => ({\r\n                      ...prev,\r\n                      maxHp: Math.max(1, maxHp)\r\n                    }));\r\n                  }}\r\n                  keyboardType=\"numeric\"\r\n                  placeholder=\"Max HP\"\r\n                  placeholderTextColor={THEME.text.light + '80'}\r\n                  blurOnSubmit={false}\r\n                  autoComplete=\"off\"\r\n                  selectTextOnFocus={true}\r\n                  enablesReturnKeyAutomatically={true}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              value={String(selectedToken?.initiativeBonus || '0')}\r\n              onChangeText={(text) => {\r\n                setSelectedToken(prev => ({\r\n                  ...prev,\r\n                  initiativeBonus: parseInt(text) || 0\r\n                }));\r\n              }}\r\n              keyboardType=\"numeric\"\r\n              placeholder=\"Initiative Bonus\"\r\n              placeholderTextColor={THEME.text.light + '80'}\r\n              blurOnSubmit={false}\r\n              autoComplete=\"off\"\r\n              selectTextOnFocus={true}\r\n              enablesReturnKeyAutomatically={true}\r\n            />\r\n\r\n            <View style={statusStyles.effectsContainer}>\r\n              <Text style={statusStyles.effectsTitle}>Status Effects</Text>\r\n              <View style={statusStyles.effectsGrid}>\r\n                {STATUS_EFFECTS.map(effect => (\r\n                  <TouchableOpacity\r\n                    key={effect.id}\r\n                    style={[\r\n                      statusStyles.effectButton,\r\n                      selectedToken?.effects?.includes(effect.id) && statusStyles.effectActive\r\n                    ]}\r\n                    onPress={() => {\r\n                      setSelectedToken(prev => {\r\n                        const currentEffects = prev.effects || [];\r\n                        const newEffects = currentEffects.includes(effect.id)\r\n                          ? currentEffects.filter(e => e !== effect.id)\r\n                          : [...currentEffects, effect.id];\r\n                        return {\r\n                          ...prev,\r\n                          effects: newEffects\r\n                        };\r\n                      });\r\n                    }}\r\n                  >\r\n                    <Text style={statusStyles.effectText}>\r\n                      {effect.icon} {effect.name}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, { backgroundColor: THEME.danger }]}\r\n                onPress={() => {\r\n                  if (firebaseRef.current && selectedToken) {\r\n                    const newTokens = { ...tokens };\r\n                    delete newTokens[selectedToken.position];\r\n                    set(firebaseRef.current, { \r\n                      ...initialGameState,\r\n                      tokens: newTokens,\r\n                      layers,\r\n                      initiative,\r\n                      inCombat,\r\n                      currentTurn\r\n                    });\r\n                    setShowTokenModal(false);\r\n                  }\r\n                }}\r\n              >\r\n                <Text style={styles.buttonText}>Delete</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\r\n                onPress={() => {\r\n                  if (firebaseRef.current && selectedToken) {\r\n                    const newTokens = {\r\n                      ...tokens,\r\n                      [selectedToken.position]: selectedToken\r\n                    };\r\n                    set(firebaseRef.current, {\r\n                      ...initialGameState,\r\n                      tokens: newTokens,\r\n                      layers,\r\n                      initiative,\r\n                      inCombat,\r\n                      currentTurn\r\n                    });\r\n                    setShowTokenModal(false);\r\n                  }\r\n                }}\r\n              >\r\n                <Text style={styles.buttonText}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </Pressable>\r\n        </KeyboardAvoidingView>\r\n      </View>\r\n    </Pressable>\r\n  </Modal>\r\n));\r\n\r\n// Update the RoomModal styles\r\nconst modalStyles = StyleSheet.create({\r\n  modalOverlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000, // Add high z-index\r\n  },\r\n  modalContent: {\r\n    backgroundColor: THEME.background.panel,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    width: '90%',\r\n    maxWidth: 400,\r\n    zIndex: 1001, // Even higher z-index\r\n  },\r\n});\r\n\r\n// Update the RoomModal component\r\nconst RoomModal = memo(({ \r\n  showRoomModal, \r\n  setShowRoomModal, \r\n  isConnected, \r\n  roomCode, \r\n  setRoomCode, \r\n  isJoining, \r\n  connectToRoom \r\n}) => (\r\n  <Modal\r\n    visible={showRoomModal}\r\n    transparent={true}\r\n    animationType=\"fade\"\r\n    onRequestClose={() => {}}\r\n    style={{ zIndex: 999 }} // Add z-index to Modal\r\n  >\r\n    <View style={[modalStyles.modalOverlay, { pointerEvents: 'auto' }]}>\r\n      <View style={modalStyles.modalContent}>\r\n        <Text style={styles.modalTitle}>Join Room</Text>\r\n        <TextInput\r\n          style={[styles.input, { marginBottom: 15, zIndex: 1002 }]} // Add z-index to input\r\n          value={roomCode}\r\n          onChangeText={(text) => {\r\n            setRoomCode(text.trim().toLowerCase());\r\n          }}\r\n          placeholder=\"Enter room code...\"\r\n          placeholderTextColor={THEME.text.light + '80'}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          editable={!isJoining}\r\n          autoFocus={true}\r\n          blurOnSubmit={false}\r\n        />\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.modalButton,\r\n            { \r\n              backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\r\n              width: '100%',\r\n              zIndex: 1002 // Add z-index to button\r\n            }\r\n          ]}\r\n          onPress={() => {\r\n            Keyboard.dismiss();\r\n            connectToRoom(roomCode);\r\n          }}\r\n          disabled={isJoining}\r\n        >\r\n          {isJoining ? (\r\n            <View style={styles.loadingButtonContent}>\r\n              <ActivityIndicator color={THEME.text.light} />\r\n              <Text style={[styles.buttonText, { marginLeft: 10 }]}>\r\n                Connecting...\r\n              </Text>\r\n            </View>\r\n          ) : (\r\n            <Text style={styles.buttonText}>Join Room</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  </Modal>\r\n));\r\n\r\nconst PartyLootModal = memo(({ visible, onClose, partyLoot, onUpdate, playerName }) => {\r\n  const [editedLoot, setEditedLoot] = useState({\r\n    currency: {\r\n      CP: 0,\r\n      SP: 0,\r\n      EP: 0,\r\n      GP: 0,\r\n      PP: 0\r\n    },\r\n    items: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (visible && partyLoot) {\r\n      setEditedLoot({\r\n        currency: partyLoot.currency || {\r\n          CP: 0,\r\n          SP: 0,\r\n          EP: 0,\r\n          GP: 0,\r\n          PP: 0\r\n        },\r\n        items: partyLoot.items || []\r\n      });\r\n    }\r\n  }, [visible, partyLoot]);\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      transparent={true}\r\n      animationType=\"fade\"\r\n      onRequestClose={onClose}\r\n    >\r\n      <View style={styles.modalOverlay}>\r\n        <View style={[styles.modalContent, { maxHeight: '90%' }]}>\r\n          <Text style={styles.modalTitle}>Party Loot</Text>\r\n          \r\n          <ScrollView>\r\n            {/* Currency Section */}\r\n            <View style={additionalStyles.lootSection}>\r\n              {CURRENCY.map(type => (\r\n                <View key={type} style={additionalStyles.currencyRow}>\r\n                  <Text style={additionalStyles.currencyLabel}>{type}</Text>\r\n                  <TextInput\r\n                    style={additionalStyles.currencyInput}\r\n                    value={String(editedLoot.currency[type] || 0)}\r\n                    onChangeText={(text) => {\r\n                      const value = parseInt(text) || 0;\r\n                      setEditedLoot(prev => ({\r\n                        ...prev,\r\n                        currency: {\r\n                          ...prev.currency,\r\n                          [type]: value\r\n                        }\r\n                      }));\r\n                    }}\r\n                    keyboardType=\"numeric\"\r\n                    placeholderTextColor={THEME.text.light + '80'}\r\n                  />\r\n                </View>\r\n              ))}\r\n            </View>\r\n\r\n            {/* Items Section */}\r\n            <View style={additionalStyles.lootSection}>\r\n              <View style={additionalStyles.lootHeader}>\r\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\r\n                <TouchableOpacity\r\n                  style={additionalStyles.addButton}\r\n                  onPress={() => {\r\n                    setEditedLoot(prev => ({\r\n                      ...prev,\r\n                      items: [...prev.items, { \r\n                        id: Date.now().toString(),\r\n                        name: '',\r\n                        quantity: 1,\r\n                        addedBy: playerName \r\n                      }]\r\n                    }));\r\n                  }}\r\n                >\r\n                  <Text style={styles.buttonText}>Add Item</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {editedLoot.items.map((item, index) => (\r\n                <View key={item.id || index} style={additionalStyles.itemRow}>\r\n                  <TextInput\r\n                    style={[additionalStyles.itemInput, { flex: 2 }]}\r\n                    value={item.name}\r\n                    onChangeText={(text) => {\r\n                      const newItems = [...editedLoot.items];\r\n                      newItems[index] = { ...item, name: text };\r\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\r\n                    }}\r\n                    placeholder=\"Item name\"\r\n                    placeholderTextColor={THEME.text.light + '80'}\r\n                  />\r\n                  <TextInput\r\n                    style={[additionalStyles.itemInput, { width: 60 }]}\r\n                    value={String(item.quantity)}\r\n                    onChangeText={(text) => {\r\n                      const newItems = [...editedLoot.items];\r\n                      newItems[index] = { ...item, quantity: parseInt(text) || 1 };\r\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\r\n                    }}\r\n                    keyboardType=\"numeric\"\r\n                    placeholder=\"Qty\"\r\n                    placeholderTextColor={THEME.text.light + '80'}\r\n                  />\r\n                  <TouchableOpacity\r\n                    style={additionalStyles.removeButton}\r\n                    onPress={() => {\r\n                      setEditedLoot(prev => ({\r\n                        ...prev,\r\n                        items: prev.items.filter((_, i) => i !== index)\r\n                      }));\r\n                    }}\r\n                  >\r\n                    <Text style={styles.buttonText}>×</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          </ScrollView>\r\n\r\n          <View style={styles.buttonRow}>\r\n            <TouchableOpacity\r\n              style={[styles.button, styles.closeButton]}\r\n              onPress={onClose}\r\n            >\r\n              <Text style={styles.buttonText}>Cancel</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={[styles.button, { backgroundColor: THEME.success }]}\r\n              onPress={() => {\r\n                onUpdate(editedLoot);\r\n                onClose();\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Save Changes</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n// Add this component definition before the App component\r\nconst GridZoomControls = memo(({ zoomLevel, setZoomLevel }) => {\r\n  const debouncedZoom = debounce((newZoom) => {\r\n    setZoomLevel(newZoom);\r\n  }, 100);\r\n\r\n  return (\r\n    <View style={styles.zoomControls}>\r\n      <TouchableOpacity\r\n        style={styles.zoomButton}\r\n        onPress={() => debouncedZoom(Math.max(0.5, zoomLevel - 0.1))}\r\n      >\r\n        <Text style={styles.buttonText}>-</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={styles.zoomButton}\r\n        onPress={() => debouncedZoom(Math.min(2, zoomLevel + 0.1))}\r\n      >\r\n        <Text style={styles.buttonText}>+</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n});\r\n\r\n// Add InventoryModal component\r\nconst InventoryModal = memo(({ visible, onClose, character, onUpdate }) => {\r\n  const [editedInventory, setEditedInventory] = useState({\r\n    currency: character?.currency || {\r\n      CP: 0,\r\n      SP: 0,\r\n      EP: 0,\r\n      GP: 0,\r\n      PP: 0\r\n    },\r\n    inventory: character?.inventory || []\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (visible && character) {\r\n      setEditedInventory({\r\n        currency: character.currency || {\r\n          CP: 0,\r\n          SP: 0,\r\n          EP: 0,\r\n          GP: 0,\r\n          PP: 0\r\n        },\r\n        inventory: character.inventory || []\r\n      });\r\n    }\r\n  }, [visible, character]);\r\n\r\n  if (!visible || !character) return null;\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      transparent={true}\r\n      animationType=\"fade\"\r\n      onRequestClose={onClose}\r\n    >\r\n      <View style={styles.modalOverlay}>\r\n        <View style={additionalStyles.characterSheet}>\r\n          <TouchableOpacity \r\n            style={additionalStyles.closeButton}\r\n            onPress={onClose}\r\n          >\r\n            <Text style={additionalStyles.closeButtonText}>×</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={additionalStyles.sectionTitle}>{character.name}'s Inventory</Text>\r\n\r\n          <GestureScrollView>\r\n            <View style={additionalStyles.lootSection}>\r\n              {/* Currency */}\r\n              {CURRENCY.map(currency => (\r\n                <View key={currency} style={additionalStyles.currencyRow}>\r\n                  <Text style={additionalStyles.currencyLabel}>{currency}</Text>\r\n                  <TextInput\r\n                    style={additionalStyles.currencyInput}\r\n                    value={String(editedInventory.currency[currency] || 0)}\r\n                    onChangeText={(text) => {\r\n                      const value = parseInt(text) || 0;\r\n                      setEditedInventory(prev => ({\r\n                        ...prev,\r\n                        currency: {\r\n                          ...prev.currency,\r\n                          [currency]: value\r\n                        }\r\n                      }));\r\n                    }}\r\n                    keyboardType=\"numeric\"\r\n                    placeholderTextColor={THEME.text.light + '80'}\r\n                  />\r\n                </View>\r\n              ))}\r\n            </View>\r\n\r\n            <View style={additionalStyles.lootSection}>\r\n              <View style={additionalStyles.lootHeader}>\r\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\r\n                <TouchableOpacity\r\n                  style={additionalStyles.addButton}\r\n                  onPress={() => {\r\n                    setEditedInventory(prev => ({\r\n                      ...prev,\r\n                      inventory: [...prev.inventory, { name: '', quantity: 1, notes: '', addedBy: character.name }]\r\n                    }));\r\n                  }}\r\n                >\r\n                  <Text style={styles.buttonText}>Add Item</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {editedInventory.inventory.map((item, index) => (\r\n                <View key={index} style={additionalStyles.itemRow}>\r\n                  <View style={additionalStyles.itemInfo}>\r\n                    <TextInput\r\n                      style={[additionalStyles.itemInput, { flex: 2 }]}\r\n                      value={item.name}\r\n                      onChangeText={(text) => {\r\n                        const newInventory = [...editedInventory.inventory];\r\n                        newInventory[index] = { ...item, name: text };\r\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\r\n                      }}\r\n                      placeholder=\"Item name\"\r\n                      placeholderTextColor={THEME.text.light + '80'}\r\n                    />\r\n                    <TextInput\r\n                      style={[additionalStyles.itemInput, { width: 60 }]}\r\n                      value={String(item.quantity)}\r\n                      onChangeText={(text) => {\r\n                        const newInventory = [...editedInventory.inventory];\r\n                        newInventory[index] = { ...item, quantity: parseInt(text) || 1 };\r\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\r\n                      }}\r\n                      keyboardType=\"numeric\"\r\n                      placeholder=\"Qty\"\r\n                      placeholderTextColor={THEME.text.light + '80'}\r\n                    />\r\n                    {item.addedBy === character.name && (\r\n                      <TouchableOpacity\r\n                        style={additionalStyles.removeButton}\r\n                        onPress={() => {\r\n                          setEditedInventory(prev => ({\r\n                            ...prev,\r\n                            inventory: prev.inventory.filter((_, i) => i !== index)\r\n                          }));\r\n                        }}\r\n                      >\r\n                        <Text style={styles.buttonText}>×</Text>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  </View>\r\n                  <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              style={[styles.modalButton, { backgroundColor: THEME.success }]}\r\n              onPress={() => {\r\n                onUpdate({\r\n                  ...character,\r\n                  currency: editedInventory.currency,\r\n                  inventory: editedInventory.inventory\r\n                });\r\n                onClose();\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Save Changes</Text>\r\n            </TouchableOpacity>\r\n          </GestureScrollView>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n// Add PlayerNameModal component\r\nconst PlayerNameModal = memo(({ visible, onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      transparent={true}\r\n      animationType=\"fade\"\r\n      onRequestClose={() => {}}\r\n    >\r\n      <View style={styles.modalOverlay}>\r\n        <View style={styles.modalContent}>\r\n          <Text style={styles.modalTitle}>Enter Your Name</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={name}\r\n            onChangeText={setName}\r\n            placeholder=\"Your name\"\r\n            placeholderTextColor={THEME.text.light + '80'}\r\n            autoCapitalize=\"words\"\r\n          />\r\n          <TouchableOpacity\r\n            style={[styles.modalButton, { \r\n              backgroundColor: THEME.success,\r\n              width: '100%',\r\n              marginTop: 10\r\n            }]}\r\n            onPress={() => onSubmit(name)}\r\n            disabled={!name.trim()}\r\n          >\r\n            <Text style={styles.buttonText}>Continue</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n});\r\n\r\n// Add to styles\r\nconst viewerStyles = StyleSheet.create({\r\n  viewersList: {\r\n    marginTop: 15,\r\n    padding: 10,\r\n    backgroundColor: THEME.background.primary,\r\n    borderRadius: 5,\r\n  },\r\n  viewersTitle: {\r\n    color: THEME.text.light,\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  viewerName: {\r\n    color: THEME.text.light,\r\n    opacity: 0.8,\r\n    fontSize: 12,\r\n    marginBottom: 2,\r\n  },\r\n});\r\n\r\nexport default function App() {\r\n  // State declarations\r\n  const [roomCode, setRoomCode] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isJoining, setIsJoining] = useState(false);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [showRoomModal, setShowRoomModal] = useState(true);\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n  const [zoomLevel, setZoomLevel] = useState(isSmallScreen ? 0.8 : 1);\r\n  const [tokens, setTokens] = useState({});\r\n  const [currentColor, setCurrentColor] = useState(COLORS[0]);\r\n  const [initiative, setInitiative] = useState([]);\r\n  const [inCombat, setInCombat] = useState(false);\r\n  const [currentTurn, setCurrentTurn] = useState(0);\r\n  const [layers, setLayers] = useState(initialGameState.layers);\r\n  const [diceHistory, setDiceHistory] = useState([]);\r\n  const [advantage, setAdvantage] = useState(false);\r\n  const [modifier, setModifier] = useState(0);\r\n  const [selectedToken, setSelectedToken] = useState(null);\r\n  const [showTokenModal, setShowTokenModal] = useState(false);\r\n  const [partyLoot, setPartyLoot] = useState({\r\n    currency: {\r\n      CP: 0,\r\n      SP: 0,\r\n      EP: 0,\r\n      GP: 0,\r\n      PP: 0\r\n    },\r\n    items: [],\r\n    currentViewer: null\r\n  });\r\n  const [showPartyLoot, setShowPartyLoot] = useState(false);\r\n  const [diceQuantity, setDiceQuantity] = useState(1);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [showCharacterSheet, setShowCharacterSheet] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\r\n  const [showInventory, setShowInventory] = useState(false);\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [showPlayerNameModal, setShowPlayerNameModal] = useState(true);\r\n  const [rollType, setRollType] = useState('normal'); // 'normal', 'advantage', or 'disadvantage'\r\n\r\n  // Refs\r\n  const firebaseRef = useRef(null);\r\n  const unsubscribeRef = useRef(null);\r\n\r\n  // Helper Functions\r\n  const handleDisconnect = useCallback(() => {\r\n    try {\r\n      if (unsubscribeRef.current) {\r\n        unsubscribeRef.current();\r\n        unsubscribeRef.current = null;\r\n      }\r\n      if (firebaseRef.current) {\r\n        off(firebaseRef.current);\r\n        firebaseRef.current = null;\r\n      }\r\n\r\n      // Reset room-specific state\r\n      setIsConnected(false);\r\n      setRoomCode('');\r\n      setTokens({});\r\n      setLayers(initialGameState.layers);\r\n      setInitiative([]);\r\n      setInCombat(false);\r\n      setCurrentTurn(0);\r\n      setDiceHistory([]);\r\n      setAdvantage(false);\r\n      setModifier(0);\r\n      setSelectedToken(null);\r\n      setShowTokenModal(false);\r\n      setPartyLoot(initialGameState.partyLoot);\r\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\r\n      // Don't clear characters or player name\r\n      \r\n    } catch (error) {\r\n      console.error('Error during disconnect:', error);\r\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\r\n    }\r\n  }, []);\r\n\r\n  const handleInitiativeRoll = useCallback(() => {\r\n    if (!tokens || Object.keys(tokens).length === 0) {\r\n      Alert.alert('Error', 'No tokens on the board');\r\n      return;\r\n    }\r\n\r\n    const rolls = Object.entries(tokens).map(([position, token]) => {\r\n      const roll = Math.floor(Math.random() * 20) + 1;\r\n      const initiative = roll + (token.initiativeBonus || 0);\r\n      return {\r\n        position,\r\n        initiative,\r\n        details: `${token.name} (${initiative})`\r\n      };\r\n    });\r\n\r\n    rolls.sort((a, b) => b.initiative - a.initiative);\r\n    \r\n    if (firebaseRef.current) {\r\n      set(firebaseRef.current, {\r\n        ...initialGameState,\r\n        tokens,\r\n        layers,\r\n        initiative: rolls,\r\n        inCombat: true,\r\n        currentTurn: 0\r\n      });\r\n    }\r\n\r\n    setInitiative(rolls);\r\n    setInCombat(true);\r\n    setCurrentTurn(0);\r\n  }, [tokens, layers]);\r\n\r\n  const rollDice = useCallback((sides) => {\r\n    const allRolls = [];\r\n    \r\n    // Roll for each die in quantity\r\n    for (let d = 0; d < diceQuantity; d++) {\r\n      const rolls = [];\r\n      const numRolls = rollType !== 'normal' ? 2 : 1;\r\n      \r\n      // Roll with advantage/disadvantage if enabled\r\n      for (let i = 0; i < numRolls; i++) {\r\n        rolls.push(Math.floor(Math.random() * sides) + 1);\r\n      }\r\n      \r\n      const finalRoll = rollType === 'advantage' \r\n        ? Math.max(...rolls) \r\n        : rollType === 'disadvantage'\r\n          ? Math.min(...rolls)\r\n          : rolls[0];\r\n\r\n      allRolls.push({\r\n        rolls,\r\n        total: finalRoll\r\n      });\r\n    }\r\n    \r\n    // Calculate grand total including modifier\r\n    const grandTotal = allRolls.reduce((sum, roll) => sum + roll.total, 0) + modifier;\r\n    \r\n    const newResult = {\r\n      dice: `${diceQuantity}d${sides}`,\r\n      rolls: allRolls.map(r => r.rolls).flat(),\r\n      individualTotals: allRolls.map(r => r.total),\r\n      modifier,\r\n      rollType,\r\n      total: grandTotal,\r\n      timestamp: Date.now()\r\n    };\r\n    \r\n    setDiceHistory(prev => [newResult, ...prev.slice(0, 49)]);\r\n    Vibration.vibrate(50);\r\n  }, [rollType, modifier, diceQuantity]);\r\n\r\n  const handleCellPress = useCallback(async (row, col) => {\r\n    if (!firebaseRef.current) return;\r\n    \r\n    try {\r\n      const position = `${row}-${col}`;\r\n      const newTokens = { ...tokens };\r\n      \r\n      if (tokens[position]) {\r\n        delete newTokens[position];\r\n      } else {\r\n        newTokens[position] = {\r\n          name: `Token ${Object.keys(tokens).length + 1}`,\r\n          color: currentColor,\r\n          hp: 10,\r\n          maxHp: 10,\r\n          initiativeBonus: 0,\r\n          effects: [],\r\n          position\r\n        };\r\n      }\r\n\r\n      // Update Firebase first\r\n      await set(firebaseRef.current, {\r\n        tokens: newTokens,\r\n        layers,\r\n        initiative,\r\n        inCombat,\r\n        currentTurn,\r\n        partyLoot,\r\n        lastUpdate: Date.now()\r\n      });\r\n\r\n      // Then update local state\r\n      setTokens(newTokens);\r\n\r\n    } catch (error) {\r\n      console.error('Error updating tokens:', error);\r\n      Alert.alert('Error', 'Failed to update token');\r\n    }\r\n  }, [tokens, currentColor, layers, initiative, inCombat, currentTurn, partyLoot]);\r\n\r\n  // Update the savePlayerData function\r\n  const savePlayerData = useCallback(async (updatedCharacters) => {\r\n    if (!playerName || !roomCode) return;\r\n    \r\n    try {\r\n      // Save to both the room and a separate players collection\r\n      const roomPlayerRef = ref(database, `rooms/${roomCode}/players/${playerName}`);\r\n      const globalPlayerRef = ref(database, `players/${playerName}`);\r\n      \r\n      const playerData = {\r\n        characters: updatedCharacters,\r\n        lastUpdate: Date.now()\r\n      };\r\n\r\n      // Update both locations\r\n      await Promise.all([\r\n        set(roomPlayerRef, playerData),\r\n        set(globalPlayerRef, playerData)\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error saving player data:', error);\r\n      Alert.alert('Error', 'Failed to save character data');\r\n    }\r\n  }, [playerName, roomCode]);\r\n\r\n  // Update the connectToRoom function\r\n  const connectToRoom = useCallback(async (code) => {\r\n    if (!code.trim() || !playerName) {\r\n      Alert.alert(\"Error\", \"Please enter a room code and player name\");\r\n      return;\r\n    }\r\n\r\n    setIsJoining(true);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // First try to load player's global data\r\n      const globalPlayerRef = ref(database, `players/${playerName}`);\r\n      const playerSnapshot = await get(globalPlayerRef);\r\n      if (playerSnapshot.exists()) {\r\n        const playerData = playerSnapshot.val();\r\n        setCharacters(playerData.characters || []);\r\n      }\r\n\r\n      const gameRef = ref(database, `rooms/${code}`);\r\n      firebaseRef.current = gameRef;\r\n\r\n      // Check if room exists\r\n      const snapshot = await get(gameRef);\r\n      if (!snapshot.exists()) {\r\n        await set(gameRef, initialGameState);\r\n      }\r\n\r\n      // Set up real-time listener\r\n      const unsubscribe = onValue(gameRef, (snapshot) => {\r\n        const data = snapshot.val();\r\n        if (data) {\r\n          setTokens(data.tokens || {});\r\n          setLayers(data.layers || initialGameState.layers);\r\n          setInitiative(data.initiative || []);\r\n          setInCombat(data.inCombat || false);\r\n          setCurrentTurn(data.currentTurn || 0);\r\n          setPartyLoot(data.partyLoot || initialGameState.partyLoot);\r\n          \r\n          // Update characters from room data if they exist\r\n          if (data.players && data.players[playerName]) {\r\n            setCharacters(data.players[playerName].characters || []);\r\n          }\r\n        }\r\n      });\r\n\r\n      unsubscribeRef.current = unsubscribe;\r\n      setRoomCode(code);\r\n      setShowRoomModal(false);\r\n      setIsConnected(true);\r\n\r\n    } catch (error) {\r\n      console.error('Connection error:', error);\r\n      Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\r\n      setIsConnected(false);\r\n    } finally {\r\n      setIsJoining(false);\r\n      setIsLoading(false);\r\n    }\r\n  }, [playerName]);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    const handleOffline = () => {\r\n      Alert.alert(\r\n        'Connection Lost',\r\n        'Please check your internet connection',\r\n        [{ text: 'OK' }]\r\n      );\r\n    };\r\n\r\n    window.addEventListener('offline', handleOffline);\r\n    return () => {\r\n      window.removeEventListener('offline', handleOffline);\r\n      if (unsubscribeRef.current) {\r\n        unsubscribeRef.current();\r\n      }\r\n      if (firebaseRef.current) {\r\n        off(firebaseRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Add to styles\r\n  const layoutStyles = {\r\n    sidePanel: {\r\n      backgroundColor: THEME.background.panel,\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      marginBottom: 15,\r\n      width: '100%',\r\n    },\r\n    sidePanelTitle: {\r\n      color: THEME.text.light,\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 10,\r\n    },\r\n    buttonRow: {\r\n      flexDirection: 'row',\r\n      gap: 10,\r\n      marginBottom: 10,\r\n    },\r\n    panelButton: {\r\n      backgroundColor: THEME.background.primary,\r\n      padding: 10,\r\n      borderRadius: 5,\r\n      alignItems: 'center',\r\n      flex: 1,\r\n    },\r\n    panelButtonText: {\r\n      color: THEME.text.light,\r\n      fontWeight: 'bold',\r\n    },\r\n  };\r\n\r\n  // Main render return\r\n  return (\r\n    <SafeAreaView style={[styles.container, isDarkMode && styles.darkMode]}>\r\n      <View style={styles.container}>\r\n        {/* Modals stay at the top level */}\r\n        <TokenModal \r\n          showTokenModal={showTokenModal}\r\n          setShowTokenModal={setShowTokenModal}\r\n          selectedToken={selectedToken}\r\n          setSelectedToken={setSelectedToken}\r\n          tokens={tokens}\r\n          firebaseRef={firebaseRef}\r\n          initialGameState={initialGameState}\r\n          layers={layers}\r\n          initiative={initiative}\r\n          inCombat={inCombat}\r\n          currentTurn={currentTurn}\r\n          THEME={THEME}\r\n        />\r\n        \r\n        <RoomModal \r\n          showRoomModal={showRoomModal}\r\n          setShowRoomModal={setShowRoomModal}\r\n          isConnected={isConnected}\r\n          roomCode={roomCode}\r\n          setRoomCode={setRoomCode}\r\n          isJoining={isJoining}\r\n          connectToRoom={connectToRoom}\r\n        />\r\n\r\n        <PlayerNameModal\r\n          visible={showPlayerNameModal && !playerName}\r\n          onSubmit={(name) => {\r\n            setPlayerName(name);\r\n            setShowPlayerNameModal(false);\r\n            setIsConnected(true);\r\n          }}\r\n        />\r\n\r\n        <PartyLootModal\r\n          visible={showPartyLoot}\r\n          onClose={() => setShowPartyLoot(false)}\r\n          partyLoot={partyLoot}\r\n          playerName={playerName}\r\n          onUpdate={(updatedLoot) => {\r\n            setPartyLoot(updatedLoot);\r\n            if (firebaseRef.current) {\r\n              set(firebaseRef.current, {\r\n                ...initialGameState,\r\n                tokens,\r\n                layers,\r\n                initiative,\r\n                inCombat,\r\n                currentTurn,\r\n                partyLoot: updatedLoot\r\n              });\r\n            }\r\n          }}\r\n        />\r\n\r\n        <CharacterSheetModal\r\n          visible={showCharacterSheet}\r\n          onClose={() => setShowCharacterSheet(false)}\r\n          character={selectedCharacter || {\r\n            name: '',\r\n            class: '',\r\n            level: 1,\r\n            owner: playerName,\r\n            proficiencyBonus: 2,\r\n            abilityScores: {\r\n              STR: 10,\r\n              DEX: 10,\r\n              CON: 10,\r\n              INT: 10,\r\n              WIS: 10,\r\n              CHA: 10\r\n            },\r\n            proficientSkills: [],\r\n            currency: {\r\n              CP: 0,\r\n              SP: 0,\r\n              EP: 0,\r\n              GP: 0,\r\n              PP: 0\r\n            },\r\n            items: [],\r\n            inventory: []\r\n          }}\r\n          characters={characters}\r\n          onUpdate={async (updatedCharacter) => {\r\n            try {\r\n              if (!updatedCharacter) {\r\n                throw new Error('No character data to save');\r\n              }\r\n\r\n              // Create new array with updated character\r\n              const newCharacters = selectedCharacter\r\n                ? characters.map(char => \r\n                    char.name === selectedCharacter.name ? updatedCharacter : char\r\n                  )\r\n                : [...characters, updatedCharacter];\r\n              \r\n              // Update local state first\r\n              setCharacters(newCharacters);\r\n\r\n              // Save to Firebase\r\n              const playerRef = ref(database, `players/${playerName}`);\r\n              await set(playerRef, {\r\n                characters: newCharacters,\r\n                lastUpdate: Date.now()\r\n              });\r\n\r\n              // Also save to room data\r\n              if (firebaseRef.current) {\r\n                const roomPlayerRef = ref(database, `rooms/${roomCode}/players/${playerName}`);\r\n                await set(roomPlayerRef, {\r\n                  characters: newCharacters,\r\n                  lastUpdate: Date.now()\r\n                });\r\n              }\r\n\r\n              setShowCharacterSheet(false);\r\n              \r\n            } catch (error) {\r\n              console.error('Error saving character:', error);\r\n              Alert.alert('Error', 'Failed to save character');\r\n            }\r\n          }}\r\n        />\r\n\r\n        <InventoryModal\r\n          visible={showInventory}\r\n          onClose={() => setShowInventory(false)}\r\n          character={selectedCharacter}\r\n          onUpdate={async (updatedCharacter) => {\r\n            try {\r\n              const newCharacters = characters.map(char => \r\n                char.name === selectedCharacter.name ? updatedCharacter : char\r\n              );\r\n              \r\n              setCharacters(newCharacters);\r\n              await savePlayerData(newCharacters);\r\n              setShowInventory(false);\r\n            } catch (error) {\r\n              console.error('Error saving inventory:', error);\r\n              Alert.alert('Error', 'Failed to save inventory');\r\n            }\r\n          }}\r\n        />\r\n\r\n        {!isConnected ? (\r\n          <View style={styles.loadingContainer}>\r\n            {isLoading ? (\r\n              <View style={{ alignItems: 'center' }}>\r\n                <ActivityIndicator size=\"large\" color={THEME.accent} />\r\n                <Text style={[styles.loadingText, { marginTop: 20 }]}>\r\n                  Connecting to room...\r\n                </Text>\r\n              </View>\r\n            ) : (\r\n              <Text style={styles.loadingText}>\r\n                Enter a room code to begin\r\n              </Text>\r\n            )}\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <View style={styles.header}>\r\n              <Text style={styles.title}>D&D Combat Tracker</Text>\r\n              <ScrollView \r\n                horizontal={isSmallScreen} \r\n                showsHorizontalScrollIndicator={false}\r\n                contentContainerStyle={styles.controls}\r\n              >\r\n                <TouchableOpacity \r\n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\r\n                  onPress={() => setShowRoomModal(true)}\r\n                >\r\n                  <Text style={styles.buttonText}>Room: {roomCode}</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\r\n                  onPress={handleInitiativeRoll}\r\n                >\r\n                  <Text style={styles.buttonText}>Roll Initiative</Text>\r\n                </TouchableOpacity>\r\n\r\n                {inCombat && (\r\n                  <>\r\n                    <TouchableOpacity\r\n                      style={[styles.controlButton, { backgroundColor: THEME.success }]}\r\n                      onPress={() => {\r\n                        const nextTurn = (currentTurn + 1) % initiative.length;\r\n                        setCurrentTurn(nextTurn);\r\n                        if (firebaseRef.current) {\r\n                          set(firebaseRef.current, {\r\n                            ...initialGameState,\r\n                            tokens,\r\n                            layers,\r\n                            initiative,\r\n                            inCombat: true,\r\n                            currentTurn: nextTurn\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Text style={styles.buttonText}>Next Turn</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                      style={[styles.controlButton, { backgroundColor: THEME.danger }]}\r\n                      onPress={() => {\r\n                        if (firebaseRef.current) {\r\n                          set(firebaseRef.current, {\r\n                            ...initialGameState,\r\n                            tokens,\r\n                            layers,\r\n                            initiative: [],\r\n                            inCombat: false,\r\n                            currentTurn: 0\r\n                          });\r\n                        }\r\n                        setInitiative([]);\r\n                        setInCombat(false);\r\n                        setCurrentTurn(0);\r\n                      }}\r\n                    >\r\n                      <Text style={styles.buttonText}>End Combat</Text>\r\n                    </TouchableOpacity>\r\n                  </>\r\n                )}\r\n\r\n                <TouchableOpacity\r\n                  style={[styles.controlButton, { backgroundColor: THEME.danger }]}\r\n                  onPress={() => {\r\n                    Alert.alert(\r\n                      \"Leave Room\",\r\n                      \"Are you sure you want to leave this room?\",\r\n                      [\r\n                        { text: \"Cancel\", style: \"cancel\" },\r\n                        { \r\n                          text: \"Leave\", \r\n                          style: \"destructive\",\r\n                          onPress: () => {\r\n                            // Disconnect from Firebase\r\n                            if (unsubscribeRef.current) {\r\n                              unsubscribeRef.current();\r\n                              unsubscribeRef.current = null;\r\n                            }\r\n                            if (firebaseRef.current) {\r\n                              off(firebaseRef.current);\r\n                              firebaseRef.current = null;\r\n                            }\r\n\r\n                            // Reset state\r\n                            setIsConnected(false);\r\n                            setRoomCode('');\r\n                            setTokens({});\r\n                            setInitiative([]);\r\n                            setInCombat(false);\r\n                            setCurrentTurn(0);\r\n                            setPartyLoot(initialGameState.partyLoot);\r\n                            setShowRoomModal(true);\r\n                            setShowPlayerNameModal(true);\r\n                          }\r\n                        }\r\n                      ]\r\n                    );\r\n                  }}\r\n                >\r\n                  <Text style={styles.buttonText}>Leave Room</Text>\r\n                </TouchableOpacity>\r\n              </ScrollView>\r\n            </View>\r\n            <ScrollView style={styles.content}>\r\n              <View style={styles.mainArea}>\r\n                {/* Grid Section */}\r\n                <View style={styles.gridSection}>\r\n                  <ScrollView \r\n                    horizontal \r\n                    contentContainerStyle={{ minWidth: '100%' }}\r\n                  >\r\n                    <ScrollView>\r\n                      <View style={[\r\n                        styles.gridContainer,\r\n                        { transform: [{ scale: zoomLevel }] }\r\n                      ]}>\r\n                        {/* Color Picker */}\r\n                        <View style={styles.colorPicker}>\r\n                          {COLORS.map(color => (\r\n                            <TouchableOpacity\r\n                              key={color}\r\n                              style={[\r\n                                styles.colorButton,\r\n                                { backgroundColor: color },\r\n                                color === currentColor && styles.selectedColor\r\n                              ]}\r\n                              onPress={() => setCurrentColor(color)}\r\n                            />\r\n                          ))}\r\n                        </View>\r\n\r\n                        {/* Grid */}\r\n                        {Array.from({ length: GRID_SIZE }).map((_, row) => (\r\n                          <View key={row} style={styles.row}>\r\n                            {Array.from({ length: GRID_SIZE }).map((_, col) => {\r\n                              const position = `${row}-${col}`;\r\n                              const token = tokens[position];\r\n                              const isCurrentTurn = inCombat && \r\n                                initiative[currentTurn]?.position === position;\r\n\r\n                              return (\r\n                                <TouchableOpacity\r\n                                  key={col}\r\n                                  style={[\r\n                                    styles.cell,\r\n                                    token && { backgroundColor: token.color },\r\n                                    isCurrentTurn && styles.currentTurn\r\n                                  ]}\r\n                                  onPress={() => handleCellPress(row, col)}\r\n                                  onLongPress={() => {\r\n                                    if (token) {\r\n                                      setSelectedToken({ ...token, position });\r\n                                      setShowTokenModal(true);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  {token && (\r\n                                    <View style={styles.tokenContent}>\r\n                                      <Text style={[\r\n                                        styles.tokenText,\r\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\r\n                                      ]} numberOfLines={1}>\r\n                                        {token.name}\r\n                                      </Text>\r\n                                      <Text style={[\r\n                                        styles.tokenHp,\r\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\r\n                                      ]}>\r\n                                        {token.hp}/{token.maxHp}\r\n                                      </Text>\r\n                                      {token.effects && token.effects.length > 0 && (\r\n                                        <View style={statusStyles.tokenEffects}>\r\n                                          {token.effects.map(effect => {\r\n                                            const statusEffect = STATUS_EFFECTS.find(e => e.id === effect);\r\n                                            return statusEffect ? (\r\n                                              <Text key={effect} style={statusStyles.effectIcon}>\r\n                                                {statusEffect.icon}\r\n                                              </Text>\r\n                                            ) : null;\r\n                                          })}\r\n                                        </View>\r\n                                      )}\r\n                                    </View>\r\n                                  )}\r\n                                </TouchableOpacity>\r\n                              );\r\n                            })}\r\n                          </View>\r\n                        ))}\r\n                      </View>\r\n                    </ScrollView>\r\n                  </ScrollView>\r\n                  <GridZoomControls \r\n                    zoomLevel={zoomLevel}\r\n                    setZoomLevel={setZoomLevel}\r\n                  />\r\n                </View>\r\n\r\n                {/* Sidebar */}\r\n                <View style={styles.sidebar}>\r\n                  {/* Character Management Panel */}\r\n                  <View style={layoutStyles.sidePanel}>\r\n                    <Text style={layoutStyles.sidePanelTitle}>Character Management</Text>\r\n                    <View style={layoutStyles.buttonRow}>\r\n                      <TouchableOpacity\r\n                        style={layoutStyles.panelButton}\r\n                        onPress={() => {\r\n                          setSelectedCharacter(null);\r\n                          setShowCharacterSheet(true);\r\n                        }}\r\n                      >\r\n                        <Text style={layoutStyles.panelButtonText}>New Character</Text>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                        style={layoutStyles.panelButton}\r\n                        onPress={() => setShowPartyLoot(true)}\r\n                      >\r\n                        <Text style={layoutStyles.panelButtonText}>Party Loot</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {/* Character List */}\r\n                    <ScrollView style={{ maxHeight: 200 }}>\r\n                      {characters\r\n                        .filter(char => char.owner === playerName)\r\n                        .map((char, index) => (\r\n                          <View key={index} style={[layoutStyles.characterItem, { marginBottom: 8 }]}>\r\n                            <View style={layoutStyles.characterInfo}>\r\n                              <Text style={layoutStyles.characterName}>{char.name}</Text>\r\n                              <Text style={layoutStyles.characterDetails}>\r\n                                Level {char.level} {char.class}\r\n                              </Text>\r\n                            </View>\r\n                            <View style={layoutStyles.characterButtons}>\r\n                              <TouchableOpacity\r\n                                style={[layoutStyles.characterButton, { backgroundColor: THEME.accent }]}\r\n                                onPress={() => {\r\n                                  setSelectedCharacter(char);\r\n                                  setShowCharacterSheet(true);\r\n                                }}\r\n                              >\r\n                                <Text style={layoutStyles.characterButtonText}>Sheet</Text>\r\n                              </TouchableOpacity>\r\n                              <TouchableOpacity\r\n                                style={[layoutStyles.characterButton, { backgroundColor: THEME.success }]}\r\n                                onPress={() => {\r\n                                  setSelectedCharacter(char);\r\n                                  setShowInventory(true);\r\n                                }}\r\n                              >\r\n                                <Text style={layoutStyles.characterButtonText}>Loot</Text>\r\n                              </TouchableOpacity>\r\n                            </View>\r\n                          </View>\r\n                        ))}\r\n                    </ScrollView>\r\n                  </View>\r\n\r\n                  {/* Dice Roller Panel */}\r\n                  <View style={diceStyles.dicePanel}>\r\n                    <View style={diceStyles.diceHeader}>\r\n                      <Text style={diceStyles.diceTitle}>Dice Roller</Text>\r\n                      <TouchableOpacity\r\n                        style={diceStyles.clearButton}\r\n                        onPress={() => setDiceHistory([])}\r\n                      >\r\n                        <Text style={styles.buttonText}>Clear History</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View style={diceStyles.diceControls}>\r\n                      <View style={diceStyles.controlsRow}>\r\n                        <View style={diceStyles.controlGroup}>\r\n                          <TouchableOpacity\r\n                            style={[\r\n                              diceStyles.controlButton,\r\n                              rollType === 'advantage' && diceStyles.controlActive,\r\n                              rollType === 'advantage' && { backgroundColor: THEME.success }\r\n                            ]}\r\n                            onPress={() => setRollType(current => \r\n                              current === 'advantage' ? 'normal' : 'advantage'\r\n                            )}\r\n                          >\r\n                            <Text style={styles.buttonText}>Advantage</Text>\r\n                          </TouchableOpacity>\r\n                          <TouchableOpacity\r\n                            style={[\r\n                              diceStyles.controlButton,\r\n                              rollType === 'disadvantage' && diceStyles.controlActive,\r\n                              rollType === 'disadvantage' && { backgroundColor: THEME.danger }\r\n                            ]}\r\n                            onPress={() => setRollType(current => \r\n                              current === 'disadvantage' ? 'normal' : 'disadvantage'\r\n                            )}\r\n                          >\r\n                            <Text style={styles.buttonText}>Disadvantage</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                        <View style={diceStyles.modifierGroup}>\r\n                          <Text style={diceStyles.modifierLabel}>Modifier</Text>\r\n                          <TextInput\r\n                            style={diceStyles.modifierInput}\r\n                            value={String(modifier)}\r\n                            onChangeText={text => {\r\n                              const num = parseInt(text) || 0;\r\n                              setModifier(num);\r\n                            }}\r\n                            keyboardType=\"numeric\"\r\n                            selectTextOnFocus={true}\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                      \r\n                      <View style={diceStyles.controlsRow}>\r\n                        <View style={diceStyles.quantityGroup}>\r\n                          <Text style={diceStyles.quantityLabel}>Quantity</Text>\r\n                          <TextInput\r\n                            style={diceStyles.quantityInput}\r\n                            value={String(diceQuantity)}\r\n                            onChangeText={text => {\r\n                              const num = parseInt(text) || 1;\r\n                              setDiceQuantity(Math.max(1, Math.min(num, 100)));\r\n                            }}\r\n                            keyboardType=\"numeric\"\r\n                            selectTextOnFocus={true}\r\n                          />\r\n                        </View>\r\n                      </View>\r\n                    </View>\r\n\r\n                    <View style={diceStyles.diceGrid}>\r\n                      {DICE_TYPES.map(({ sides, color }) => (\r\n                        <View key={sides} style={diceStyles.diceContainer}>\r\n                          <DiceRoller\r\n                            sides={sides}\r\n                            color={color}\r\n                            quantity={diceQuantity}\r\n                            onRoll={(firstResult) => {\r\n                              // Roll all dice including advantage/disadvantage\r\n                              const allRolls = Array.from({ length: diceQuantity }, () => \r\n                                Math.floor(Math.random() * sides) + 1\r\n                              );\r\n\r\n                              // Handle advantage/disadvantage for each die\r\n                              const finalRolls = allRolls.map(roll => {\r\n                                if (rollType !== 'normal') {\r\n                                  const secondRoll = Math.floor(Math.random() * sides) + 1;\r\n                                  return rollType === 'advantage'\r\n                                    ? Math.max(roll, secondRoll)\r\n                                    : Math.min(roll, secondRoll);\r\n                                }\r\n                                return roll;\r\n                              });\r\n\r\n                              // Calculate total\r\n                              const total = finalRolls.reduce((sum, roll) => sum + roll, 0) + modifier;\r\n\r\n                              const newResult = {\r\n                                dice: `${diceQuantity}d${sides}`,\r\n                                rolls: allRolls,\r\n                                individualTotals: finalRolls,\r\n                                modifier,\r\n                                rollType,\r\n                                total: total,\r\n                                timestamp: Date.now()\r\n                              };\r\n                              \r\n                              setDiceHistory(prev => [newResult, ...prev.slice(0, 49)]);\r\n                              Vibration.vibrate(50);\r\n                            }}\r\n                          />\r\n                          <Text style={diceStyles.diceButtonText}>d{sides}</Text>\r\n                        </View>\r\n                      ))}\r\n                    </View>\r\n\r\n                    <View style={diceStyles.historyContainer}>\r\n                      <ScrollView style={diceStyles.historyScroll}>\r\n                        {diceHistory.map((result) => (\r\n                          <View \r\n                            key={result.timestamp}\r\n                            style={diceStyles.historyItem}\r\n                          >\r\n                            <View style={diceStyles.historyLeft}>\r\n                              <View style={diceStyles.historyInfo}>\r\n                                <Text style={diceStyles.historyDice}>\r\n                                  {result.dice}\r\n                                  {result.modifier ? ` + ${result.modifier}` : ''}\r\n                                  {result.rollType === 'advantage' ? ' (Adv)' : \r\n                                   result.rollType === 'disadvantage' ? ' (Dis)' : ''}\r\n                                </Text>\r\n                              </View>\r\n                              {result.individualTotals && result.individualTotals.length > 1 && (\r\n                                <Text style={diceStyles.historyRolls}>\r\n                                  Individual: [{result.individualTotals.join(', ')}]\r\n                                </Text>\r\n                              )}\r\n                              {result.rolls.length > result.individualTotals?.length && (\r\n                                <Text style={diceStyles.historyRolls}>\r\n                                  Rolls: {result.rolls.join(', ')}\r\n                                </Text>\r\n                              )}\r\n                            </View>\r\n                            <Text style={diceStyles.historyTotal}>\r\n                              {result.total}\r\n                            </Text>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/* Initiative Panel */}\r\n                  {inCombat && initiative.length > 0 && (\r\n                    <View style={styles.initiativeList}>\r\n                      <Text style={styles.boxTitle}>Initiative Order</Text>\r\n                      <ScrollView style={styles.initiativeScroll}>\r\n                        {initiative.map((item, index) => (\r\n                          <View \r\n                            key={item.position}\r\n                            style={[\r\n                              styles.initiativeItem,\r\n                              index === currentTurn && styles.currentInitiative\r\n                            ]}\r\n                          >\r\n                            <Text style={[\r\n                              styles.initiativeText,\r\n                              index === currentTurn && styles.currentInitiativeText\r\n                            ]}>\r\n                              {item.details}\r\n                            </Text>\r\n                          </View>\r\n                        ))}\r\n                      </ScrollView>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n              </View>\r\n            </ScrollView>\r\n          </>\r\n        )}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}