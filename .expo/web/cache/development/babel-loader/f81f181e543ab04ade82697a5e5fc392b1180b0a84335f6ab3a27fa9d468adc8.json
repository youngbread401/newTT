{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, get, off, serverTimestamp } from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from \"./components/DiceModel\";\nimport ColorPicker from 'react-native-wheel-color-picker';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\nvar app = initializeApp(firebaseConfig);\nvar database = getDatabase(app);\nvar LETTERS = Array.from({\n  length: 26\n}, function (_, i) {\n  return String.fromCharCode(65 + i);\n});\nvar COLORS = ['#4527A0', '#4A90E2', '#7C4DFF', '#00BFA5', '#3F51B5', '#673AB7', '#2196F3', '#B39DDB', '#FF5252', '#FF4081', '#E91E63', '#9C27B0', '#009688', '#4CAF50', '#8BC34A', '#CDDC39', '#FFC107', '#FF9800', '#FF5722', '#795548', '#607D8B', '#F44336', '#E53935', '#D32F2F', '#C2185B', '#7B1FA2', '#512DA8', '#303F9F', '#1976D2', '#0288D1', '#0097A7', '#00796B', '#388E3C', '#689F38', '#AFB42B', '#FBC02D', '#FFA000', '#F57C00', '#E64A19', '#5D4037'];\nvar GRID_SIZE = 10;\nvar ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nvar SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nvar CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nvar DICE_TYPES = [{\n  sides: 4,\n  color: '#FF6B6B'\n}, {\n  sides: 6,\n  color: '#4ECDC4'\n}, {\n  sides: 8,\n  color: '#45B7D1'\n}, {\n  sides: 10,\n  color: '#96CEB4'\n}, {\n  sides: 12,\n  color: '#FFEEAD'\n}, {\n  sides: 20,\n  color: '#D4A5A5'\n}, {\n  sides: 100,\n  color: '#9B59B6'\n}];\nvar STATUS_EFFECTS = [{\n  id: 'blinded',\n  name: 'Blinded',\n  icon: '👁️'\n}, {\n  id: 'charmed',\n  name: 'Charmed',\n  icon: '💕'\n}, {\n  id: 'deafened',\n  name: 'Deafened',\n  icon: '👂'\n}, {\n  id: 'frightened',\n  name: 'Frightened',\n  icon: '😨'\n}, {\n  id: 'grappled',\n  name: 'Grappled',\n  icon: '🤼'\n}, {\n  id: 'incapacitated',\n  name: 'Incapacitated',\n  icon: '💫'\n}, {\n  id: 'invisible',\n  name: 'Invisible',\n  icon: '👻'\n}, {\n  id: 'paralyzed',\n  name: 'Paralyzed',\n  icon: '⚡'\n}, {\n  id: 'petrified',\n  name: 'Petrified',\n  icon: '🗿'\n}, {\n  id: 'poisoned',\n  name: 'Poisoned',\n  icon: '🤢'\n}, {\n  id: 'prone',\n  name: 'Prone',\n  icon: '⬇️'\n}, {\n  id: 'restrained',\n  name: 'Restrained',\n  icon: '⛓️'\n}, {\n  id: 'stunned',\n  name: 'Stunned',\n  icon: '💫'\n}, {\n  id: 'unconscious',\n  name: 'Unconscious',\n  icon: '💤'\n}];\nvar COMMON_ENEMIES = [{\n  name: 'Bandit',\n  hp: 11,\n  maxHp: 11,\n  ac: 12,\n  initiativeBonus: 1,\n  color: '#8B4513'\n}, {\n  name: 'Wolf',\n  hp: 11,\n  maxHp: 11,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#808080'\n}, {\n  name: 'Wraith',\n  hp: 67,\n  maxHp: 67,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#4A0404'\n}, {\n  name: 'Goblin',\n  hp: 7,\n  maxHp: 7,\n  ac: 15,\n  initiativeBonus: 2,\n  color: '#355E3B'\n}, {\n  name: 'Skeleton',\n  hp: 13,\n  maxHp: 13,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#E1D9D1'\n}, {\n  name: 'Zombie',\n  hp: 22,\n  maxHp: 22,\n  ac: 8,\n  initiativeBonus: -2,\n  color: '#4A412A'\n}];\nvar COMMON_RESOURCES = [{\n  name: 'Rage',\n  maxFormula: '2 + floor((level-1)/3)',\n  reset: 'longRest'\n}, {\n  name: 'Sorcery Points',\n  maxFormula: 'level',\n  reset: 'longRest'\n}, {\n  name: 'Channel Divinity',\n  maxFormula: '1',\n  reset: 'shortRest'\n}, {\n  name: 'Bardic Inspiration',\n  maxFormula: 'max(1, charismaModifier)',\n  reset: 'longRest'\n}, {\n  name: 'Action Surge',\n  maxFormula: '1',\n  reset: 'shortRest'\n}, {\n  name: 'Second Wind',\n  maxFormula: '1',\n  reset: 'shortRest'\n}, {\n  name: 'Wild Shape',\n  maxFormula: '2',\n  reset: 'shortRest'\n}];\nvar windowDimensions = Dimensions.get('window');\nvar isSmallScreen = windowDimensions.width < 768;\nvar THEME = {\n  primary: '#2E1F5E',\n  secondary: '#4527A0',\n  accent: '#4A90E2',\n  gold: '#7C4DFF',\n  danger: '#FF5252',\n  success: '#00BFA5',\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1A103C',\n    secondary: '#2E1F5E',\n    dark: '#150D30',\n    panel: '#3F2B85'\n  }\n};\nvar initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {},\n    aoe: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true\n  },\n  partyLoot: {\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  campaignStory: {\n    text: '',\n    lastUpdate: null,\n    updatedBy: null\n  },\n  lastUpdate: Date.now()\n};\nvar MAX_PINNED_NOTES = 5;\nvar QUICK_RULES = {\n  \"Combat Actions\": [{\n    name: \"Attack\",\n    desc: \"Make one melee or ranged attack\"\n  }, {\n    name: \"Dash\",\n    desc: \"Move up to your speed again\"\n  }, {\n    name: \"Disengage\",\n    desc: \"Move away without provoking opportunity attacks\"\n  }, {\n    name: \"Dodge\",\n    desc: \"Impose disadvantage on attacks against you\"\n  }, {\n    name: \"Help\",\n    desc: \"Give advantage to an ally's next ability check or attack\"\n  }, {\n    name: \"Hide\",\n    desc: \"Make a Stealth check to hide\"\n  }, {\n    name: \"Ready\",\n    desc: \"Prepare an action for a specific trigger\"\n  }, {\n    name: \"Use an Object\",\n    desc: \"Interact with a second object or special object\"\n  }],\n  \"Conditions\": [{\n    name: \"Blinded\",\n    desc: \"Can't see, disadvantage on attacks, advantage on attacks against you\"\n  }, {\n    name: \"Charmed\",\n    desc: \"Can't attack charmer, charmer has advantage on social checks\"\n  }, {\n    name: \"Deafened\",\n    desc: \"Can't hear\"\n  }, {\n    name: \"Frightened\",\n    desc: \"Disadvantage on checks while source in sight, can't move closer\"\n  }, {\n    name: \"Grappled\",\n    desc: \"Speed 0, ends if grappler incapacitated\"\n  }, {\n    name: \"Incapacitated\",\n    desc: \"Can't take actions or reactions\"\n  }, {\n    name: \"Invisible\",\n    desc: \"Can't be seen, advantage on attacks, attacks have disadvantage\"\n  }, {\n    name: \"Paralyzed\",\n    desc: \"Can't move/act, auto fail STR/DEX saves, crit if hit within 5ft\"\n  }, {\n    name: \"Petrified\",\n    desc: \"Transformed to stone, incapacitated, resistant to all damage\"\n  }, {\n    name: \"Poisoned\",\n    desc: \"Disadvantage on attack rolls and ability checks\"\n  }, {\n    name: \"Prone\",\n    desc: \"Can only crawl, disadvantage on attacks, melee has advantage\"\n  }, {\n    name: \"Restrained\",\n    desc: \"Speed 0, disadvantage on attacks, advantage on attacks against\"\n  }, {\n    name: \"Stunned\",\n    desc: \"Incapacitated, auto fail STR/DEX saves, advantage on attacks against\"\n  }, {\n    name: \"Unconscious\",\n    desc: \"Incapacitated, drop everything, auto fail STR/DEX saves, crit if hit within 5ft\"\n  }],\n  \"Skill Checks\": [{\n    name: \"DC Difficulty\",\n    desc: \"Very Easy: 5, Easy: 10, Medium: 15, Hard: 20, Very Hard: 25, Nearly Impossible: 30\"\n  }, {\n    name: \"Advantage\",\n    desc: \"Roll 2d20, take higher result\"\n  }, {\n    name: \"Disadvantage\",\n    desc: \"Roll 2d20, take lower result\"\n  }, {\n    name: \"Group Check\",\n    desc: \"If at least half succeed, the group succeeds\"\n  }],\n  \"Combat Rules\": [{\n    name: \"Surprise\",\n    desc: \"Surprised creatures can't move/act on first turn\"\n  }, {\n    name: \"Opportunity Attack\",\n    desc: \"Reaction when creature leaves your reach\"\n  }, {\n    name: \"Cover\",\n    desc: \"Half: +2 AC/DEX saves, Three-quarters: +5 AC/DEX saves, Full: Can't be targeted directly\"\n  }, {\n    name: \"Critical Hit\",\n    desc: \"Roll damage dice twice\"\n  }]\n};\nvar QuickRules = memo(function () {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCategory = _useState2[0],\n    setSelectedCategory = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showRules = _useState4[0],\n    setShowRules = _useState4[1];\n  return _jsxs(View, {\n    style: styles.quickRulesContainer,\n    children: [_jsx(TouchableOpacity, {\n      style: [styles.resourceButton, {\n        backgroundColor: THEME.accent\n      }],\n      onPress: function onPress() {\n        return setShowRules(true);\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Quick Rules Reference\"\n      })\n    }), _jsx(Modal, {\n      visible: showRules,\n      transparent: true,\n      animationType: \"fade\",\n      onRequestClose: function onRequestClose() {\n        return setShowRules(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: [styles.modalContent, {\n            width: '95%',\n            maxWidth: 600\n          }],\n          children: [_jsxs(View, {\n            style: styles.modalHeader,\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: selectedCategory || 'Quick Rules Reference'\n            }), _jsx(TouchableOpacity, {\n              style: styles.closeButton,\n              onPress: function onPress() {\n                setShowRules(false);\n                setSelectedCategory(null);\n              },\n              children: _jsx(Text, {\n                style: styles.closeButtonText,\n                children: \"\\xD7\"\n              })\n            })]\n          }), _jsx(ScrollView, {\n            style: {\n              maxHeight: 400\n            },\n            children: !selectedCategory ? Object.keys(QUICK_RULES).map(function (category) {\n              return _jsxs(TouchableOpacity, {\n                style: styles.rulesCategoryButton,\n                onPress: function onPress() {\n                  return setSelectedCategory(category);\n                },\n                children: [_jsx(Text, {\n                  style: styles.rulesCategoryText,\n                  children: category\n                }), _jsxs(Text, {\n                  style: styles.rulesCount,\n                  children: [QUICK_RULES[category].length, \" rules\"]\n                })]\n              }, category);\n            }) : _jsxs(_Fragment, {\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.button, {\n                  marginBottom: 10\n                }],\n                onPress: function onPress() {\n                  return setSelectedCategory(null);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"\\u2190 Back to Categories\"\n                })\n              }), QUICK_RULES[selectedCategory].map(function (rule, index) {\n                return _jsxs(View, {\n                  style: styles.ruleItem,\n                  children: [_jsx(Text, {\n                    style: styles.ruleName,\n                    children: rule.name\n                  }), _jsx(Text, {\n                    style: styles.ruleDesc,\n                    children: rule.desc\n                  })]\n                }, index);\n              })]\n            })\n          })]\n        })\n      })\n    })]\n  });\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%'\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%'\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start'\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1,\n    width: '100%'\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%'\n  },\n  leftSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 2 : 0\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%',\n    order: isSmallScreen ? 1 : 1\n  },\n  rightSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 3 : 2\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%'\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center'\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40'\n  },\n  diceResult: {\n    color: THEME.text.light\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%'\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent\n  },\n  initiativeText: {\n    color: THEME.text.light\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold'\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none'\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center'\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent\n  },\n  quickActions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    padding: 15,\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    marginBottom: 15\n  },\n  quickActionButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 100,\n    flex: 1\n  },\n  quickActionText: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  infoPanel: {\n    backgroundColor: THEME.background.panel,\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15\n  },\n  infoPanelTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  infoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  infoCard: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    flex: 1,\n    minWidth: 150\n  },\n  infoLabel: {\n    color: THEME.accent,\n    fontSize: 12,\n    marginBottom: 5\n  },\n  infoValue: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  statBadge: {\n    backgroundColor: THEME.accent + '20',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n    alignSelf: 'flex-start'\n  },\n  statBadgeText: {\n    color: THEME.accent,\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  divider: {\n    height: 1,\n    backgroundColor: THEME.accent + '40',\n    marginVertical: 15\n  },\n  resourceContainer: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15\n  },\n  resourceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  resourceTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  resourceButtons: {\n    flexDirection: 'row',\n    gap: 10\n  },\n  resourceButton: {\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center'\n  },\n  resourceList: {\n    maxHeight: 200\n  },\n  resourceItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  resourceName: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  resourceControls: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10\n  },\n  resourceAdjust: {\n    backgroundColor: THEME.background.primary,\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  resourceValue: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    minWidth: 50,\n    textAlign: 'center'\n  },\n  resourceOption: {\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  resourceOptionText: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  pinnedNotesContainer: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15\n  },\n  pinnedNotesHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  pinnedNotesList: {\n    maxHeight: 200\n  },\n  pinnedNoteItem: {\n    flexDirection: 'row',\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    alignItems: 'center'\n  },\n  pinnedNoteText: {\n    color: THEME.text.light,\n    flex: 1,\n    fontSize: 14\n  },\n  removeNoteButton: {\n    backgroundColor: THEME.background.primary,\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 10\n  },\n  quickRulesContainer: {\n    marginBottom: 15\n  },\n  rulesCategoryButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 15,\n    borderRadius: 8,\n    marginBottom: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  rulesCategoryText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  rulesCount: {\n    color: THEME.text.light + '80',\n    fontSize: 14\n  },\n  ruleItem: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8\n  },\n  ruleName: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  ruleDesc: {\n    color: THEME.text.light + 'CC',\n    fontSize: 14,\n    lineHeight: 20\n  }\n});\nvar additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%'\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  sheetSection: {\n    marginBottom: 20\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold'\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5\n  },\n  abilityMod: {\n    color: THEME.text.light\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center'\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4\n  },\n  enemyOption: {\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 8,\n    backgroundColor: THEME.background.secondary\n  },\n  dmToggle: {\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginLeft: 10\n  },\n  dmToggleActive: {\n    backgroundColor: THEME.accent\n  }\n});\nvar diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: '0px 2px 3.84px rgba(0, 0, 0, 0.25)'\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold'\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center'\n  },\n  controlActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200\n  },\n  historyScroll: {\n    padding: 10\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary\n  },\n  historyLeft: {\n    flex: 1\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  diceControls: {\n    flexDirection: 'column',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  diceContainer: {\n    width: isSmallScreen ? 80 : 100,\n    height: isSmallScreen ? 80 : 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginBottom: 5\n  }\n});\nvar statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80\n  },\n  effectActive: {\n    backgroundColor: THEME.accent\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12\n  }\n});\nvar saveGameState = function () {\n  var _ref = _asyncToGenerator(function* () {\n    if (firebaseRef.current) {\n      try {\n        yield set(firebaseRef.current, {\n          tokens: tokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          characters: characters,\n          settings: initialGameState.settings,\n          lastUpdate: Date.now()\n        });\n      } catch (error) {\n        console.error('Error saving game state:', error);\n        Alert.alert('Error', 'Failed to save game state');\n      }\n    }\n  });\n  return function saveGameState() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar CharacterSheetModal = memo(function (_ref2) {\n  var visible = _ref2.visible,\n    onClose = _ref2.onClose,\n    character = _ref2.character,\n    characters = _ref2.characters,\n    onUpdate = _ref2.onUpdate;\n  var _useState5 = useState(function () {\n      return {\n        name: '',\n        class: '',\n        level: 1,\n        owner: (character == null ? void 0 : character.owner) || '',\n        proficiencyBonus: 2,\n        hp: 0,\n        maxHp: 0,\n        ac: 10,\n        abilityScores: {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: [],\n        currency: {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        resources: {},\n        pinnedNotes: [],\n        inventory: [],\n        items: []\n      };\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editedCharacter = _useState6[0],\n    setEditedCharacter = _useState6[1];\n  useEffect(function () {\n    if (visible) {\n      var initialResources = (character == null ? void 0 : character.resources) || {};\n      if (initialResources['Ki Points']) {\n        delete initialResources['Ki Points'];\n      }\n      setEditedCharacter({\n        name: (character == null ? void 0 : character.name) || '',\n        class: (character == null ? void 0 : character.class) || '',\n        level: (character == null ? void 0 : character.level) || 1,\n        owner: (character == null ? void 0 : character.owner) || '',\n        proficiencyBonus: (character == null ? void 0 : character.proficiencyBonus) || 2,\n        hp: (character == null ? void 0 : character.hp) || 0,\n        maxHp: (character == null ? void 0 : character.maxHp) || 0,\n        ac: (character == null ? void 0 : character.ac) || 10,\n        abilityScores: (character == null ? void 0 : character.abilityScores) || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: (character == null ? void 0 : character.proficientSkills) || [],\n        currency: (character == null ? void 0 : character.currency) || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        resources: initialResources,\n        pinnedNotes: (character == null ? void 0 : character.pinnedNotes) || [],\n        inventory: (character == null ? void 0 : character.inventory) || [],\n        items: (character == null ? void 0 : character.items) || []\n      });\n    }\n  }, [visible, character]);\n  if (!visible) return null;\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var getSkillModifier = function getSkillModifier(skill, ability) {\n    var abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    var profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(GestureScrollView, {\n          children: [_jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Character Info\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: editedCharacter.name,\n              onChangeText: function onChangeText(text) {\n                return setEditedCharacter(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Character Name\",\n              placeholderTextColor: THEME.text.light + '80'\n            }), _jsx(ResourceTracker, {\n              character: editedCharacter,\n              onUpdate: setEditedCharacter\n            }), _jsx(PinnedNotes, {\n              character: editedCharacter,\n              onUpdate: setEditedCharacter\n            }), _jsx(QuickRules, {}), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10\n              },\n              children: [_jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: editedCharacter.class,\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      class: text\n                    });\n                  });\n                },\n                placeholder: \"Class\",\n                placeholderTextColor: THEME.text.light + '80'\n              }), _jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: String(editedCharacter.level),\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      level: parseInt(text) || 1\n                    });\n                  });\n                },\n                placeholder: \"Level\",\n                keyboardType: \"numeric\",\n                placeholderTextColor: THEME.text.light + '80'\n              })]\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginTop: 10\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flex: 2\n                },\n                children: [_jsx(Text, {\n                  style: [styles.buttonText, {\n                    marginBottom: 5\n                  }],\n                  children: \"Hit Points\"\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    gap: 5\n                  },\n                  children: [_jsx(TextInput, {\n                    style: [styles.input, {\n                      flex: 1\n                    }],\n                    value: String(editedCharacter.hp),\n                    onChangeText: function onChangeText(text) {\n                      return setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          hp: parseInt(text) || 0\n                        });\n                      });\n                    },\n                    placeholder: \"Current HP\",\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(Text, {\n                    style: {\n                      color: THEME.text.light,\n                      alignSelf: 'center',\n                      fontSize: 18\n                    },\n                    children: \"/\"\n                  }), _jsx(TextInput, {\n                    style: [styles.input, {\n                      flex: 1\n                    }],\n                    value: String(editedCharacter.maxHp),\n                    onChangeText: function onChangeText(text) {\n                      return setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          maxHp: parseInt(text) || 0\n                        });\n                      });\n                    },\n                    placeholder: \"Max HP\",\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flex: 1\n                },\n                children: [_jsx(Text, {\n                  style: [styles.buttonText, {\n                    marginBottom: 5\n                  }],\n                  children: \"Armor Class\"\n                }), _jsx(TextInput, {\n                  style: styles.input,\n                  value: String(editedCharacter.ac),\n                  onChangeText: function onChangeText(text) {\n                    return setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        ac: parseInt(text) || 10\n                      });\n                    });\n                  },\n                  placeholder: \"AC\",\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              })]\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Ability Scores\"\n            }), _jsx(View, {\n              style: additionalStyles.abilityScores,\n              children: ABILITY_SCORES.map(function (ability) {\n                return _jsxs(View, {\n                  style: additionalStyles.abilityBox,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.abilityLabel,\n                    children: ability\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.abilityScore,\n                    value: String(editedCharacter.abilityScores[ability]),\n                    onChangeText: function onChangeText(text) {\n                      return setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          abilityScores: _objectSpread(_objectSpread({}, prev.abilityScores), {}, _defineProperty({}, ability, parseInt(text) || 0))\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    maxLength: 2,\n                    selectTextOnFocus: true\n                  }), _jsxs(Text, {\n                    style: additionalStyles.abilityMod,\n                    children: [calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : '', calculateModifier(editedCharacter.abilityScores[ability])]\n                  })]\n                }, ability);\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Skills\"\n            }), _jsx(View, {\n              style: additionalStyles.skillsList,\n              children: Object.entries(SKILLS).map(function (_ref3) {\n                var _ref4 = _slicedToArray(_ref3, 2),\n                  ability = _ref4[0],\n                  skills = _ref4[1];\n                return skills.map(function (skill) {\n                  return _jsxs(TouchableOpacity, {\n                    style: additionalStyles.skillItem,\n                    onPress: function onPress() {\n                      return setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          proficientSkills: prev.proficientSkills.includes(skill) ? prev.proficientSkills.filter(function (s) {\n                            return s !== skill;\n                          }) : [].concat(_toConsumableArray(prev.proficientSkills), [skill])\n                        });\n                      });\n                    },\n                    children: [_jsx(View, {\n                      style: [additionalStyles.proficientDot, {\n                        backgroundColor: editedCharacter.proficientSkills.includes(skill) ? THEME.accent : THEME.background.secondary\n                      }]\n                    }), _jsx(Text, {\n                      style: additionalStyles.skillName,\n                      children: skill\n                    }), _jsxs(Text, {\n                      style: additionalStyles.skillMod,\n                      children: [getSkillModifier(skill, ability) >= 0 ? '+' : '', getSkillModifier(skill, ability)]\n                    })]\n                  }, skill);\n                });\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Inventory\"\n            }), _jsx(View, {\n              style: additionalStyles.lootSection,\n              children: CURRENCY.map(function (currency) {\n                return _jsxs(View, {\n                  style: additionalStyles.currencyRow,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.currencyLabel,\n                    children: currency\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.currencyInput,\n                    value: String(editedCharacter.currency[currency] || 0),\n                    onChangeText: function onChangeText(text) {\n                      var value = parseInt(text) || 0;\n                      setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                }, currency);\n              })\n            }), _jsxs(View, {\n              style: additionalStyles.lootSection,\n              children: [_jsxs(View, {\n                style: additionalStyles.lootHeader,\n                children: [_jsx(Text, {\n                  style: additionalStyles.sectionTitle,\n                  children: \"Items\"\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.addButton,\n                  onPress: function onPress() {\n                    setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: [].concat(_toConsumableArray(prev.items || []), [{\n                          name: '',\n                          quantity: 1,\n                          notes: '',\n                          addedBy: (character == null ? void 0 : character.name) || ''\n                        }])\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"Add Item\"\n                  })\n                })]\n              }), (editedCharacter.items || []).map(function (item, index) {\n                return _jsxs(View, {\n                  style: additionalStyles.itemRow,\n                  children: [_jsxs(View, {\n                    style: additionalStyles.itemInfo,\n                    children: [_jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        flex: 2\n                      }],\n                      value: item.name,\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items || []);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          name: text\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      placeholder: \"Item name\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), _jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        width: 60\n                      }],\n                      value: String(item.quantity),\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items || []);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          quantity: parseInt(text) || 1\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      keyboardType: \"numeric\",\n                      placeholder: \"Qty\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), item.addedBy === (character == null ? void 0 : character.name) && _jsx(TouchableOpacity, {\n                      style: additionalStyles.removeButton,\n                      onPress: function onPress() {\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: (prev.items || []).filter(function (_, i) {\n                              return i !== index;\n                            })\n                          });\n                        });\n                      },\n                      children: _jsx(Text, {\n                        style: styles.buttonText,\n                        children: \"\\xD7\"\n                      })\n                    })]\n                  }), _jsxs(Text, {\n                    style: additionalStyles.addedBy,\n                    children: [\"Added by: \", item.addedBy]\n                  })]\n                }, index);\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.success\n              }],\n              onPress: function onPress() {\n                onUpdate(editedCharacter);\n                onClose();\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Save Changes\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n});\nvar TokenModal = memo(function (_ref5) {\n  var showTokenModal = _ref5.showTokenModal,\n    setShowTokenModal = _ref5.setShowTokenModal,\n    selectedToken = _ref5.selectedToken,\n    setSelectedToken = _ref5.setSelectedToken,\n    tokens = _ref5.tokens,\n    firebaseRef = _ref5.firebaseRef,\n    initialGameState = _ref5.initialGameState,\n    layers = _ref5.layers,\n    initiative = _ref5.initiative,\n    inCombat = _ref5.inCombat,\n    currentTurn = _ref5.currentTurn,\n    THEME = _ref5.THEME;\n  return _jsx(Modal, {\n    visible: showTokenModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {\n      return setShowTokenModal(false);\n    },\n    children: _jsx(Pressable, {\n      style: [styles.modalOverlay, {\n        cursor: 'default'\n      }],\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      },\n      children: _jsx(View, {\n        style: styles.modalContent,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.select({\n            ios: 'padding',\n            android: 'height'\n          }),\n          style: styles.modalContainer,\n          keyboardVerticalOffset: Platform.select({\n            ios: 64,\n            android: 0\n          }),\n          children: _jsxs(Pressable, {\n            onPress: function onPress(e) {\n              return e.stopPropagation();\n            },\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Edit Token\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: selectedToken == null ? void 0 : selectedToken.name,\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Token Name\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              spellCheck: false,\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginBottom: 10\n              },\n              children: [_jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.hp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var hp = parseInt(text) || 0;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        hp: Math.max(0, hp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Current HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.maxHp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var maxHp = parseInt(text) || 1;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        maxHp: Math.max(1, maxHp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Max HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              })]\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: String((selectedToken == null ? void 0 : selectedToken.initiativeBonus) || '0'),\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    initiativeBonus: parseInt(text) || 0\n                  });\n                });\n              },\n              keyboardType: \"numeric\",\n              placeholder: \"Initiative Bonus\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: statusStyles.effectsContainer,\n              children: [_jsx(Text, {\n                style: statusStyles.effectsTitle,\n                children: \"Status Effects\"\n              }), _jsx(View, {\n                style: statusStyles.effectsGrid,\n                children: STATUS_EFFECTS.map(function (effect) {\n                  var _selectedToken$effect;\n                  return _jsx(TouchableOpacity, {\n                    style: [statusStyles.effectButton, (selectedToken == null ? void 0 : (_selectedToken$effect = selectedToken.effects) == null ? void 0 : _selectedToken$effect.includes(effect.id)) && statusStyles.effectActive],\n                    onPress: function onPress() {\n                      setSelectedToken(function (prev) {\n                        var currentEffects = prev.effects || [];\n                        var newEffects = currentEffects.includes(effect.id) ? currentEffects.filter(function (e) {\n                          return e !== effect.id;\n                        }) : [].concat(_toConsumableArray(currentEffects), [effect.id]);\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          effects: newEffects\n                        });\n                      });\n                    },\n                    children: _jsxs(Text, {\n                      style: statusStyles.effectText,\n                      children: [effect.icon, \" \", effect.name]\n                    })\n                  }, effect.id);\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.modalButtons,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    get(firebaseRef.current).then(function (snapshot) {\n                      var currentRoomData = snapshot.val() || {};\n                      var newTokens = _objectSpread({}, tokens);\n                      delete newTokens[selectedToken.position];\n                      set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                        tokens: newTokens,\n                        lastUpdate: Date.now()\n                      }));\n                      setShowTokenModal(false);\n                    });\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Delete\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    get(firebaseRef.current).then(function (snapshot) {\n                      var currentRoomData = snapshot.val() || {};\n                      var newTokens = _objectSpread(_objectSpread({}, tokens), {}, _defineProperty({}, selectedToken.position, selectedToken));\n                      set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                        tokens: newTokens,\n                        lastUpdate: Date.now()\n                      }));\n                      setShowTokenModal(false);\n                    });\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Save\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n});\nvar modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001\n  }\n});\nvar RoomModal = memo(function (_ref6) {\n  var showRoomModal = _ref6.showRoomModal,\n    setShowRoomModal = _ref6.setShowRoomModal,\n    isConnected = _ref6.isConnected,\n    roomCode = _ref6.roomCode,\n    setRoomCode = _ref6.setRoomCode,\n    isJoining = _ref6.isJoining,\n    connectToRoom = _ref6.connectToRoom;\n  if (!showRoomModal) return null;\n  return _jsx(Modal, {\n    visible: true,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    children: _jsx(View, {\n      style: [modalStyles.modalOverlay, {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)'\n      }],\n      children: _jsxs(View, {\n        style: modalStyles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Join Room\"\n        }), _jsx(TextInput, {\n          style: [styles.input, {\n            marginBottom: 15\n          }],\n          value: roomCode,\n          onChangeText: function onChangeText(text) {\n            setRoomCode(text.trim().toLowerCase());\n          },\n          placeholder: \"Enter room code...\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          editable: !isJoining,\n          autoFocus: true\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n            width: '100%'\n          }],\n          onPress: function onPress() {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          },\n          disabled: isJoining,\n          children: isJoining ? _jsxs(View, {\n            style: styles.loadingButtonContent,\n            children: [_jsx(ActivityIndicator, {\n              color: THEME.text.light\n            }), _jsx(Text, {\n              style: [styles.buttonText, {\n                marginLeft: 10\n              }],\n              children: \"Connecting...\"\n            })]\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Join Room\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar PartyLootModal = memo(function (_ref7) {\n  var visible = _ref7.visible,\n    onClose = _ref7.onClose,\n    partyLoot = _ref7.partyLoot,\n    onUpdate = _ref7.onUpdate,\n    playerName = _ref7.playerName;\n  var _useState7 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: []\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    editedLoot = _useState8[0],\n    setEditedLoot = _useState8[1];\n  useEffect(function () {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: [styles.modalContent, {\n          maxHeight: '90%'\n        }],\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Party Loot\"\n        }), _jsxs(ScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (type) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: type\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedLoot.currency[type] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, type, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, type);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedLoot(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      items: [].concat(_toConsumableArray(prev.items), [{\n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedLoot.items.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    flex: 2\n                  }],\n                  value: item.name,\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      name: text\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  placeholder: \"Item name\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    width: 60\n                  }],\n                  value: String(item.quantity),\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      quantity: parseInt(text) || 1\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Qty\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.removeButton,\n                  onPress: function onPress() {\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: prev.items.filter(function (_, i) {\n                          return i !== index;\n                        })\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"\\xD7\"\n                  })\n                })]\n              }, item.id || index);\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonRow,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, styles.closeButton],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(editedLoot);\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar GridZoomControls = memo(function (_ref8) {\n  var zoomLevel = _ref8.zoomLevel,\n    setZoomLevel = _ref8.setZoomLevel;\n  var debouncedZoom = debounce(function (newZoom) {\n    setZoomLevel(newZoom);\n  }, 100);\n  return _jsxs(View, {\n    style: styles.zoomControls,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.max(0.5, zoomLevel - 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"-\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.min(2, zoomLevel + 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"+\"\n      })\n    })]\n  });\n});\nvar InventoryModal = memo(function (_ref9) {\n  var visible = _ref9.visible,\n    onClose = _ref9.onClose,\n    character = _ref9.character,\n    onUpdate = _ref9.onUpdate;\n  var _useState9 = useState({\n      currency: (character == null ? void 0 : character.currency) || {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      inventory: (character == null ? void 0 : character.inventory) || []\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    editedInventory = _useState10[0],\n    setEditedInventory = _useState10[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!visible || !character) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(Text, {\n          style: additionalStyles.sectionTitle,\n          children: [character.name, \"'s Inventory\"]\n        }), _jsxs(GestureScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (currency) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: currency\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedInventory.currency[currency] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedInventory(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, currency);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedInventory(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      inventory: [].concat(_toConsumableArray(prev.inventory), [{\n                        name: '',\n                        quantity: 1,\n                        notes: '',\n                        addedBy: character.name\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedInventory.inventory.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsxs(View, {\n                  style: additionalStyles.itemInfo,\n                  children: [_jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      flex: 2\n                    }],\n                    value: item.name,\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        name: text\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    placeholder: \"Item name\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      width: 60\n                    }],\n                    value: String(item.quantity),\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        quantity: parseInt(text) || 1\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholder: \"Qty\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                    style: additionalStyles.removeButton,\n                    onPress: function onPress() {\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: prev.inventory.filter(function (_, i) {\n                            return i !== index;\n                          })\n                        });\n                      });\n                    },\n                    children: _jsx(Text, {\n                      style: styles.buttonText,\n                      children: \"\\xD7\"\n                    })\n                  })]\n                }), _jsxs(Text, {\n                  style: additionalStyles.addedBy,\n                  children: [\"Added by: \", item.addedBy]\n                })]\n              }, index);\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n                currency: editedInventory.currency,\n                inventory: editedInventory.inventory\n              }));\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar PlayerNameModal = memo(function (_ref10) {\n  var visible = _ref10.visible,\n    onSubmit = _ref10.onSubmit;\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    name = _useState12[0],\n    setName = _useState12[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Enter Your Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: setName,\n          placeholder: \"Your name\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"words\"\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.success,\n            width: '100%',\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            return onSubmit(name);\n          },\n          disabled: !name.trim(),\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Continue\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2\n  }\n});\nvar calculateModifier = function calculateModifier(score) {\n  return Math.floor((score - 10) / 2);\n};\nvar DiceResultModal = memo(function (_ref11) {\n  var visible = _ref11.visible,\n    result = _ref11.result,\n    onClose = _ref11.onClose;\n  useEffect(function () {\n    if (visible) {\n      var timer = setTimeout(onClose, 2000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [visible, onClose]);\n  if (!visible || !result) return null;\n  return _jsx(View, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 9999,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    children: _jsxs(View, {\n      style: {\n        backgroundColor: THEME.background.panel + 'E6',\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        minWidth: 200,\n        maxWidth: '90%',\n        shadowColor: '#000',\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n      },\n      children: [_jsxs(Text, {\n        style: {\n          color: THEME.text.light,\n          fontSize: 18,\n          marginBottom: 5\n        },\n        children: [result.dice, \" \", result.rollType !== 'normal' ? \"(\" + result.rollType + \")\" : '']\n      }), _jsx(Text, {\n        style: {\n          color: THEME.accent,\n          fontSize: 32,\n          fontWeight: 'bold',\n          marginBottom: 5\n        },\n        children: result.total\n      }), _jsxs(Text, {\n        style: {\n          color: THEME.text.light + '80',\n          fontSize: 14\n        },\n        children: [\"Rolls: [\", result.rolls.join(', '), \"]\", result.modifier !== 0 && \" + \" + result.modifier]\n      })]\n    })\n  });\n});\nvar DeleteCharacterModal = memo(function (_ref12) {\n  var visible = _ref12.visible,\n    character = _ref12.character,\n    onClose = _ref12.onClose,\n    onConfirm = _ref12.onConfirm;\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    confirmName = _useState14[0],\n    setConfirmName = _useState14[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Delete Character\"\n        }), _jsxs(Text, {\n          style: [styles.buttonText, {\n            marginBottom: 10,\n            textAlign: 'center'\n          }],\n          children: [\"Type \\\"\", character == null ? void 0 : character.name, \"\\\" to confirm deletion\"]\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: confirmName,\n          onChangeText: setConfirmName,\n          placeholder: \"Character name\",\n          placeholderTextColor: THEME.text.light + '80'\n        }), _jsxs(View, {\n          style: [styles.modalButtons, {\n            marginTop: 15\n          }],\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.background.secondary\n            }],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: confirmName === (character == null ? void 0 : character.name) ? THEME.danger : THEME.background.secondary,\n              opacity: confirmName === (character == null ? void 0 : character.name) ? 1 : 0.5\n            }],\n            onPress: function onPress() {\n              if (confirmName === (character == null ? void 0 : character.name)) {\n                onConfirm();\n              }\n            },\n            disabled: confirmName !== (character == null ? void 0 : character.name),\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Delete\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar EnemySelectModal = memo(function (_ref13) {\n  var visible = _ref13.visible,\n    onClose = _ref13.onClose,\n    onSelect = _ref13.onSelect;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Select Enemy\"\n        }), _jsx(ScrollView, {\n          style: {\n            maxHeight: 300\n          },\n          children: COMMON_ENEMIES.map(function (enemy, index) {\n            return _jsxs(TouchableOpacity, {\n              style: [styles.enemyOption, {\n                backgroundColor: THEME.background.secondary\n              }],\n              onPress: function onPress() {\n                return onSelect(enemy);\n              },\n              children: [_jsx(Text, {\n                style: styles.buttonText,\n                children: enemy.name\n              }), _jsxs(Text, {\n                style: [styles.buttonText, {\n                  opacity: 0.7,\n                  fontSize: 12\n                }],\n                children: [\"HP: \", enemy.hp, \" \\u2022 AC: \", enemy.ac]\n              })]\n            }, index);\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.background.secondary,\n            marginTop: 10\n          }],\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Cancel\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar ColorWheelModal = memo(function (_ref14) {\n  var visible = _ref14.visible,\n    onClose = _ref14.onClose,\n    onSelectColor = _ref14.onSelectColor,\n    initialColor = _ref14.initialColor;\n  var _useState15 = useState(initialColor || '#FF0000'),\n    _useState16 = _slicedToArray(_useState15, 2),\n    color = _useState16[0],\n    setColor = _useState16[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: [styles.modalContent, {\n          width: isSmallScreen ? '90%' : 400,\n          padding: 20\n        }],\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Select Color\"\n        }), _jsx(View, {\n          style: {\n            height: 300,\n            marginVertical: 20\n          },\n          children: _jsx(ColorPicker, {\n            color: color,\n            onColorChange: setColor,\n            thumbSize: 30,\n            sliderSize: 30,\n            noSnap: true,\n            row: false\n          })\n        }), _jsxs(View, {\n          style: styles.modalButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.background.secondary\n            }],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onSelectColor(color);\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Select\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar ResourceTracker = memo(function (_ref15) {\n  var character = _ref15.character,\n    onUpdate = _ref15.onUpdate;\n  if (!character) return null;\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showAddResource = _useState18[0],\n    setShowAddResource = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    newResourceName = _useState20[0],\n    setNewResourceName = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    newResourceMax = _useState22[0],\n    setNewResourceMax = _useState22[1];\n  useEffect(function () {\n    if (character.resources && character.resources['Ki Points']) {\n      var updatedResources = _objectSpread({}, character.resources);\n      delete updatedResources['Ki Points'];\n      onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n        resources: updatedResources\n      }));\n    }\n  }, [character]);\n  var calculateResourceMax = function calculateResourceMax(formula, character) {\n    if (!formula) return 0;\n    try {\n      if (formula === 'level') {\n        var level = parseInt(character.level) || 0;\n        console.log('Character level:', level);\n        return level;\n      }\n      if (formula.includes('charismaModifier')) {\n        var _character$abilitySco;\n        var charismaMod = Math.floor((parseInt((_character$abilitySco = character.abilityScores) == null ? void 0 : _character$abilitySco.CHA) - 10) / 2);\n        return Math.max(1, charismaMod);\n      }\n      if (formula.includes('level')) {\n        var _level = parseInt(character.level) || 0;\n        if (formula === '2 + floor((level-1)/3)') {\n          return 2 + Math.floor((_level - 1) / 3);\n        }\n      }\n      return parseInt(formula) || 0;\n    } catch (error) {\n      console.error('Error calculating resource max:', error);\n      return 0;\n    }\n  };\n  var handleAddResource = function handleAddResource(resource) {\n    try {\n      if (resource.name === 'Ki Points') return;\n      var updatedResources = _objectSpread({}, character.resources);\n      var maxValue = calculateResourceMax(resource.maxFormula, character);\n      updatedResources[resource.name] = {\n        maxFormula: resource.maxFormula,\n        max: maxValue,\n        current: maxValue,\n        reset: resource.reset\n      };\n      var updatedCharacter = _objectSpread(_objectSpread({}, character), {}, {\n        resources: updatedResources\n      });\n      onUpdate(updatedCharacter);\n      setShowAddResource(false);\n      setNewResourceName('');\n      setNewResourceMax('');\n    } catch (error) {\n      console.error('Error adding resource:', error);\n      Alert.alert('Error', 'Failed to add resource');\n    }\n  };\n  var handleShortRest = function handleShortRest() {\n    try {\n      var updatedResources = _objectSpread({}, character.resources);\n      Object.keys(updatedResources).forEach(function (key) {\n        if (updatedResources[key].reset === 'shortRest') {\n          var maxValue = calculateResourceMax(updatedResources[key].maxFormula, character);\n          updatedResources[key] = _objectSpread(_objectSpread({}, updatedResources[key]), {}, {\n            max: maxValue,\n            current: maxValue\n          });\n        }\n      });\n      onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n        resources: updatedResources\n      }));\n    } catch (error) {\n      console.error('Error handling short rest:', error);\n      Alert.alert('Error', 'Failed to process short rest');\n    }\n  };\n  var handleLongRest = function handleLongRest() {\n    try {\n      var updatedResources = _objectSpread({}, character.resources);\n      Object.keys(updatedResources).forEach(function (key) {\n        var maxValue = calculateResourceMax(updatedResources[key].maxFormula, character);\n        updatedResources[key] = _objectSpread(_objectSpread({}, updatedResources[key]), {}, {\n          max: maxValue,\n          current: maxValue\n        });\n      });\n      onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n        resources: updatedResources\n      }));\n    } catch (error) {\n      console.error('Error handling long rest:', error);\n      Alert.alert('Error', 'Failed to process long rest');\n    }\n  };\n  var handleResourceChange = function handleResourceChange(name, change) {\n    try {\n      var updatedResources = _objectSpread({}, character.resources);\n      var resource = updatedResources[name];\n      var currentValue = parseInt(resource.current) || 0;\n      var maxValue = parseInt(resource.max) || 0;\n      var newValue = Math.max(0, Math.min(maxValue, currentValue + change));\n      updatedResources[name] = _objectSpread(_objectSpread({}, resource), {}, {\n        current: newValue\n      });\n      var updatedCharacter = _objectSpread(_objectSpread({}, character), {}, {\n        resources: updatedResources,\n        pinnedNotes: character.pinnedNotes || []\n      });\n      onUpdate(updatedCharacter);\n    } catch (error) {\n      console.error('Error changing resource:', error);\n      Alert.alert('Error', 'Failed to update resource');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.resourceContainer,\n    children: [_jsxs(View, {\n      style: styles.resourceHeader,\n      children: [_jsx(Text, {\n        style: styles.resourceTitle,\n        children: \"Resources\"\n      }), _jsxs(View, {\n        style: [styles.resourceButtons, {\n          flexDirection: 'column',\n          gap: 5\n        }],\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.resourceButton, {\n            backgroundColor: THEME.accent\n          }],\n          onPress: function onPress() {\n            return setShowAddResource(true);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Add Resource\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.resourceButton, {\n            backgroundColor: THEME.success\n          }],\n          onPress: handleShortRest,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Short Rest\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.resourceButton, {\n            backgroundColor: THEME.success\n          }],\n          onPress: handleLongRest,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Long Rest\"\n          })\n        })]\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.resourceList,\n      children: Object.entries(character.resources || {}).map(function (_ref16) {\n        var _ref17 = _slicedToArray(_ref16, 2),\n          name = _ref17[0],\n          resource = _ref17[1];\n        return _jsxs(View, {\n          style: styles.resourceItem,\n          children: [_jsx(Text, {\n            style: styles.resourceName,\n            children: name\n          }), _jsxs(View, {\n            style: styles.resourceControls,\n            children: [_jsx(TouchableOpacity, {\n              style: styles.resourceAdjust,\n              onPress: function onPress() {\n                return handleResourceChange(name, -1);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"-\"\n              })\n            }), _jsxs(Text, {\n              style: styles.resourceValue,\n              children: [resource.current || 0, \"/\", resource.max || 0]\n            }), _jsx(TouchableOpacity, {\n              style: styles.resourceAdjust,\n              onPress: function onPress() {\n                return handleResourceChange(name, 1);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"+\"\n              })\n            })]\n          })]\n        }, name);\n      })\n    }), _jsx(Modal, {\n      visible: showAddResource,\n      transparent: true,\n      animationType: \"fade\",\n      onRequestClose: function onRequestClose() {\n        return setShowAddResource(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Add Resource\"\n          }), _jsx(ScrollView, {\n            style: {\n              maxHeight: 200,\n              marginBottom: 10\n            },\n            children: COMMON_RESOURCES.map(function (resource) {\n              return _jsxs(TouchableOpacity, {\n                style: styles.resourceOption,\n                onPress: function onPress() {\n                  return handleAddResource(resource);\n                },\n                children: [_jsx(Text, {\n                  style: styles.resourceOptionText,\n                  children: resource.name\n                }), _jsxs(Text, {\n                  style: [styles.resourceOptionText, {\n                    opacity: 0.7\n                  }],\n                  children: [\"Reset on \", resource.reset]\n                })]\n              }, resource.name);\n            })\n          }), _jsx(View, {\n            style: styles.divider\n          }), _jsx(Text, {\n            style: [styles.modalTitle, {\n              fontSize: 16\n            }],\n            children: \"Custom Resource\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            value: newResourceName,\n            onChangeText: setNewResourceName,\n            placeholder: \"Resource Name\",\n            placeholderTextColor: THEME.text.light + '80'\n          }), _jsx(TextInput, {\n            style: styles.input,\n            value: newResourceMax,\n            onChangeText: setNewResourceMax,\n            placeholder: \"Maximum Value\",\n            keyboardType: \"numeric\",\n            placeholderTextColor: THEME.text.light + '80'\n          }), _jsxs(View, {\n            style: styles.modalButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.background.secondary\n              }],\n              onPress: function onPress() {\n                setShowAddResource(false);\n                setNewResourceName('');\n                setNewResourceMax('');\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.success\n              }],\n              onPress: function onPress() {\n                if (newResourceName && newResourceMax) {\n                  handleAddResource({\n                    name: newResourceName,\n                    maxFormula: newResourceMax,\n                    reset: 'longRest'\n                  });\n                }\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Add\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n});\nvar PinnedNotes = memo(function (_ref18) {\n  var character = _ref18.character,\n    onUpdate = _ref18.onUpdate;\n  if (!character) return null;\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    showAddNote = _useState24[0],\n    setShowAddNote = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    newNote = _useState26[0],\n    setNewNote = _useState26[1];\n  var handleRemoveNote = function handleRemoveNote(index) {\n    try {\n      var updatedNotes = _toConsumableArray(character.pinnedNotes || []);\n      updatedNotes.splice(index, 1);\n      var updatedCharacter = _objectSpread(_objectSpread({}, character), {}, {\n        pinnedNotes: updatedNotes,\n        resources: character.resources || {},\n        inventory: character.inventory || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        }\n      });\n      onUpdate(updatedCharacter);\n    } catch (error) {\n      console.error('Error removing note:', error);\n      Alert.alert('Error', 'Failed to remove note');\n    }\n  };\n  var handleAddNote = function handleAddNote() {\n    try {\n      if (newNote.trim()) {\n        var updatedNotes = _toConsumableArray(character.pinnedNotes || []);\n        if (updatedNotes.length >= MAX_PINNED_NOTES) {\n          updatedNotes.pop();\n        }\n        updatedNotes.unshift(newNote.trim());\n        var updatedCharacter = _objectSpread(_objectSpread({}, character), {}, {\n          pinnedNotes: updatedNotes,\n          resources: character.resources || {},\n          inventory: character.inventory || [],\n          currency: character.currency || {\n            CP: 0,\n            SP: 0,\n            EP: 0,\n            GP: 0,\n            PP: 0\n          }\n        });\n        onUpdate(updatedCharacter);\n        setShowAddNote(false);\n        setNewNote('');\n      }\n    } catch (error) {\n      console.error('Error adding note:', error);\n      Alert.alert('Error', 'Failed to add note');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.pinnedNotesContainer,\n    children: [_jsxs(View, {\n      style: styles.pinnedNotesHeader,\n      children: [_jsx(Text, {\n        style: styles.resourceTitle,\n        children: \"Pinned Notes\"\n      }), _jsx(TouchableOpacity, {\n        style: [styles.resourceButton, {\n          backgroundColor: THEME.accent\n        }],\n        onPress: function onPress() {\n          return setShowAddNote(true);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Add Note\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.pinnedNotesList,\n      children: (character.pinnedNotes || []).map(function (note, index) {\n        return _jsxs(View, {\n          style: styles.pinnedNoteItem,\n          children: [_jsx(Text, {\n            style: styles.pinnedNoteText,\n            numberOfLines: 2,\n            children: note\n          }), _jsx(TouchableOpacity, {\n            style: styles.removeNoteButton,\n            onPress: function onPress() {\n              return handleRemoveNote(index);\n            },\n            children: _jsx(Text, {\n              style: [styles.buttonText, {\n                fontSize: 18\n              }],\n              children: \"\\xD7\"\n            })\n          })]\n        }, index);\n      })\n    }), _jsx(Modal, {\n      visible: showAddNote,\n      transparent: true,\n      animationType: \"fade\",\n      onRequestClose: function onRequestClose() {\n        return setShowAddNote(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Add Pinned Note\"\n          }), _jsx(TextInput, {\n            style: [styles.input, {\n              height: 100,\n              textAlignVertical: 'top'\n            }],\n            value: newNote,\n            onChangeText: setNewNote,\n            placeholder: \"Enter your note...\",\n            placeholderTextColor: THEME.text.light + '80',\n            multiline: true\n          }), _jsxs(View, {\n            style: styles.modalButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.background.secondary\n              }],\n              onPress: function onPress() {\n                setShowAddNote(false);\n                setNewNote('');\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.success\n              }],\n              onPress: handleAddNote,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Add\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n});\nexport default function App() {\n  var _initialGameState$cam, _tokens$initiative$cu, _initiative$currentTu2, _initiative$currentTu3;\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    roomCode = _useState28[0],\n    setRoomCode = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    isConnected = _useState30[0],\n    setIsConnected = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    isLoading = _useState32[0],\n    setIsLoading = _useState32[1];\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    isJoining = _useState34[0],\n    setIsJoining = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    isUpdating = _useState36[0],\n    setIsUpdating = _useState36[1];\n  var _useState37 = useState(true),\n    _useState38 = _slicedToArray(_useState37, 2),\n    showRoomModal = _useState38[0],\n    setShowRoomModal = _useState38[1];\n  var _useState39 = useState(true),\n    _useState40 = _slicedToArray(_useState39, 2),\n    isDarkMode = _useState40[0],\n    setIsDarkMode = _useState40[1];\n  var _useState41 = useState(isSmallScreen ? 0.8 : 1),\n    _useState42 = _slicedToArray(_useState41, 2),\n    zoomLevel = _useState42[0],\n    setZoomLevel = _useState42[1];\n  var _useState43 = useState({}),\n    _useState44 = _slicedToArray(_useState43, 2),\n    tokens = _useState44[0],\n    setTokens = _useState44[1];\n  var _useState45 = useState(COLORS[0]),\n    _useState46 = _slicedToArray(_useState45, 2),\n    currentColor = _useState46[0],\n    setCurrentColor = _useState46[1];\n  var _useState47 = useState([]),\n    _useState48 = _slicedToArray(_useState47, 2),\n    initiative = _useState48[0],\n    setInitiative = _useState48[1];\n  var _useState49 = useState(false),\n    _useState50 = _slicedToArray(_useState49, 2),\n    inCombat = _useState50[0],\n    setInCombat = _useState50[1];\n  var _useState51 = useState(0),\n    _useState52 = _slicedToArray(_useState51, 2),\n    currentTurn = _useState52[0],\n    setCurrentTurn = _useState52[1];\n  var _useState53 = useState(initialGameState.layers),\n    _useState54 = _slicedToArray(_useState53, 2),\n    layers = _useState54[0],\n    setLayers = _useState54[1];\n  var _useState55 = useState([]),\n    _useState56 = _slicedToArray(_useState55, 2),\n    diceHistory = _useState56[0],\n    setDiceHistory = _useState56[1];\n  var _useState57 = useState(false),\n    _useState58 = _slicedToArray(_useState57, 2),\n    advantage = _useState58[0],\n    setAdvantage = _useState58[1];\n  var _useState59 = useState(0),\n    _useState60 = _slicedToArray(_useState59, 2),\n    modifier = _useState60[0],\n    setModifier = _useState60[1];\n  var _useState61 = useState(null),\n    _useState62 = _slicedToArray(_useState61, 2),\n    selectedToken = _useState62[0],\n    setSelectedToken = _useState62[1];\n  var _useState63 = useState(false),\n    _useState64 = _slicedToArray(_useState63, 2),\n    showTokenModal = _useState64[0],\n    setShowTokenModal = _useState64[1];\n  var _useState65 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: [],\n      currentViewer: null\n    }),\n    _useState66 = _slicedToArray(_useState65, 2),\n    partyLoot = _useState66[0],\n    setPartyLoot = _useState66[1];\n  var _useState67 = useState(false),\n    _useState68 = _slicedToArray(_useState67, 2),\n    showPartyLoot = _useState68[0],\n    setShowPartyLoot = _useState68[1];\n  var _useState69 = useState(1),\n    _useState70 = _slicedToArray(_useState69, 2),\n    diceQuantity = _useState70[0],\n    setDiceQuantity = _useState70[1];\n  var _useState71 = useState([]),\n    _useState72 = _slicedToArray(_useState71, 2),\n    characters = _useState72[0],\n    setCharacters = _useState72[1];\n  var _useState73 = useState(false),\n    _useState74 = _slicedToArray(_useState73, 2),\n    showCharacterSheet = _useState74[0],\n    setShowCharacterSheet = _useState74[1];\n  var _useState75 = useState(null),\n    _useState76 = _slicedToArray(_useState75, 2),\n    selectedCharacter = _useState76[0],\n    setSelectedCharacter = _useState76[1];\n  var _useState77 = useState(false),\n    _useState78 = _slicedToArray(_useState77, 2),\n    showInventory = _useState78[0],\n    setShowInventory = _useState78[1];\n  var _useState79 = useState(''),\n    _useState80 = _slicedToArray(_useState79, 2),\n    playerName = _useState80[0],\n    setPlayerName = _useState80[1];\n  var _useState81 = useState(true),\n    _useState82 = _slicedToArray(_useState81, 2),\n    showPlayerNameModal = _useState82[0],\n    setShowPlayerNameModal = _useState82[1];\n  var _useState83 = useState('normal'),\n    _useState84 = _slicedToArray(_useState83, 2),\n    rollType = _useState84[0],\n    setRollType = _useState84[1];\n  var _useState85 = useState(null),\n    _useState86 = _slicedToArray(_useState85, 2),\n    diceResult = _useState86[0],\n    setDiceResult = _useState86[1];\n  var _useState87 = useState(false),\n    _useState88 = _slicedToArray(_useState87, 2),\n    showDiceResult = _useState88[0],\n    setShowDiceResult = _useState88[1];\n  var _useState89 = useState(false),\n    _useState90 = _slicedToArray(_useState89, 2),\n    showDeleteModal = _useState90[0],\n    setShowDeleteModal = _useState90[1];\n  var _useState91 = useState(false),\n    _useState92 = _slicedToArray(_useState91, 2),\n    isDM = _useState92[0],\n    setIsDM = _useState92[1];\n  var _useState93 = useState(false),\n    _useState94 = _slicedToArray(_useState93, 2),\n    showEnemySelect = _useState94[0],\n    setShowEnemySelect = _useState94[1];\n  var _useState95 = useState(null),\n    _useState96 = _slicedToArray(_useState95, 2),\n    selectedPosition = _useState96[0],\n    setSelectedPosition = _useState96[1];\n  var _useState97 = useState(''),\n    _useState98 = _slicedToArray(_useState97, 2),\n    storyText = _useState98[0],\n    setStoryText = _useState98[1];\n  var _useState99 = useState(false),\n    _useState100 = _slicedToArray(_useState99, 2),\n    isAoeMode = _useState100[0],\n    setIsAoeMode = _useState100[1];\n  var _useState101 = useState(false),\n    _useState102 = _slicedToArray(_useState101, 2),\n    showColorWheel = _useState102[0],\n    setShowColorWheel = _useState102[1];\n  var firebaseRef = useRef(null);\n  var unsubscribeRef = useRef(null);\n  var handleDisconnect = useCallback(function () {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n  var handleInitiativeRoll = useCallback(function () {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n    var rolls = Object.entries(tokens).map(function (_ref19) {\n      var _ref20 = _slicedToArray(_ref19, 2),\n        position = _ref20[0],\n        token = _ref20[1];\n      var roll = Math.floor(Math.random() * 20) + 1;\n      var initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position: position,\n        initiative: initiative,\n        details: token.name + \" (\" + initiative + \")\"\n      };\n    });\n    rolls.sort(function (a, b) {\n      return b.initiative - a.initiative;\n    });\n    if (firebaseRef.current) {\n      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n        tokens: tokens,\n        layers: layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      }));\n    }\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n  var rollDice = useCallback(function (sides) {\n    var allRolls = [];\n    for (var d = 0; d < diceQuantity; d++) {\n      var rolls = [];\n      var numRolls = rollType !== 'normal' ? 2 : 1;\n      for (var i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n      var finalRoll = rollType === 'advantage' ? Math.max.apply(Math, rolls) : rollType === 'disadvantage' ? Math.min.apply(Math, rolls) : rolls[0];\n      allRolls.push({\n        rolls: rolls,\n        total: finalRoll\n      });\n    }\n    var grandTotal = allRolls.reduce(function (sum, roll) {\n      return sum + roll.total;\n    }, 0) + modifier;\n    var newResult = {\n      dice: diceQuantity + \"d\" + sides,\n      rolls: allRolls.map(function (r) {\n        return r.rolls;\n      }).flat(),\n      individualTotals: allRolls.map(function (r) {\n        return r.total;\n      }),\n      modifier: modifier,\n      rollType: rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n    setDiceHistory(function (prev) {\n      return [newResult].concat(_toConsumableArray(prev.slice(0, 49)));\n    });\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n  var handleCellPress = useCallback(function () {\n    var _ref21 = _asyncToGenerator(function* (row, col) {\n      if (!firebaseRef.current) return;\n      try {\n        var position = row + \"-\" + col;\n        if (isAoeMode) {\n          var _currentRoomData$laye;\n          var _snapshot = yield get(firebaseRef.current);\n          var _currentRoomData = _snapshot.val() || {};\n          var currentAoe = ((_currentRoomData$laye = _currentRoomData.layers) == null ? void 0 : _currentRoomData$laye.aoe) || {};\n          var newAoe = _objectSpread({}, currentAoe);\n          if (newAoe[position]) {\n            delete newAoe[position];\n          } else {\n            newAoe[position] = {\n              color: currentColor\n            };\n          }\n          yield set(firebaseRef.current, _objectSpread(_objectSpread({}, _currentRoomData), {}, {\n            layers: _objectSpread(_objectSpread({}, _currentRoomData.layers), {}, {\n              aoe: newAoe\n            }),\n            lastUpdate: Date.now()\n          }));\n          return;\n        }\n        var newTokens = _objectSpread({}, tokens);\n        var snapshot = yield get(firebaseRef.current);\n        var currentRoomData = snapshot.val() || {};\n        if (tokens[position]) {\n          delete newTokens[position];\n        } else {\n          if (isDM) {\n            setSelectedPosition(position);\n            setShowEnemySelect(true);\n            return;\n          } else {\n            if (!selectedCharacter) {\n              Alert.alert('No Character Selected', 'Please select a character from your list first.');\n              return;\n            }\n            newTokens[position] = {\n              name: selectedCharacter.name,\n              color: currentColor,\n              hp: selectedCharacter.hp,\n              maxHp: selectedCharacter.maxHp,\n              ac: selectedCharacter.ac,\n              initiativeBonus: calculateModifier(selectedCharacter.abilityScores.DEX),\n              effects: [],\n              position: position,\n              owner: playerName\n            };\n          }\n        }\n        yield set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n          tokens: newTokens,\n          lastUpdate: Date.now()\n        }));\n        setTokens(newTokens);\n      } catch (error) {\n        console.error('Error updating tokens:', error);\n        Alert.alert('Error', 'Failed to update token');\n      }\n    });\n    return function (_x, _x2) {\n      return _ref21.apply(this, arguments);\n    };\n  }(), [tokens, isDM, selectedCharacter, playerName, currentColor, isAoeMode]);\n  var savePlayerData = useCallback(function () {\n    var _ref22 = _asyncToGenerator(function* (newCharacters) {\n      try {\n        if (!playerName || !roomCode) {\n          console.error('Missing playerName or roomCode');\n          return;\n        }\n        var roomRef = ref(database, \"rooms/\" + roomCode);\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var roomSnapshot = yield get(roomRef);\n        var currentRoomData = roomSnapshot.exists() ? roomSnapshot.val() : {};\n        yield set(roomRef, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n          characters: newCharacters,\n          lastUpdate: serverTimestamp()\n        }));\n        yield set(globalPlayerRef, {\n          characters: newCharacters,\n          lastUpdate: serverTimestamp()\n        });\n        setCharacters(newCharacters);\n      } catch (error) {\n        console.error('Error saving player data:', error);\n        Alert.alert('Error', 'Failed to save changes');\n        throw error;\n      }\n    });\n    return function (_x3) {\n      return _ref22.apply(this, arguments);\n    };\n  }(), [playerName, roomCode, database]);\n  var connectToRoom = useCallback(function () {\n    var _ref23 = _asyncToGenerator(function* (code) {\n      if (!code.trim() || !playerName) {\n        Alert.alert(\"Error\", \"Please enter a room code and player name\");\n        return;\n      }\n      setIsJoining(true);\n      setIsLoading(true);\n      try {\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerSnapshot = yield get(globalPlayerRef);\n        var savedCharacters = [];\n        if (playerSnapshot.exists()) {\n          var playerData = playerSnapshot.val();\n          savedCharacters = playerData.characters || [];\n          setCharacters(savedCharacters);\n        }\n        var gameRef = ref(database, \"rooms/\" + code);\n        firebaseRef.current = gameRef;\n        var snapshot = yield get(gameRef);\n        if (!snapshot.exists()) {\n          yield set(gameRef, _objectSpread(_objectSpread({}, initialGameState), {}, {\n            players: _defineProperty({}, playerName, {\n              characters: savedCharacters,\n              lastUpdate: Date.now()\n            })\n          }));\n        } else {\n          var roomData = snapshot.val();\n          if (roomData.players && roomData.players[playerName]) {\n            var roomCharacters = roomData.players[playerName].characters || [];\n            setCharacters(roomCharacters);\n          } else {\n            var updatedRoomData = _objectSpread(_objectSpread({}, roomData), {}, {\n              players: _objectSpread(_objectSpread({}, roomData.players || {}), {}, _defineProperty({}, playerName, {\n                characters: savedCharacters,\n                lastUpdate: Date.now()\n              }))\n            });\n            yield set(gameRef, updatedRoomData);\n          }\n        }\n        var unsubscribe = onValue(gameRef, function (snapshot) {\n          var data = snapshot.val();\n          if (data) {\n            var _data$campaignStory, _data$campaignStory2;\n            setTokens(data.tokens || {});\n            setLayers(data.layers || initialGameState.layers);\n            setInitiative(data.initiative || []);\n            setInCombat(data.inCombat || false);\n            setCurrentTurn(data.currentTurn || 0);\n            setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n            if (((_data$campaignStory = data.campaignStory) == null ? void 0 : _data$campaignStory.text) !== undefined && ((_data$campaignStory2 = data.campaignStory) == null ? void 0 : _data$campaignStory2.updatedBy) !== playerName) {\n              setStoryText(data.campaignStory.text);\n            }\n            if (data.players && data.players[playerName]) {\n              var newCharacters = data.players[playerName].characters || [];\n              setCharacters(newCharacters);\n            }\n          }\n        });\n        unsubscribeRef.current = unsubscribe;\n        setRoomCode(code);\n        setShowRoomModal(false);\n        setIsConnected(true);\n      } catch (error) {\n        console.error('Connection error:', error);\n        Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n        setIsConnected(false);\n      } finally {\n        setIsJoining(false);\n        setIsLoading(false);\n      }\n    });\n    return function (_x4) {\n      return _ref23.apply(this, arguments);\n    };\n  }(), [playerName]);\n  useEffect(function () {\n    var handleOffline = function handleOffline() {\n      Alert.alert('Connection Lost', 'Please check your internet connection', [{\n        text: 'OK'\n      }]);\n    };\n    window.addEventListener('offline', handleOffline);\n    return function () {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n  var layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%'\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    },\n    characterItem: {\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 5,\n      backgroundColor: THEME.background.secondary\n    },\n    characterInfo: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    },\n    characterDetails: {\n      color: THEME.text.light,\n      opacity: 0.8\n    }\n  };\n  var handleDeleteCharacter = useCallback(_asyncToGenerator(function* () {\n    if (!selectedCharacter) return;\n    try {\n      var newCharacters = characters.filter(function (char) {\n        return char.name !== selectedCharacter.name;\n      });\n      setCharacters(newCharacters);\n      yield savePlayerData(newCharacters);\n      setSelectedCharacter(null);\n      setShowDeleteModal(false);\n    } catch (error) {\n      console.error('Error deleting character:', error);\n      Alert.alert('Error', 'Failed to delete character');\n    }\n  }), [selectedCharacter, characters, savePlayerData]);\n  var handleEnemySelect = useCallback(function () {\n    var _ref25 = _asyncToGenerator(function* (enemy) {\n      if (!selectedPosition || !firebaseRef.current) return;\n      try {\n        var newTokens = _objectSpread({}, tokens);\n        newTokens[selectedPosition] = _objectSpread(_objectSpread({}, enemy), {}, {\n          position: selectedPosition,\n          effects: [],\n          owner: 'DM'\n        });\n        var snapshot = yield get(firebaseRef.current);\n        var currentRoomData = snapshot.val() || {};\n        yield set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n          tokens: newTokens,\n          lastUpdate: Date.now()\n        }));\n        setTokens(newTokens);\n        setShowEnemySelect(false);\n        setSelectedPosition(null);\n      } catch (error) {\n        console.error('Error adding enemy:', error);\n        Alert.alert('Error', 'Failed to add enemy');\n      }\n    });\n    return function (_x5) {\n      return _ref25.apply(this, arguments);\n    };\n  }(), [selectedPosition, tokens]);\n  return _jsxs(SafeAreaView, {\n    style: [styles.container, isDarkMode && styles.darkMode],\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TokenModal, {\n        showTokenModal: showTokenModal,\n        setShowTokenModal: setShowTokenModal,\n        selectedToken: selectedToken,\n        setSelectedToken: setSelectedToken,\n        tokens: tokens,\n        firebaseRef: firebaseRef,\n        initialGameState: initialGameState,\n        layers: layers,\n        initiative: initiative,\n        inCombat: inCombat,\n        currentTurn: currentTurn,\n        THEME: THEME\n      }), _jsx(RoomModal, {\n        showRoomModal: showRoomModal,\n        setShowRoomModal: setShowRoomModal,\n        isConnected: isConnected,\n        roomCode: roomCode,\n        setRoomCode: setRoomCode,\n        isJoining: isJoining,\n        connectToRoom: connectToRoom\n      }), _jsx(PlayerNameModal, {\n        visible: showPlayerNameModal && !playerName,\n        onSubmit: function onSubmit(name) {\n          setPlayerName(name);\n          setShowPlayerNameModal(false);\n          setIsConnected(true);\n        }\n      }), _jsx(DiceResultModal, {\n        visible: showDiceResult,\n        result: diceResult,\n        onClose: function onClose() {\n          return setShowDiceResult(false);\n        }\n      }), _jsx(PartyLootModal, {\n        visible: showPartyLoot,\n        onClose: function onClose() {\n          return setShowPartyLoot(false);\n        },\n        partyLoot: partyLoot,\n        playerName: playerName,\n        onUpdate: function onUpdate(updatedLoot) {\n          setPartyLoot(updatedLoot);\n          if (firebaseRef.current) {\n            set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n              tokens: tokens,\n              layers: layers,\n              initiative: initiative,\n              inCombat: inCombat,\n              currentTurn: currentTurn,\n              partyLoot: updatedLoot\n            }));\n          }\n        }\n      }), _jsx(CharacterSheetModal, {\n        visible: showCharacterSheet,\n        onClose: function onClose() {\n          return setShowCharacterSheet(false);\n        },\n        character: selectedCharacter || {\n          name: '',\n          class: '',\n          level: 1,\n          owner: playerName,\n          proficiencyBonus: 2,\n          hp: 0,\n          maxHp: 0,\n          ac: 10,\n          abilityScores: {\n            STR: 10,\n            DEX: 10,\n            CON: 10,\n            INT: 10,\n            WIS: 10,\n            CHA: 10\n          },\n          proficientSkills: [],\n          currency: {\n            CP: 0,\n            SP: 0,\n            EP: 0,\n            GP: 0,\n            PP: 0\n          },\n          resources: {},\n          pinnedNotes: [],\n          inventory: [],\n          items: []\n        },\n        characters: characters,\n        onUpdate: (function () {\n          var _ref26 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n              var newCharacters = selectedCharacter ? characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              }) : [].concat(_toConsumableArray(characters), [updatedCharacter]);\n              yield savePlayerData(newCharacters);\n              setCharacters(newCharacters);\n              setSelectedCharacter(updatedCharacter);\n              setShowCharacterSheet(false);\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          });\n          return function (_x6) {\n            return _ref26.apply(this, arguments);\n          };\n        }())\n      }), _jsx(InventoryModal, {\n        visible: showInventory,\n        onClose: function onClose() {\n          return setShowInventory(false);\n        },\n        character: selectedCharacter,\n        onUpdate: (function () {\n          var _ref27 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              var newCharacters = characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              });\n              setCharacters(newCharacters);\n              yield savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          });\n          return function (_x7) {\n            return _ref27.apply(this, arguments);\n          };\n        }())\n      }), !isConnected ? _jsx(View, {\n        style: styles.loadingContainer,\n        children: isLoading ? _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(ActivityIndicator, {\n            size: \"large\",\n            color: THEME.accent\n          }), _jsx(Text, {\n            style: [styles.loadingText, {\n              marginTop: 20\n            }],\n            children: \"Connecting to room...\"\n          })]\n        }) : _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Enter a room code to begin\"\n        })\n      }) : _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"D&D Combat Tracker\"\n          }), _jsxs(ScrollView, {\n            horizontal: isSmallScreen,\n            showsHorizontalScrollIndicator: false,\n            contentContainerStyle: styles.controls,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: function onPress() {\n                return setShowRoomModal(true);\n              },\n              children: _jsxs(Text, {\n                style: styles.buttonText,\n                children: [\"Room: \", roomCode]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: handleInitiativeRoll,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Roll Initiative\"\n              })\n            }), inCombat && _jsxs(_Fragment, {\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  var nextTurn = (currentTurn + 1) % initiative.length;\n                  setCurrentTurn(nextTurn);\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: true,\n                      currentTurn: nextTurn\n                    }));\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Next Turn\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: [],\n                      inCombat: false,\n                      currentTurn: 0\n                    }));\n                  }\n                  setInitiative([]);\n                  setInCombat(false);\n                  setCurrentTurn(0);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"End Combat\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.danger\n              }],\n              onPress: function onPress() {\n                Alert.alert(\"Leave Room\", \"Are you sure you want to leave this room?\", [{\n                  text: \"Cancel\",\n                  style: \"cancel\"\n                }, {\n                  text: \"Leave\",\n                  style: \"destructive\",\n                  onPress: function onPress() {\n                    handleDisconnect();\n                    setShowRoomModal(true);\n                  }\n                }]);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Leave Room\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, isDM && styles.dmToggleActive],\n              onPress: function onPress() {\n                return setIsDM(!isDM);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"DM Mode\"\n              })\n            }), _jsx(View, {\n              style: styles.controls,\n              children: _jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: isAoeMode ? THEME.accent : THEME.background.secondary\n                }],\n                onPress: function onPress() {\n                  return setIsAoeMode(!isAoeMode);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"AoE Mode\"\n                })\n              })\n            })]\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.content,\n          children: _jsxs(View, {\n            style: styles.mainArea,\n            children: [_jsxs(View, {\n              style: styles.leftSidebar,\n              children: [_jsxs(View, {\n                style: diceStyles.dicePanel,\n                children: [_jsx(Text, {\n                  style: diceStyles.diceTitle,\n                  children: \"Dice Roller\"\n                }), _jsxs(View, {\n                  style: diceStyles.diceControls,\n                  children: [_jsx(View, {\n                    style: diceStyles.controlsRow,\n                    children: _jsxs(View, {\n                      style: diceStyles.controlGroup,\n                      children: [_jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'advantage' && diceStyles.controlActive, rollType === 'advantage' && {\n                          backgroundColor: THEME.success\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'advantage' ? 'normal' : 'advantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Advantage\"\n                        })\n                      }), _jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'disadvantage' && diceStyles.controlActive, rollType === 'disadvantage' && {\n                          backgroundColor: THEME.danger\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'disadvantage' ? 'normal' : 'disadvantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Disadvantage\"\n                        })\n                      })]\n                    })\n                  }), _jsxs(View, {\n                    style: diceStyles.controlsRow,\n                    children: [_jsxs(View, {\n                      style: diceStyles.modifierGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.modifierLabel,\n                        children: \"Modifier\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.modifierInput,\n                        value: String(modifier),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 0;\n                          setModifier(num);\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    }), _jsxs(View, {\n                      style: diceStyles.quantityGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.quantityLabel,\n                        children: \"Quantity\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.quantityInput,\n                        value: String(diceQuantity),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 1;\n                          setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    })]\n                  })]\n                }), _jsx(View, {\n                  style: diceStyles.diceGrid,\n                  children: DICE_TYPES.map(function (_ref28) {\n                    var sides = _ref28.sides;\n                    return _jsx(TouchableOpacity, {\n                      style: [diceStyles.diceButton, {\n                        backgroundColor: THEME.background.secondary\n                      }],\n                      onPress: function onPress() {\n                        var rolls = [];\n                        for (var i = 0; i < diceQuantity; i++) {\n                          if (rollType !== 'normal') {\n                            var roll1 = Math.floor(Math.random() * sides) + 1;\n                            var roll2 = Math.floor(Math.random() * sides) + 1;\n                            rolls.push(rollType === 'advantage' ? Math.max(roll1, roll2) : Math.min(roll1, roll2));\n                          } else {\n                            rolls.push(Math.floor(Math.random() * sides) + 1);\n                          }\n                        }\n                        var total = rolls.reduce(function (sum, roll) {\n                          return sum + roll;\n                        }, 0) + modifier;\n                        var result = {\n                          dice: diceQuantity + \"d\" + sides,\n                          rolls: rolls,\n                          modifier: modifier,\n                          rollType: rollType,\n                          total: total\n                        };\n                        setDiceResult(result);\n                        setShowDiceResult(true);\n                        Vibration.vibrate(50);\n                      },\n                      children: _jsxs(Text, {\n                        style: diceStyles.diceButtonText,\n                        children: [\"d\", sides]\n                      })\n                    }, sides);\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.infoPanel,\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Player Tools\"\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll = Math.floor(Math.random() * 20) + 1;\n                      setDiceResult({\n                        dice: \"d20\",\n                        rolls: [roll],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: roll\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick d20\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll1 = Math.floor(Math.random() * 20) + 1;\n                      var roll2 = Math.floor(Math.random() * 20) + 1;\n                      var total = Math.max(roll1, roll2);\n                      setDiceResult({\n                        dice: \"d20 with advantage\",\n                        rolls: [roll1, roll2],\n                        modifier: 0,\n                        rollType: 'advantage',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Advantage\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var damage = Math.floor(Math.random() * 8) + 1;\n                      setDiceResult({\n                        dice: \"d8\",\n                        rolls: [damage],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: damage\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Damage\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll1 = Math.floor(Math.random() * 20) + 1;\n                      var roll2 = Math.floor(Math.random() * 20) + 1;\n                      var total = Math.min(roll1, roll2);\n                      setDiceResult({\n                        dice: \"d20 with disadvantage\",\n                        rolls: [roll1, roll2],\n                        modifier: 0,\n                        rollType: 'disadvantage',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Disadvantage\"\n                    })\n                  })]\n                }), _jsx(View, {\n                  style: styles.divider\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.accent\n                    }],\n                    onPress: function onPress() {\n                      var rolls = [Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1].sort(function (a, b) {\n                        return b - a;\n                      });\n                      rolls.pop();\n                      var total = rolls.reduce(function (sum, roll) {\n                        return sum + roll;\n                      }, 0);\n                      setDiceResult({\n                        dice: \"4d6 drop lowest\",\n                        rolls: rolls,\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Roll Ability Score\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.success\n                    }],\n                    onPress: function onPress() {\n                      var roll = Math.floor(Math.random() * 100) + 1;\n                      setDiceResult({\n                        dice: \"d100\",\n                        rolls: [roll],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: roll\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Percentile Roll\"\n                    })\n                  })]\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.gridSection,\n              children: [_jsx(ScrollView, {\n                horizontal: true,\n                contentContainerStyle: {\n                  minWidth: '100%'\n                },\n                children: _jsx(ScrollView, {\n                  children: _jsxs(View, {\n                    style: [styles.gridContainer, {\n                      transform: [{\n                        scale: zoomLevel\n                      }]\n                    }],\n                    children: [_jsx(View, {\n                      style: styles.colorPicker,\n                      children: _jsx(TouchableOpacity, {\n                        style: [styles.colorButton, {\n                          backgroundColor: currentColor,\n                          width: 40,\n                          height: 40\n                        }],\n                        onPress: function onPress() {\n                          return setShowColorWheel(true);\n                        }\n                      })\n                    }), Array.from({\n                      length: GRID_SIZE\n                    }).map(function (_, row) {\n                      return _jsx(View, {\n                        style: styles.row,\n                        children: Array.from({\n                          length: GRID_SIZE\n                        }).map(function (_, col) {\n                          var _initiative$currentTu, _layers$aoe;\n                          var position = row + \"-\" + col;\n                          var token = tokens[position];\n                          var isCurrentTurn = inCombat && ((_initiative$currentTu = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu.position) === position;\n                          return _jsx(TouchableOpacity, {\n                            style: [styles.cell, token && {\n                              backgroundColor: token.color\n                            }, ((_layers$aoe = layers.aoe) == null ? void 0 : _layers$aoe[position]) && {\n                              backgroundColor: layers.aoe[position].color,\n                              opacity: 0.5\n                            }, isCurrentTurn && styles.currentTurn],\n                            onPress: function onPress() {\n                              return handleCellPress(row, col);\n                            },\n                            onLongPress: function onLongPress() {\n                              if (token) {\n                                setSelectedToken(_objectSpread(_objectSpread({}, token), {}, {\n                                  position: position\n                                }));\n                                setShowTokenModal(true);\n                              }\n                            },\n                            children: token && _jsxs(View, {\n                              style: styles.tokenContent,\n                              children: [_jsx(Text, {\n                                style: [styles.tokenText, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                numberOfLines: 1,\n                                children: token.name\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [\"HP: \", token.hp, \"/\", token.maxHp]\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [\"AC: \", token.ac]\n                              }), token.effects && token.effects.length > 0 && _jsx(View, {\n                                style: statusStyles.tokenEffects,\n                                children: token.effects.map(function (effect) {\n                                  var statusEffect = STATUS_EFFECTS.find(function (e) {\n                                    return e.id === effect;\n                                  });\n                                  return statusEffect ? _jsx(Text, {\n                                    style: statusStyles.effectIcon,\n                                    children: statusEffect.icon\n                                  }, effect) : null;\n                                })\n                              })]\n                            })\n                          }, col);\n                        })\n                      }, row);\n                    })]\n                  })\n                })\n              }), _jsx(GridZoomControls, {\n                zoomLevel: zoomLevel,\n                setZoomLevel: setZoomLevel\n              }), _jsxs(View, {\n                style: [styles.infoPanel, {\n                  marginTop: 20\n                }],\n                children: [_jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: 10\n                  },\n                  children: [_jsx(Text, {\n                    style: styles.infoPanelTitle,\n                    children: \"Campaign Story\"\n                  }), isDM && _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.accent,\n                      width: 100\n                    }],\n                    onPress: function onPress() {\n                      if (firebaseRef.current) {\n                        get(firebaseRef.current).then(function (snapshot) {\n                          var currentRoomData = snapshot.val() || {};\n                          set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                            campaignStory: {\n                              text: storyText,\n                              lastUpdate: Date.now(),\n                              updatedBy: playerName\n                            }\n                          }));\n                        });\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Save Story\"\n                    })\n                  })]\n                }), _jsx(TextInput, {\n                  style: [styles.input, {\n                    height: 200,\n                    textAlignVertical: 'top',\n                    padding: 10,\n                    backgroundColor: THEME.background.secondary,\n                    color: THEME.text.light,\n                    fontSize: 14,\n                    lineHeight: 20,\n                    marginBottom: 10\n                  }],\n                  multiline: true,\n                  value: storyText,\n                  onChangeText: isDM ? setStoryText : undefined,\n                  editable: isDM,\n                  placeholder: \"Type or paste your campaign story here...\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), ((_initialGameState$cam = initialGameState.campaignStory) == null ? void 0 : _initialGameState$cam.updatedBy) && _jsxs(Text, {\n                  style: [styles.infoLabel, {\n                    textAlign: 'right'\n                  }],\n                  children: [\"Last updated by \", initialGameState.campaignStory.updatedBy]\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.rightSidebar,\n              children: [_jsxs(View, {\n                style: styles.quickActions,\n                children: [_jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: function onPress() {\n                    var newCharacter = {\n                      name: '',\n                      class: '',\n                      level: 1,\n                      owner: playerName,\n                      proficiencyBonus: 2,\n                      hp: 0,\n                      maxHp: 0,\n                      ac: 10,\n                      abilityScores: {\n                        STR: 10,\n                        DEX: 10,\n                        CON: 10,\n                        INT: 10,\n                        WIS: 10,\n                        CHA: 10\n                      },\n                      proficientSkills: [],\n                      currency: {\n                        CP: 0,\n                        SP: 0,\n                        EP: 0,\n                        GP: 0,\n                        PP: 0\n                      },\n                      resources: {},\n                      pinnedNotes: [],\n                      inventory: []\n                    };\n                    setSelectedCharacter(newCharacter);\n                    setShowCharacterSheet(true);\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"New Character\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: function onPress() {\n                    return setShowPartyLoot(true);\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Party Loot\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: handleInitiativeRoll,\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Roll Initiative\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: [styles.quickActionButton, {\n                    backgroundColor: THEME.danger\n                  }],\n                  onPress: function onPress() {\n                    if (firebaseRef.current) {\n                      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                        tokens: {},\n                        layers: layers,\n                        initiative: [],\n                        inCombat: false,\n                        currentTurn: 0,\n                        partyLoot: partyLoot,\n                        characters: characters\n                      }));\n                      setTokens({});\n                      setInitiative([]);\n                      setInCombat(false);\n                      setCurrentTurn(0);\n                    }\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Clear Board\"\n                  })\n                })]\n              }), _jsxs(View, {\n                style: [styles.infoPanel, {\n                  marginBottom: 15\n                }],\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Characters\"\n                }), _jsx(ScrollView, {\n                  style: {\n                    maxHeight: 200\n                  },\n                  children: characters.map(function (char, index) {\n                    return _jsx(TouchableOpacity, {\n                      style: [layoutStyles.characterItem, (selectedCharacter == null ? void 0 : selectedCharacter.name) === char.name && {\n                        backgroundColor: THEME.accent + '40'\n                      }],\n                      onPress: function onPress() {\n                        return setSelectedCharacter(char);\n                      },\n                      children: _jsxs(View, {\n                        style: layoutStyles.characterInfo,\n                        children: [_jsxs(View, {\n                          children: [_jsx(Text, {\n                            style: layoutStyles.characterName,\n                            children: char.name\n                          }), _jsxs(Text, {\n                            style: layoutStyles.characterDetails,\n                            children: [\"Level \", char.level, \" \", char.class]\n                          })]\n                        }), _jsx(View, {\n                          style: styles.statBadge,\n                          children: _jsxs(Text, {\n                            style: styles.statBadgeText,\n                            children: [\"HP: \", char.hp, \"/\", char.maxHp]\n                          })\n                        })]\n                      })\n                    }, index);\n                  })\n                }), selectedCharacter && _jsxs(_Fragment, {\n                  children: [_jsx(View, {\n                    style: styles.divider\n                  }), _jsxs(View, {\n                    style: styles.infoGrid,\n                    children: [_jsx(TouchableOpacity, {\n                      style: [styles.quickActionButton, {\n                        backgroundColor: THEME.accent\n                      }],\n                      onPress: function onPress() {\n                        var initialCharacter = selectedCharacter ? _objectSpread(_objectSpread({}, selectedCharacter), {}, {\n                          resources: selectedCharacter.resources || {},\n                          pinnedNotes: selectedCharacter.pinnedNotes || [],\n                          inventory: selectedCharacter.inventory || [],\n                          currency: selectedCharacter.currency || {\n                            CP: 0,\n                            SP: 0,\n                            EP: 0,\n                            GP: 0,\n                            PP: 0\n                          }\n                        }) : {\n                          name: '',\n                          class: '',\n                          level: 1,\n                          owner: playerName,\n                          proficiencyBonus: 2,\n                          hp: 0,\n                          maxHp: 0,\n                          ac: 10,\n                          abilityScores: {\n                            STR: 10,\n                            DEX: 10,\n                            CON: 10,\n                            INT: 10,\n                            WIS: 10,\n                            CHA: 10\n                          },\n                          proficientSkills: [],\n                          currency: {\n                            CP: 0,\n                            SP: 0,\n                            EP: 0,\n                            GP: 0,\n                            PP: 0\n                          },\n                          resources: {},\n                          pinnedNotes: [],\n                          inventory: []\n                        };\n                        setSelectedCharacter(initialCharacter);\n                        setShowCharacterSheet(true);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.quickActionText,\n                        children: \"Character Sheet\"\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      style: [styles.quickActionButton, {\n                        backgroundColor: THEME.success\n                      }],\n                      onPress: function onPress() {\n                        return setShowInventory(true);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.quickActionText,\n                        children: \"Inventory\"\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      style: [styles.quickActionButton, {\n                        backgroundColor: THEME.danger\n                      }],\n                      onPress: function onPress() {\n                        return setShowDeleteModal(true);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.quickActionText,\n                        children: \"Delete Character\"\n                      })\n                    })]\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: styles.infoPanel,\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Combat Tracker\"\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, inCombat ? {\n                      backgroundColor: THEME.danger\n                    } : {}],\n                    onPress: function onPress() {\n                      if (inCombat) {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                            tokens: tokens,\n                            layers: layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0\n                          }));\n                        }\n                        setInitiative([]);\n                        setInCombat(false);\n                        setCurrentTurn(0);\n                      } else {\n                        handleInitiativeRoll();\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: inCombat ? 'End Combat' : 'Start Combat'\n                    })\n                  }), inCombat && _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.success\n                    }],\n                    onPress: function onPress() {\n                      var nextTurn = (currentTurn + 1) % initiative.length;\n                      setCurrentTurn(nextTurn);\n                      if (firebaseRef.current) {\n                        set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                          tokens: tokens,\n                          layers: layers,\n                          initiative: initiative,\n                          inCombat: true,\n                          currentTurn: nextTurn\n                        }));\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Next Turn\"\n                    })\n                  })]\n                }), inCombat && initiative.length > 0 && _jsxs(_Fragment, {\n                  children: [_jsx(View, {\n                    style: styles.divider\n                  }), _jsx(Text, {\n                    style: [styles.infoPanelTitle, {\n                      fontSize: 14\n                    }],\n                    children: \"Current Turn\"\n                  }), _jsxs(View, {\n                    style: [styles.infoCard, {\n                      marginBottom: 10\n                    }],\n                    children: [_jsx(Text, {\n                      style: styles.infoValue,\n                      children: ((_tokens$initiative$cu = tokens[(_initiative$currentTu2 = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu2.position]) == null ? void 0 : _tokens$initiative$cu.name) || 'Unknown'\n                    }), _jsxs(Text, {\n                      style: styles.infoLabel,\n                      children: [\"Initiative: \", ((_initiative$currentTu3 = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu3.initiative) || '0']\n                    })]\n                  }), _jsx(Text, {\n                    style: [styles.infoPanelTitle, {\n                      fontSize: 14\n                    }],\n                    children: \"Initiative Order\"\n                  }), _jsx(ScrollView, {\n                    style: {\n                      maxHeight: 150\n                    },\n                    children: initiative.map(function (item, index) {\n                      var token = tokens[item.position];\n                      if (!token) return null;\n                      return _jsxs(View, {\n                        style: [styles.infoCard, {\n                          marginBottom: 5\n                        }, index === currentTurn && {\n                          backgroundColor: THEME.accent + '40'\n                        }],\n                        children: [_jsx(Text, {\n                          style: styles.infoValue,\n                          children: token.name\n                        }), _jsxs(View, {\n                          style: {\n                            flexDirection: 'row',\n                            justifyContent: 'space-between'\n                          },\n                          children: [_jsxs(Text, {\n                            style: styles.infoLabel,\n                            children: [\"Initiative: \", item.initiative]\n                          }), _jsxs(Text, {\n                            style: styles.infoLabel,\n                            children: [\"HP: \", token.hp, \"/\", token.maxHp]\n                          })]\n                        })]\n                      }, item.position);\n                    })\n                  })]\n                })]\n              }), selectedCharacter && _jsxs(View, {\n                style: styles.infoPanel,\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Character Tools\"\n                }), _jsxs(View, {\n                  style: {\n                    gap: 15\n                  },\n                  children: [_jsx(ResourceTracker, {\n                    character: selectedCharacter,\n                    onUpdate: (function () {\n                      var _ref29 = _asyncToGenerator(function* (updatedCharacter) {\n                        try {\n                          if (!updatedCharacter) {\n                            throw new Error('No character data to save');\n                          }\n                          var newCharacters = characters.map(function (char) {\n                            return char.name === selectedCharacter.name ? updatedCharacter : char;\n                          });\n                          setCharacters(newCharacters);\n                          yield savePlayerData(newCharacters);\n                        } catch (error) {\n                          console.error('Error saving character:', error);\n                          Alert.alert('Error', 'Failed to save character');\n                        }\n                      });\n                      return function (_x8) {\n                        return _ref29.apply(this, arguments);\n                      };\n                    }())\n                  }), _jsx(PinnedNotes, {\n                    character: selectedCharacter,\n                    onUpdate: (function () {\n                      var _ref30 = _asyncToGenerator(function* (updatedCharacter) {\n                        try {\n                          if (!updatedCharacter) {\n                            throw new Error('No character data to save');\n                          }\n                          var newCharacters = characters.map(function (char) {\n                            return char.name === selectedCharacter.name ? updatedCharacter : char;\n                          });\n                          setCharacters(newCharacters);\n                          yield savePlayerData(newCharacters);\n                        } catch (error) {\n                          console.error('Error saving character:', error);\n                          Alert.alert('Error', 'Failed to save character');\n                        }\n                      });\n                      return function (_x9) {\n                        return _ref30.apply(this, arguments);\n                      };\n                    }())\n                  }), _jsx(QuickRules, {})]\n                })]\n              })]\n            })]\n          })\n        })]\n      })]\n    }), _jsx(DeleteCharacterModal, {\n      visible: showDeleteModal,\n      character: selectedCharacter,\n      onClose: function onClose() {\n        return setShowDeleteModal(false);\n      },\n      onConfirm: handleDeleteCharacter\n    }), _jsx(EnemySelectModal, {\n      visible: showEnemySelect,\n      onClose: function onClose() {\n        setShowEnemySelect(false);\n        setSelectedPosition(null);\n      },\n      onSelect: handleEnemySelect\n    }), _jsx(ColorWheelModal, {\n      visible: showColorWheel,\n      onClose: function onClose() {\n        return setShowColorWheel(false);\n      },\n      onSelectColor: setCurrentColor,\n      initialColor: currentColor\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","memo","StyleSheet","View","Text","TouchableOpacity","Pressable","TextInput","ScrollView","Alert","Modal","KeyboardAvoidingView","Platform","SafeAreaView","ActivityIndicator","Keyboard","Vibration","Dimensions","initializeApp","getDatabase","ref","onValue","set","get","off","serverTimestamp","debounce","GestureScrollView","DiceRoller","ColorPicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","LETTERS","Array","from","length","_","i","String","fromCharCode","COLORS","GRID_SIZE","ABILITY_SCORES","SKILLS","STR","DEX","CON","INT","WIS","CHA","CURRENCY","DICE_TYPES","sides","color","STATUS_EFFECTS","id","name","icon","COMMON_ENEMIES","hp","maxHp","ac","initiativeBonus","COMMON_RESOURCES","maxFormula","reset","windowDimensions","isSmallScreen","width","THEME","primary","secondary","accent","gold","danger","success","text","light","dark","background","panel","initialGameState","tokens","layers","grid","terrain","effects","fog","aoe","initiative","inCombat","currentTurn","settings","gridSize","showCoordinates","partyLoot","currency","CP","SP","EP","GP","PP","items","currentViewer","characters","campaignStory","lastUpdate","updatedBy","Date","now","MAX_PINNED_NOTES","QUICK_RULES","desc","QuickRules","_useState","_useState2","_slicedToArray","selectedCategory","setSelectedCategory","_useState3","_useState4","showRules","setShowRules","style","styles","quickRulesContainer","children","resourceButton","backgroundColor","onPress","buttonText","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","maxWidth","modalHeader","modalTitle","closeButton","closeButtonText","maxHeight","Object","keys","map","category","rulesCategoryButton","rulesCategoryText","rulesCount","button","marginBottom","rule","index","ruleItem","ruleName","ruleDesc","create","container","flex","height","header","padding","title","fontSize","fontWeight","controls","flexDirection","flexWrap","gap","justifyContent","controlButton","borderRadius","minWidth","alignItems","content","mainArea","minHeight","leftSidebar","flexShrink","order","gridSection","rightSidebar","gridContainer","row","cell","borderWidth","borderColor","tokenContent","tokenText","textAlign","tokenHp","modalContainer","input","modalButtons","marginTop","modalButton","loadingContainer","loadingText","loadingButtonContent","diceBox","diceControls","diceButtons","diceButton","diceHistory","diceResultContainer","borderBottomWidth","borderBottomColor","diceResult","diceTotal","diceRolls","initiativeList","initiativeScroll","initiativeItem","currentInitiative","initiativeText","currentInitiativeText","zoomControls","position","right","bottom","display","zoomButton","opacity","advantageButton","advantageActive","modifierInput","boxTitle","colorPicker","colorButton","margin","selectedColor","quickActions","quickActionButton","quickActionText","infoPanel","infoPanelTitle","infoGrid","infoCard","infoLabel","infoValue","statBadge","paddingVertical","paddingHorizontal","alignSelf","statBadgeText","divider","marginVertical","resourceContainer","resourceHeader","resourceTitle","resourceButtons","resourceList","resourceItem","resourceName","resourceControls","resourceAdjust","resourceValue","resourceOption","resourceOptionText","pinnedNotesContainer","pinnedNotesHeader","pinnedNotesList","pinnedNoteItem","pinnedNoteText","removeNoteButton","marginLeft","lineHeight","additionalStyles","characterSheet","sheetHeader","sheetSection","sectionTitle","abilityScores","abilityBox","abilityLabel","abilityScore","abilityMod","skillsList","skillItem","proficientDot","marginRight","skillName","skillMod","top","lootSection","currencyRow","currencyInput","currencyLabel","itemRow","itemInput","removeButton","addButton","lootHeader","itemInfo","addedBy","enemyOption","dmToggle","dmToggleActive","diceStyles","dicePanel","diceHeader","diceTitle","diceGrid","boxShadow","diceButtonText","controlGroup","controlActive","modifierGroup","modifierLabel","historyContainer","historyScroll","historyItem","historyLeft","historyInfo","historyDice","historyRolls","historyTotal","clearButton","quantityGroup","quantityLabel","quantityInput","controlsRow","diceContainer","overflow","statusStyles","effectsContainer","borderTopWidth","borderTopColor","paddingTop","effectsTitle","effectsGrid","effectButton","effectActive","effectText","tokenEffects","effectIcon","saveGameState","_ref","_asyncToGenerator","firebaseRef","current","error","console","alert","apply","arguments","CharacterSheetModal","_ref2","onClose","character","onUpdate","_useState5","class","level","owner","proficiencyBonus","proficientSkills","resources","pinnedNotes","inventory","_useState6","editedCharacter","setEditedCharacter","initialResources","calculateModifier","score","Math","floor","getSkillModifier","skill","ability","profBonus","includes","value","onChangeText","prev","_objectSpread","placeholder","placeholderTextColor","ResourceTracker","PinnedNotes","parseInt","keyboardType","_defineProperty","maxLength","selectTextOnFocus","entries","_ref3","_ref4","skills","filter","s","concat","_toConsumableArray","quantity","notes","item","newItems","TokenModal","_ref5","showTokenModal","setShowTokenModal","selectedToken","setSelectedToken","cursor","dismiss","behavior","select","ios","android","keyboardVerticalOffset","e","stopPropagation","blurOnSubmit","autoComplete","spellCheck","enablesReturnKeyAutomatically","max","effect","_selectedToken$effect","currentEffects","newEffects","then","snapshot","currentRoomData","val","newTokens","modalStyles","left","zIndex","RoomModal","_ref6","showRoomModal","setShowRoomModal","isConnected","roomCode","setRoomCode","isJoining","connectToRoom","trim","toLowerCase","autoCapitalize","autoCorrect","editable","autoFocus","disabled","PartyLootModal","_ref7","playerName","_useState7","_useState8","editedLoot","setEditedLoot","type","toString","buttonRow","GridZoomControls","_ref8","zoomLevel","setZoomLevel","debouncedZoom","newZoom","min","InventoryModal","_ref9","_useState9","_useState10","editedInventory","setEditedInventory","newInventory","PlayerNameModal","_ref10","onSubmit","_useState11","_useState12","setName","viewerStyles","viewersList","viewersTitle","viewerName","DiceResultModal","_ref11","result","timer","setTimeout","clearTimeout","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","dice","rollType","total","rolls","join","modifier","DeleteCharacterModal","_ref12","onConfirm","_useState13","_useState14","confirmName","setConfirmName","EnemySelectModal","_ref13","onSelect","enemy","ColorWheelModal","_ref14","onSelectColor","initialColor","_useState15","_useState16","setColor","onColorChange","thumbSize","sliderSize","noSnap","_ref15","_useState17","_useState18","showAddResource","setShowAddResource","_useState19","_useState20","newResourceName","setNewResourceName","_useState21","_useState22","newResourceMax","setNewResourceMax","updatedResources","calculateResourceMax","formula","log","_character$abilitySco","charismaMod","handleAddResource","resource","maxValue","updatedCharacter","handleShortRest","forEach","key","handleLongRest","handleResourceChange","change","currentValue","newValue","_ref16","_ref17","_ref18","_useState23","_useState24","showAddNote","setShowAddNote","_useState25","_useState26","newNote","setNewNote","handleRemoveNote","updatedNotes","splice","handleAddNote","pop","unshift","note","numberOfLines","textAlignVertical","multiline","App","_initialGameState$cam","_tokens$initiative$cu","_initiative$currentTu2","_initiative$currentTu3","_useState27","_useState28","_useState29","_useState30","setIsConnected","_useState31","_useState32","isLoading","setIsLoading","_useState33","_useState34","setIsJoining","_useState35","_useState36","isUpdating","setIsUpdating","_useState37","_useState38","_useState39","_useState40","isDarkMode","setIsDarkMode","_useState41","_useState42","_useState43","_useState44","setTokens","_useState45","_useState46","currentColor","setCurrentColor","_useState47","_useState48","setInitiative","_useState49","_useState50","setInCombat","_useState51","_useState52","setCurrentTurn","_useState53","_useState54","setLayers","_useState55","_useState56","setDiceHistory","_useState57","_useState58","advantage","setAdvantage","_useState59","_useState60","setModifier","_useState61","_useState62","_useState63","_useState64","_useState65","_useState66","setPartyLoot","_useState67","_useState68","showPartyLoot","setShowPartyLoot","_useState69","_useState70","diceQuantity","setDiceQuantity","_useState71","_useState72","setCharacters","_useState73","_useState74","showCharacterSheet","setShowCharacterSheet","_useState75","_useState76","selectedCharacter","setSelectedCharacter","_useState77","_useState78","showInventory","setShowInventory","_useState79","_useState80","setPlayerName","_useState81","_useState82","showPlayerNameModal","setShowPlayerNameModal","_useState83","_useState84","setRollType","_useState85","_useState86","setDiceResult","_useState87","_useState88","showDiceResult","setShowDiceResult","_useState89","_useState90","showDeleteModal","setShowDeleteModal","_useState91","_useState92","isDM","setIsDM","_useState93","_useState94","showEnemySelect","setShowEnemySelect","_useState95","_useState96","selectedPosition","setSelectedPosition","_useState97","_useState98","storyText","setStoryText","_useState99","_useState100","isAoeMode","setIsAoeMode","_useState101","_useState102","showColorWheel","setShowColorWheel","unsubscribeRef","handleDisconnect","handleInitiativeRoll","_ref19","_ref20","token","roll","random","details","sort","a","b","rollDice","allRolls","d","numRolls","push","finalRoll","grandTotal","reduce","sum","newResult","r","flat","individualTotals","timestamp","slice","vibrate","handleCellPress","_ref21","col","_currentRoomData$laye","currentAoe","newAoe","_x","_x2","savePlayerData","_ref22","newCharacters","roomRef","globalPlayerRef","roomSnapshot","exists","_x3","_ref23","code","playerSnapshot","savedCharacters","playerData","gameRef","players","roomData","roomCharacters","updatedRoomData","unsubscribe","data","_data$campaignStory","_data$campaignStory2","undefined","_x4","handleOffline","window","addEventListener","removeEventListener","layoutStyles","sidePanel","sidePanelTitle","panelButton","panelButtonText","characterItem","characterInfo","characterName","characterDetails","handleDeleteCharacter","char","handleEnemySelect","_ref25","_x5","darkMode","updatedLoot","_ref26","Error","_x6","_ref27","_x7","size","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","nextTurn","num","_ref28","roll1","roll2","damage","transform","scale","_initiative$currentTu","_layers$aoe","isCurrentTurn","onLongPress","statusEffect","find","newCharacter","initialCharacter","_ref29","_x8","_ref30","_x9"],"sources":["C:/Users/Daniel/Desktop/3d-dice-main/App.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  TouchableOpacity, \n  Pressable,\n  TextInput, \n  ScrollView, \n  Alert, \n  Modal,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ActivityIndicator,\n  Keyboard,\n  Vibration,\n  Dimensions\n} from 'react-native';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getDatabase, \n  ref, \n  onValue, \n  set, \n  get, \n  off,\n  serverTimestamp\n} from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from './components/DiceModel';\nimport ColorPicker from 'react-native-wheel-color-picker';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Constants\nconst LETTERS = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\nconst COLORS = [\n  '#4527A0',  // Rich purple\n  '#4A90E2',  // Bright blue\n  '#7C4DFF',  // Bright purple\n  '#00BFA5',  // Teal\n  '#3F51B5',  // Indigo\n  '#673AB7',  // Deep Purple\n  '#2196F3',  // Blue\n  '#B39DDB',  // Light Purple\n  '#FF5252',  // Red\n  '#FF4081',  // Pink\n  '#E91E63',  // Deep Pink\n  '#9C27B0',  // Purple\n  '#009688',  // Green\n  '#4CAF50',  // Light Green\n  '#8BC34A',  // Lime\n  '#CDDC39',  // Yellow-Green\n  '#FFC107',  // Amber\n  '#FF9800',  // Orange\n  '#FF5722',  // Deep Orange\n  '#795548',  // Brown\n  '#607D8B',  // Blue Grey\n  '#F44336',  // Bright Red\n  '#E53935',  // Dark Red\n  '#D32F2F',  // Darker Red\n  '#C2185B',  // Dark Pink\n  '#7B1FA2',  // Dark Purple\n  '#512DA8',  // Dark Indigo\n  '#303F9F',  // Dark Blue\n  '#1976D2',  // Medium Blue\n  '#0288D1',  // Light Blue\n  '#0097A7',  // Cyan\n  '#00796B',  // Dark Teal\n  '#388E3C',  // Dark Green\n  '#689F38',  // Olive Green\n  '#AFB42B',  // Dark Lime\n  '#FBC02D',  // Golden\n  '#FFA000',  // Dark Amber\n  '#F57C00',  // Dark Orange\n  '#E64A19',  // Burnt Orange\n  '#5D4037'   // Dark Brown\n];\nconst GRID_SIZE = 10;\nconst ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nconst SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nconst CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nconst DICE_TYPES = [\n  { sides: 4, color: '#FF6B6B' },\n  { sides: 6, color: '#4ECDC4' },\n  { sides: 8, color: '#45B7D1' },\n  { sides: 10, color: '#96CEB4' },\n  { sides: 12, color: '#FFEEAD' },\n  { sides: 20, color: '#D4A5A5' },\n  { sides: 100, color: '#9B59B6' }\n];\nconst STATUS_EFFECTS = [\n  { id: 'blinded', name: 'Blinded', icon: '👁️' },\n  { id: 'charmed', name: 'Charmed', icon: '💕' },\n  { id: 'deafened', name: 'Deafened', icon: '👂' },\n  { id: 'frightened', name: 'Frightened', icon: '😨' },\n  { id: 'grappled', name: 'Grappled', icon: '🤼' },\n  { id: 'incapacitated', name: 'Incapacitated', icon: '💫' },\n  { id: 'invisible', name: 'Invisible', icon: '👻' },\n  { id: 'paralyzed', name: 'Paralyzed', icon: '⚡' },\n  { id: 'petrified', name: 'Petrified', icon: '🗿' },\n  { id: 'poisoned', name: 'Poisoned', icon: '🤢' },\n  { id: 'prone', name: 'Prone', icon: '⬇️' },\n  { id: 'restrained', name: 'Restrained', icon: '⛓️' },\n  { id: 'stunned', name: 'Stunned', icon: '💫' },\n  { id: 'unconscious', name: 'Unconscious', icon: '💤' }\n];\n\n// Add this constant near the other constants at the top\nconst COMMON_ENEMIES = [\n  {\n    name: 'Bandit',\n    hp: 11,\n    maxHp: 11,\n    ac: 12,\n    initiativeBonus: 1,\n    color: '#8B4513'\n  },\n  {\n    name: 'Wolf',\n    hp: 11,\n    maxHp: 11,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#808080'\n  },\n  {\n    name: 'Wraith',\n    hp: 67,\n    maxHp: 67,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#4A0404'\n  },\n  {\n    name: 'Goblin',\n    hp: 7,\n    maxHp: 7,\n    ac: 15,\n    initiativeBonus: 2,\n    color: '#355E3B'\n  },\n  {\n    name: 'Skeleton',\n    hp: 13,\n    maxHp: 13,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#E1D9D1'\n  },\n  {\n    name: 'Zombie',\n    hp: 22,\n    maxHp: 22,\n    ac: 8,\n    initiativeBonus: -2,\n    color: '#4A412A'\n  }\n];\n\n// Add this near the other constants\nconst COMMON_RESOURCES = [\n  { name: 'Rage', maxFormula: '2 + floor((level-1)/3)', reset: 'longRest' },\n  { name: 'Sorcery Points', maxFormula: 'level', reset: 'longRest' },\n  { name: 'Channel Divinity', maxFormula: '1', reset: 'shortRest' },\n  { name: 'Bardic Inspiration', maxFormula: 'max(1, charismaModifier)', reset: 'longRest' },\n  { name: 'Action Surge', maxFormula: '1', reset: 'shortRest' },\n  { name: 'Second Wind', maxFormula: '1', reset: 'shortRest' },\n  { name: 'Wild Shape', maxFormula: '2', reset: 'shortRest' }\n];\n\n// Get window dimensions\nconst windowDimensions = Dimensions.get('window');\nconst isSmallScreen = windowDimensions.width < 768;\n\n// Theme configuration\nconst THEME = {\n  primary: '#2E1F5E',      // Deep purple\n  secondary: '#4527A0',    // Rich purple\n  accent: '#4A90E2',       // Bright blue\n  gold: '#7C4DFF',         // Bright purple\n  danger: '#FF5252',       // Red (keeping for clear danger indication)\n  success: '#00BFA5',      // Teal (keeping for clear success indication)\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1A103C',    // Darkest purple\n    secondary: '#2E1F5E',  // Deep purple\n    dark: '#150D30',       // Very dark purple\n    panel: '#3F2B85'       // Medium purple\n  }\n};\n\n// Initial game state\nconst initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {},\n    aoe: {} // Add AoE layer\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true,\n  },\n  partyLoot: {\n    currency: { CP: 0, SP: 0, EP: 0, GP: 0, PP: 0 },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  campaignStory: {\n    text: '',\n    lastUpdate: null,\n    updatedBy: null\n  },\n  lastUpdate: Date.now()\n};\n\n// Add this near the other constants\nconst MAX_PINNED_NOTES = 5;\n\n// Add this near the other constants\nconst QUICK_RULES = {\n  \"Combat Actions\": [\n    { name: \"Attack\", desc: \"Make one melee or ranged attack\" },\n    { name: \"Dash\", desc: \"Move up to your speed again\" },\n    { name: \"Disengage\", desc: \"Move away without provoking opportunity attacks\" },\n    { name: \"Dodge\", desc: \"Impose disadvantage on attacks against you\" },\n    { name: \"Help\", desc: \"Give advantage to an ally's next ability check or attack\" },\n    { name: \"Hide\", desc: \"Make a Stealth check to hide\" },\n    { name: \"Ready\", desc: \"Prepare an action for a specific trigger\" },\n    { name: \"Use an Object\", desc: \"Interact with a second object or special object\" }\n  ],\n  \"Conditions\": [\n    { name: \"Blinded\", desc: \"Can't see, disadvantage on attacks, advantage on attacks against you\" },\n    { name: \"Charmed\", desc: \"Can't attack charmer, charmer has advantage on social checks\" },\n    { name: \"Deafened\", desc: \"Can't hear\" },\n    { name: \"Frightened\", desc: \"Disadvantage on checks while source in sight, can't move closer\" },\n    { name: \"Grappled\", desc: \"Speed 0, ends if grappler incapacitated\" },\n    { name: \"Incapacitated\", desc: \"Can't take actions or reactions\" },\n    { name: \"Invisible\", desc: \"Can't be seen, advantage on attacks, attacks have disadvantage\" },\n    { name: \"Paralyzed\", desc: \"Can't move/act, auto fail STR/DEX saves, crit if hit within 5ft\" },\n    { name: \"Petrified\", desc: \"Transformed to stone, incapacitated, resistant to all damage\" },\n    { name: \"Poisoned\", desc: \"Disadvantage on attack rolls and ability checks\" },\n    { name: \"Prone\", desc: \"Can only crawl, disadvantage on attacks, melee has advantage\" },\n    { name: \"Restrained\", desc: \"Speed 0, disadvantage on attacks, advantage on attacks against\" },\n    { name: \"Stunned\", desc: \"Incapacitated, auto fail STR/DEX saves, advantage on attacks against\" },\n    { name: \"Unconscious\", desc: \"Incapacitated, drop everything, auto fail STR/DEX saves, crit if hit within 5ft\" }\n  ],\n  \"Skill Checks\": [\n    { name: \"DC Difficulty\", desc: \"Very Easy: 5, Easy: 10, Medium: 15, Hard: 20, Very Hard: 25, Nearly Impossible: 30\" },\n    { name: \"Advantage\", desc: \"Roll 2d20, take higher result\" },\n    { name: \"Disadvantage\", desc: \"Roll 2d20, take lower result\" },\n    { name: \"Group Check\", desc: \"If at least half succeed, the group succeeds\" }\n  ],\n  \"Combat Rules\": [\n    { name: \"Surprise\", desc: \"Surprised creatures can't move/act on first turn\" },\n    { name: \"Opportunity Attack\", desc: \"Reaction when creature leaves your reach\" },\n    { name: \"Cover\", desc: \"Half: +2 AC/DEX saves, Three-quarters: +5 AC/DEX saves, Full: Can't be targeted directly\" },\n    { name: \"Critical Hit\", desc: \"Roll damage dice twice\" }\n  ]\n};\n\n// Add QuickRules component\nconst QuickRules = memo(() => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showRules, setShowRules] = useState(false);\n\n  return (\n    <View style={styles.quickRulesContainer}>\n      <TouchableOpacity\n        style={[styles.resourceButton, { backgroundColor: THEME.accent }]}\n        onPress={() => setShowRules(true)}\n      >\n        <Text style={styles.buttonText}>Quick Rules Reference</Text>\n      </TouchableOpacity>\n\n      <Modal\n        visible={showRules}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setShowRules(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={[styles.modalContent, { width: '95%', maxWidth: 600 }]}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>\n                {selectedCategory || 'Quick Rules Reference'}\n              </Text>\n              <TouchableOpacity\n                style={styles.closeButton}\n                onPress={() => {\n                  setShowRules(false);\n                  setSelectedCategory(null);\n                }}\n              >\n                <Text style={styles.closeButtonText}>×</Text>\n              </TouchableOpacity>\n            </View>\n\n            <ScrollView style={{ maxHeight: 400 }}>\n              {!selectedCategory ? (\n                // Show categories\n                Object.keys(QUICK_RULES).map((category) => (\n                  <TouchableOpacity\n                    key={category}\n                    style={styles.rulesCategoryButton}\n                    onPress={() => setSelectedCategory(category)}\n                  >\n                    <Text style={styles.rulesCategoryText}>{category}</Text>\n                    <Text style={styles.rulesCount}>\n                      {QUICK_RULES[category].length} rules\n                    </Text>\n                  </TouchableOpacity>\n                ))\n              ) : (\n                // Show rules for selected category\n                <>\n                  <TouchableOpacity\n                    style={[styles.button, { marginBottom: 10 }]}\n                    onPress={() => setSelectedCategory(null)}\n                  >\n                    <Text style={styles.buttonText}>← Back to Categories</Text>\n                  </TouchableOpacity>\n                  {QUICK_RULES[selectedCategory].map((rule, index) => (\n                    <View key={index} style={styles.ruleItem}>\n                      <Text style={styles.ruleName}>{rule.name}</Text>\n                      <Text style={styles.ruleDesc}>{rule.desc}</Text>\n                    </View>\n                  ))}\n                </>\n              )}\n            </ScrollView>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n});\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%',\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%',\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start',\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%',\n  },\n  leftSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 2 : 0,\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%',\n    order: isSmallScreen ? 1 : 1,\n  },\n  rightSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 3 : 2,\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary,\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2,\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400,\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15,\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%',\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10,\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center',\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60,\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10,\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40',\n  },\n  diceResult: {\n    color: THEME.text.light,\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent,\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12,\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%',\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200,\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary,\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent,\n  },\n  initiativeText: {\n    color: THEME.text.light,\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold',\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none',\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8,\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center',\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10,\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2,\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent,\n  },\n  quickActions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    padding: 15,\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    marginBottom: 15,\n  },\n  quickActionButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 100,\n    flex: 1,\n  },\n  quickActionText: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  infoPanel: {\n    backgroundColor: THEME.background.panel,\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n  },\n  infoPanelTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  infoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  infoCard: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    flex: 1,\n    minWidth: 150,\n  },\n  infoLabel: {\n    color: THEME.accent,\n    fontSize: 12,\n    marginBottom: 5,\n  },\n  infoValue: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  statBadge: {\n    backgroundColor: THEME.accent + '20',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n    alignSelf: 'flex-start',\n  },\n  statBadgeText: {\n    color: THEME.accent,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  divider: {\n    height: 1,\n    backgroundColor: THEME.accent + '40',\n    marginVertical: 15,\n  },\n  resourceContainer: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n  },\n  resourceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  resourceTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  resourceButtons: {\n    flexDirection: 'row',\n    gap: 10,\n  },\n  resourceButton: {\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  resourceList: {\n    maxHeight: 200,\n  },\n  resourceItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  resourceName: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  resourceControls: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n  },\n  resourceAdjust: {\n    backgroundColor: THEME.background.primary,\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  resourceValue: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    minWidth: 50,\n    textAlign: 'center',\n  },\n  resourceOption: {\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  resourceOptionText: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  pinnedNotesContainer: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n  },\n  pinnedNotesHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  pinnedNotesList: {\n    maxHeight: 200,\n  },\n  pinnedNoteItem: {\n    flexDirection: 'row',\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    alignItems: 'center',\n  },\n  pinnedNoteText: {\n    color: THEME.text.light,\n    flex: 1,\n    fontSize: 14,\n  },\n  removeNoteButton: {\n    backgroundColor: THEME.background.primary,\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 10,\n  },\n  quickRulesContainer: {\n    marginBottom: 15,\n  },\n  rulesCategoryButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 15,\n    borderRadius: 8,\n    marginBottom: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  rulesCategoryText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  rulesCount: {\n    color: THEME.text.light + '80',\n    fontSize: 14,\n  },\n  ruleItem: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  ruleName: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  ruleDesc: {\n    color: THEME.text.light + 'CC',\n    fontSize: 14,\n    lineHeight: 20,\n  },\n});\n\nconst additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%',\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  sheetSection: {\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10,\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10,\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5,\n  },\n  abilityMod: {\n    color: THEME.text.light,\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200,\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1,\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10,\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20,\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15,\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center',\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30,\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10,\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger,\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1,\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4,\n  },\n  enemyOption: {\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 8,\n    backgroundColor: THEME.background.secondary,\n  },\n  dmToggle: {\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginLeft: 10,\n  },\n  dmToggleActive: {\n    backgroundColor: THEME.accent,\n  }\n});\n\nconst diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: '0px 2px 3.84px rgba(0, 0, 0, 0.25)', // Replace elevation and shadowProps\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold',\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  controlActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200,\n  },\n  historyScroll: {\n    padding: 10,\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary,\n  },\n  historyLeft: {\n    flex: 1,\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7,\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5,\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  diceControls: {\n    flexDirection: 'column',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10,\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  diceContainer: {\n    width: isSmallScreen ? 80 : 100,\n    height: isSmallScreen ? 80 : 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginBottom: 5,\n  }\n});\n\nconst statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15,\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80,\n  },\n  effectActive: {\n    backgroundColor: THEME.accent,\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12,\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2,\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12,\n  },\n});\n\n// Create a helper function to save game state\nconst saveGameState = async () => {\n  if (firebaseRef.current) {\n    try {\n      await set(firebaseRef.current, {\n        tokens,\n        layers,\n        initiative,\n        inCombat,\n        currentTurn,\n        partyLoot,\n        characters,\n        settings: initialGameState.settings,\n        lastUpdate: Date.now()\n      });\n    } catch (error) {\n      console.error('Error saving game state:', error);\n      Alert.alert('Error', 'Failed to save game state');\n    }\n  }\n};\n\n// Add this component definition before the TokenModal component\nconst CharacterSheetModal = memo(({ visible, onClose, character, characters, onUpdate }) => {\n  const [editedCharacter, setEditedCharacter] = useState(() => ({\n    name: '',\n    class: '',\n    level: 1,\n    owner: character?.owner || '',\n    proficiencyBonus: 2,\n    hp: 0,\n    maxHp: 0,\n    ac: 10,\n    abilityScores: {\n      STR: 10,\n      DEX: 10,\n      CON: 10,\n      INT: 10,\n      WIS: 10,\n      CHA: 10\n    },\n    proficientSkills: [],\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    resources: {},\n    pinnedNotes: [],\n    inventory: [],\n    items: []\n  }));\n\n  useEffect(() => {\n    if (visible) {\n      const initialResources = character?.resources || {};\n      // Remove Ki Points if they exist\n      if (initialResources['Ki Points']) {\n        delete initialResources['Ki Points'];\n      }\n\n      setEditedCharacter({\n        name: character?.name || '',\n        class: character?.class || '',\n        level: character?.level || 1,\n        owner: character?.owner || '',\n        proficiencyBonus: character?.proficiencyBonus || 2,\n        hp: character?.hp || 0,\n        maxHp: character?.maxHp || 0,\n        ac: character?.ac || 10,\n        abilityScores: character?.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character?.proficientSkills || [],\n        currency: character?.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        resources: initialResources,\n        pinnedNotes: character?.pinnedNotes || [],\n        inventory: character?.inventory || [],\n        items: character?.items || []\n      });\n    }\n  }, [visible, character]);\n\n  if (!visible) return null;\n\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  const getSkillModifier = (skill, ability) => {\n    const abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    const profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <GestureScrollView>\n            {/* Basic Info */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Character Info</Text>\n              <TextInput\n                style={styles.input}\n                value={editedCharacter.name}\n                onChangeText={(text) => setEditedCharacter(prev => ({...prev, name: text}))}\n                placeholder=\"Character Name\"\n                placeholderTextColor={THEME.text.light + '80'}\n              />\n              \n              <ResourceTracker\n                character={editedCharacter}\n                onUpdate={setEditedCharacter}\n              />\n              \n              <PinnedNotes\n                character={editedCharacter}\n                onUpdate={setEditedCharacter}\n              />\n              \n              <QuickRules />\n              \n              <View style={{ flexDirection: 'row', gap: 10 }}>\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={editedCharacter.class}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, class: text}))}\n                  placeholder=\"Class\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={String(editedCharacter.level)}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, level: parseInt(text) || 1}))}\n                  placeholder=\"Level\"\n                  keyboardType=\"numeric\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n              </View>\n\n              {/* Add HP and AC fields here */}\n              <View style={{ flexDirection: 'row', gap: 10, marginTop: 10 }}>\n                <View style={{ flex: 2 }}>\n                  <Text style={[styles.buttonText, { marginBottom: 5 }]}>Hit Points</Text>\n                  <View style={{ flexDirection: 'row', gap: 5 }}>\n                    <TextInput\n                      style={[styles.input, { flex: 1 }]}\n                      value={String(editedCharacter.hp)}\n                      onChangeText={(text) => setEditedCharacter(prev => ({\n                        ...prev,\n                        hp: parseInt(text) || 0\n                      }))}\n                      placeholder=\"Current HP\"\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <Text style={{ color: THEME.text.light, alignSelf: 'center', fontSize: 18 }}>/</Text>\n                    <TextInput\n                      style={[styles.input, { flex: 1 }]}\n                      value={String(editedCharacter.maxHp)}\n                      onChangeText={(text) => setEditedCharacter(prev => ({\n                        ...prev,\n                        maxHp: parseInt(text) || 0\n                      }))}\n                      placeholder=\"Max HP\"\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                </View>\n                <View style={{ flex: 1 }}>\n                  <Text style={[styles.buttonText, { marginBottom: 5 }]}>Armor Class</Text>\n                  <TextInput\n                    style={styles.input}\n                    value={String(editedCharacter.ac)}\n                    onChangeText={(text) => setEditedCharacter(prev => ({\n                      ...prev,\n                      ac: parseInt(text) || 10\n                    }))}\n                    placeholder=\"AC\"\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              </View>\n            </View>\n\n            {/* Ability Scores */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Ability Scores</Text>\n              <View style={additionalStyles.abilityScores}>\n                {ABILITY_SCORES.map(ability => (\n                  <View key={ability} style={additionalStyles.abilityBox}>\n                    <Text style={additionalStyles.abilityLabel}>{ability}</Text>\n                    <TextInput\n                      style={additionalStyles.abilityScore}\n                      value={String(editedCharacter.abilityScores[ability])}\n                      onChangeText={(text) => setEditedCharacter(prev => ({\n                        ...prev,\n                        abilityScores: {\n                          ...prev.abilityScores,\n                          [ability]: parseInt(text) || 0\n                        }\n                      }))}\n                      keyboardType=\"numeric\"\n                      maxLength={2}\n                      selectTextOnFocus={true}\n                    />\n                    <Text style={additionalStyles.abilityMod}>\n                      {calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : ''}\n                      {calculateModifier(editedCharacter.abilityScores[ability])}\n                    </Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n\n            {/* Skills */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Skills</Text>\n              <View style={additionalStyles.skillsList}>\n                {Object.entries(SKILLS).map(([ability, skills]) =>\n                  skills.map(skill => (\n                    <TouchableOpacity\n                      key={skill}\n                      style={additionalStyles.skillItem}\n                      onPress={() => setEditedCharacter(prev => ({\n                        ...prev,\n                        proficientSkills: prev.proficientSkills.includes(skill)\n                          ? prev.proficientSkills.filter(s => s !== skill)\n                          : [...prev.proficientSkills, skill]\n                      }))}\n                    >\n                      <View style={[\n                        additionalStyles.proficientDot,\n                        {\n                          backgroundColor: editedCharacter.proficientSkills.includes(skill)\n                            ? THEME.accent\n                            : THEME.background.secondary\n                        }\n                      ]} />\n                      <Text style={additionalStyles.skillName}>{skill}</Text>\n                      <Text style={additionalStyles.skillMod}>\n                        {getSkillModifier(skill, ability) >= 0 ? '+' : ''}\n                        {getSkillModifier(skill, ability)}\n                      </Text>\n                    </TouchableOpacity>\n                  ))\n                )}\n              </View>\n            </View>\n\n            {/* Inventory */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Inventory</Text>\n\n              <View style={additionalStyles.lootSection}>\n                {/* Currency */}\n                {CURRENCY.map(currency => (\n                  <View key={currency} style={additionalStyles.currencyRow}>\n                    <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                    <TextInput\n                      style={additionalStyles.currencyInput}\n                      value={String(editedCharacter.currency[currency] || 0)}\n                      onChangeText={(text) => {\n                        const value = parseInt(text) || 0;\n                        setEditedCharacter(prev => ({\n                          ...prev,\n                          currency: {\n                            ...prev.currency,\n                            [currency]: value\n                          }\n                        }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                ))}\n              </View>\n\n              <View style={additionalStyles.lootSection}>\n                <View style={additionalStyles.lootHeader}>\n                  <Text style={additionalStyles.sectionTitle}>Items</Text>\n                  <TouchableOpacity\n                    style={additionalStyles.addButton}\n                    onPress={() => {\n                      setEditedCharacter(prev => ({\n                        ...prev,\n                        items: [...(prev.items || []), { name: '', quantity: 1, notes: '', addedBy: character?.name || '' }]\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>Add Item</Text>\n                  </TouchableOpacity>\n                </View>\n\n                {(editedCharacter.items || []).map((item, index) => (\n                  <View key={index} style={additionalStyles.itemRow}>\n                    <View style={additionalStyles.itemInfo}>\n                      <TextInput\n                        style={[additionalStyles.itemInput, { flex: 2 }]}\n                        value={item.name}\n                        onChangeText={(text) => {\n                          const newItems = [...(editedCharacter.items || [])];\n                          newItems[index] = { ...item, name: text };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        placeholder=\"Item name\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      <TextInput\n                        style={[additionalStyles.itemInput, { width: 60 }]}\n                        value={String(item.quantity)}\n                        onChangeText={(text) => {\n                          const newItems = [...(editedCharacter.items || [])];\n                          newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        keyboardType=\"numeric\"\n                        placeholder=\"Qty\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      {item.addedBy === character?.name && (\n                        <TouchableOpacity\n                          style={additionalStyles.removeButton}\n                          onPress={() => {\n                            setEditedCharacter(prev => ({\n                              ...prev,\n                              items: (prev.items || []).filter((_, i) => i !== index)\n                            }));\n                          }}\n                        >\n                          <Text style={styles.buttonText}>×</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n                    <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                  </View>\n                ))}\n              </View>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={() => {\n                  onUpdate(editedCharacter);\n                  onClose();\n                }}\n              >\n                <Text style={styles.buttonText}>Save Changes</Text>\n              </TouchableOpacity>\n            </View>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Memoized Modal Components\nconst TokenModal = memo(({ \n  showTokenModal, \n  setShowTokenModal, \n  selectedToken, \n  setSelectedToken, \n  tokens, \n  firebaseRef, \n  initialGameState, \n  layers, \n  initiative, \n  inCombat, \n  currentTurn, \n  THEME \n}) => (\n  <Modal\n    visible={showTokenModal}\n    transparent={true}\n    animationType=\"fade\"\n    onRequestClose={() => setShowTokenModal(false)}\n  >\n    <Pressable \n      style={[styles.modalOverlay, { cursor: 'default' }]}\n      onPress={() => Keyboard.dismiss()}\n    >\n      <View style={styles.modalContent}>\n        <KeyboardAvoidingView \n          behavior={Platform.select({ ios: 'padding', android: 'height' })}\n          style={styles.modalContainer}\n          keyboardVerticalOffset={Platform.select({ ios: 64, android: 0 })}\n        >\n          <Pressable onPress={e => e.stopPropagation()}>\n            <Text style={styles.modalTitle}>Edit Token</Text>\n            <TextInput\n              style={styles.input}\n              value={selectedToken?.name}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  name: text\n                }));\n              }}\n              placeholder=\"Token Name\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              spellCheck={false}\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n\n            <View style={{ flexDirection: 'row', gap: 10, marginBottom: 10 }}>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.hp || '')}\n                  onChangeText={(text) => {\n                    const hp = parseInt(text) || 0;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      hp: Math.max(0, hp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Current HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.maxHp || '')}\n                  onChangeText={(text) => {\n                    const maxHp = parseInt(text) || 1;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      maxHp: Math.max(1, maxHp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Max HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n            </View>\n\n            <TextInput\n              style={styles.input}\n              value={String(selectedToken?.initiativeBonus || '0')}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  initiativeBonus: parseInt(text) || 0\n                }));\n              }}\n              keyboardType=\"numeric\"\n              placeholder=\"Initiative Bonus\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n\n            <View style={statusStyles.effectsContainer}>\n              <Text style={statusStyles.effectsTitle}>Status Effects</Text>\n              <View style={statusStyles.effectsGrid}>\n                {STATUS_EFFECTS.map(effect => (\n                  <TouchableOpacity\n                    key={effect.id}\n                    style={[\n                      statusStyles.effectButton,\n                      selectedToken?.effects?.includes(effect.id) && statusStyles.effectActive\n                    ]}\n                    onPress={() => {\n                      setSelectedToken(prev => {\n                        const currentEffects = prev.effects || [];\n                        const newEffects = currentEffects.includes(effect.id)\n                          ? currentEffects.filter(e => e !== effect.id)\n                          : [...currentEffects, effect.id];\n                        return {\n                          ...prev,\n                          effects: newEffects\n                        };\n                      });\n                    }}\n                  >\n                    <Text style={statusStyles.effectText}>\n                      {effect.icon} {effect.name}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            </View>\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.danger }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    // First get current room data\n                    get(firebaseRef.current).then((snapshot) => {\n                      const currentRoomData = snapshot.val() || {};\n                      const newTokens = { ...tokens };\n                      delete newTokens[selectedToken.position];\n                      \n                      // Update while preserving existing data\n                      set(firebaseRef.current, { \n                        ...currentRoomData,\n                        tokens: newTokens,\n                        lastUpdate: Date.now()\n                      });\n                      setShowTokenModal(false);\n                    });\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Delete</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    // First get current room data\n                    get(firebaseRef.current).then((snapshot) => {\n                      const currentRoomData = snapshot.val() || {};\n                      const newTokens = {\n                        ...tokens,\n                        [selectedToken.position]: selectedToken\n                      };\n                      \n                      // Update while preserving existing data\n                      set(firebaseRef.current, {\n                        ...currentRoomData,\n                        tokens: newTokens,\n                        lastUpdate: Date.now()\n                      });\n                      setShowTokenModal(false);\n                    });\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </Pressable>\n        </KeyboardAvoidingView>\n      </View>\n    </Pressable>\n  </Modal>\n));\n\n// Update the RoomModal styles\nconst modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000, // Add high z-index\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001, // Even higher z-index\n  },\n});\n\n// Update the RoomModal component\nconst RoomModal = memo(({ \n  showRoomModal, \n  setShowRoomModal, \n  isConnected, \n  roomCode, \n  setRoomCode, \n  isJoining, \n  connectToRoom \n}) => {\n  if (!showRoomModal) return null;\n  \n  return (\n    <Modal\n      visible={true}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={() => {}}\n    >\n      <View style={[modalStyles.modalOverlay, { backgroundColor: 'rgba(0, 0, 0, 0.8)' }]}>\n        <View style={modalStyles.modalContent}>\n          <Text style={styles.modalTitle}>Join Room</Text>\n          <TextInput\n            style={[styles.input, { marginBottom: 15 }]}\n            value={roomCode}\n            onChangeText={(text) => {\n              setRoomCode(text.trim().toLowerCase());\n            }}\n            placeholder=\"Enter room code...\"\n            placeholderTextColor={THEME.text.light + '80'}\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            editable={!isJoining}\n            autoFocus={true}\n          />\n          <TouchableOpacity\n            style={[\n              styles.modalButton,\n              { \n                backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n                width: '100%'\n              }\n            ]}\n            onPress={() => {\n              Keyboard.dismiss();\n              connectToRoom(roomCode);\n            }}\n            disabled={isJoining}\n          >\n            {isJoining ? (\n              <View style={styles.loadingButtonContent}>\n                <ActivityIndicator color={THEME.text.light} />\n                <Text style={[styles.buttonText, { marginLeft: 10 }]}>\n                  Connecting...\n                </Text>\n              </View>\n            ) : (\n              <Text style={styles.buttonText}>Join Room</Text>\n            )}\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\nconst PartyLootModal = memo(({ visible, onClose, partyLoot, onUpdate, playerName }) => {\n  const [editedLoot, setEditedLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: []\n  });\n\n  useEffect(() => {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[styles.modalContent, { maxHeight: '90%' }]}>\n          <Text style={styles.modalTitle}>Party Loot</Text>\n\n          <ScrollView>\n            {/* Currency Section */}\n            <View style={additionalStyles.lootSection}>\n              {CURRENCY.map(type => (\n                <View key={type} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{type}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedLoot.currency[type] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [type]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            {/* Items Section */}\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedLoot(prev => ({\n                      ...prev,\n                      items: [...prev.items, { \n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName \n                      }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedLoot.items.map((item, index) => (\n                <View key={item.id || index} style={additionalStyles.itemRow}>\n                  <TextInput\n                    style={[additionalStyles.itemInput, { flex: 2 }]}\n                    value={item.name}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, name: text };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    placeholder=\"Item name\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TextInput\n                    style={[additionalStyles.itemInput, { width: 60 }]}\n                    value={String(item.quantity)}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Qty\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TouchableOpacity\n                    style={additionalStyles.removeButton}\n                    onPress={() => {\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        items: prev.items.filter((_, i) => i !== index)\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>×</Text>\n                  </TouchableOpacity>\n                </View>\n              ))}\n            </View>\n          </ScrollView>\n\n          <View style={styles.buttonRow}>\n            <TouchableOpacity\n              style={[styles.button, styles.closeButton]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate(editedLoot);\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add this component definition before the App component\nconst GridZoomControls = memo(({ zoomLevel, setZoomLevel }) => {\n  const debouncedZoom = debounce((newZoom) => {\n    setZoomLevel(newZoom);\n  }, 100);\n\n  return (\n    <View style={styles.zoomControls}>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.max(0.5, zoomLevel - 0.1))}\n      >\n        <Text style={styles.buttonText}>-</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.min(2, zoomLevel + 0.1))}\n      >\n        <Text style={styles.buttonText}>+</Text>\n      </TouchableOpacity>\n    </View>\n  );\n});\n\n// Add InventoryModal component\nconst InventoryModal = memo(({ visible, onClose, character, onUpdate }) => {\n  const [editedInventory, setEditedInventory] = useState({\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    inventory: character?.inventory || []\n  });\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n\n  if (!visible || !character) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <Text style={additionalStyles.sectionTitle}>{character.name}'s Inventory</Text>\n\n          <GestureScrollView>\n            <View style={additionalStyles.lootSection}>\n              {/* Currency */}\n              {CURRENCY.map(currency => (\n                <View key={currency} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedInventory.currency[currency] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedInventory(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [currency]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedInventory(prev => ({\n                      ...prev,\n                      inventory: [...prev.inventory, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedInventory.inventory.map((item, index) => (\n                <View key={index} style={additionalStyles.itemRow}>\n                  <View style={additionalStyles.itemInfo}>\n                    <TextInput\n                      style={[additionalStyles.itemInput, { flex: 2 }]}\n                      value={item.name}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, name: text };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      placeholder=\"Item name\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <TextInput\n                      style={[additionalStyles.itemInput, { width: 60 }]}\n                      value={String(item.quantity)}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, quantity: parseInt(text) || 1 };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholder=\"Qty\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    {item.addedBy === character.name && (\n                      <TouchableOpacity\n                        style={additionalStyles.removeButton}\n                        onPress={() => {\n                          setEditedInventory(prev => ({\n                            ...prev,\n                            inventory: prev.inventory.filter((_, i) => i !== index)\n                          }));\n                        }}\n                      >\n                        <Text style={styles.buttonText}>×</Text>\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                  <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                </View>\n              ))}\n            </View>\n\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate({\n                  ...character,\n                  currency: editedInventory.currency,\n                  inventory: editedInventory.inventory\n                });\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add PlayerNameModal component\nconst PlayerNameModal = memo(({ visible, onSubmit }) => {\n  const [name, setName] = useState('');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={() => {}}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Enter Your Name</Text>\n          <TextInput\n            style={styles.input}\n            value={name}\n            onChangeText={setName}\n            placeholder=\"Your name\"\n            placeholderTextColor={THEME.text.light + '80'}\n            autoCapitalize=\"words\"\n          />\n          <TouchableOpacity\n            style={[styles.modalButton, { \n              backgroundColor: THEME.success,\n              width: '100%',\n              marginTop: 10\n            }]}\n            onPress={() => onSubmit(name)}\n            disabled={!name.trim()}\n          >\n            <Text style={styles.buttonText}>Continue</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add to styles\nconst viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5,\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2,\n  },\n});\n\n// Add this function at the top level of the App component, before the state declarations\nconst calculateModifier = (score) => {\n  return Math.floor((score - 10) / 2);\n};\n\n// Add this new component near the other modal components\nconst DiceResultModal = memo(({ visible, result, onClose }) => {\n  useEffect(() => {\n    if (visible) {\n      const timer = setTimeout(onClose, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [visible, onClose]);\n\n  if (!visible || !result) return null;\n\n  return (\n    <View style={{\n      position: 'fixed', // Change from 'absolute' to 'fixed'\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 9999, // Increase zIndex to ensure it's above everything\n      backgroundColor: 'rgba(0, 0, 0, 0.5)', // Add semi-transparent background\n    }}>\n      <View style={{\n        backgroundColor: THEME.background.panel + 'E6',\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        minWidth: 200,\n        maxWidth: '90%',\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5,\n      }}>\n        <Text style={{\n          color: THEME.text.light,\n          fontSize: 18,\n          marginBottom: 5,\n        }}>\n          {result.dice} {result.rollType !== 'normal' ? `(${result.rollType})` : ''}\n        </Text>\n        <Text style={{\n          color: THEME.accent,\n          fontSize: 32,\n          fontWeight: 'bold',\n          marginBottom: 5,\n        }}>\n          {result.total}\n        </Text>\n        <Text style={{\n          color: THEME.text.light + '80',\n          fontSize: 14,\n        }}>\n          Rolls: [{result.rolls.join(', ')}]\n          {result.modifier !== 0 && ` + ${result.modifier}`}\n        </Text>\n      </View>\n    </View>\n  );\n});\n\n// Add this new component near the other modal components\nconst DeleteCharacterModal = memo(({ visible, character, onClose, onConfirm }) => {\n  const [confirmName, setConfirmName] = useState('');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Delete Character</Text>\n          <Text style={[styles.buttonText, { marginBottom: 10, textAlign: 'center' }]}>\n            Type \"{character?.name}\" to confirm deletion\n          </Text>\n          <TextInput\n            style={styles.input}\n            value={confirmName}\n            onChangeText={setConfirmName}\n            placeholder=\"Character name\"\n            placeholderTextColor={THEME.text.light + '80'}\n          />\n          <View style={[styles.modalButtons, { marginTop: 15 }]}>\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.background.secondary }]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[\n                styles.modalButton, \n                { \n                  backgroundColor: confirmName === character?.name ? THEME.danger : THEME.background.secondary,\n                  opacity: confirmName === character?.name ? 1 : 0.5\n                }\n              ]}\n              onPress={() => {\n                if (confirmName === character?.name) {\n                  onConfirm();\n                }\n              }}\n              disabled={confirmName !== character?.name}\n            >\n              <Text style={styles.buttonText}>Delete</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add this new component for the enemy selection modal\nconst EnemySelectModal = memo(({ visible, onClose, onSelect }) => {\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Select Enemy</Text>\n          <ScrollView style={{ maxHeight: 300 }}>\n            {COMMON_ENEMIES.map((enemy, index) => (\n              <TouchableOpacity\n                key={index}\n                style={[\n                  styles.enemyOption,\n                  { backgroundColor: THEME.background.secondary }\n                ]}\n                onPress={() => onSelect(enemy)}\n              >\n                <Text style={styles.buttonText}>{enemy.name}</Text>\n                <Text style={[styles.buttonText, { opacity: 0.7, fontSize: 12 }]}>\n                  HP: {enemy.hp} • AC: {enemy.ac}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, { backgroundColor: THEME.background.secondary, marginTop: 10 }]}\n            onPress={onClose}\n          >\n            <Text style={styles.buttonText}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add new ColorWheel component before the App component\nconst ColorWheelModal = memo(({ visible, onClose, onSelectColor, initialColor }) => {\n  const [color, setColor] = useState(initialColor || '#FF0000');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[styles.modalContent, { width: isSmallScreen ? '90%' : 400, padding: 20 }]}>\n          <Text style={styles.modalTitle}>Select Color</Text>\n          <View style={{ height: 300, marginVertical: 20 }}>\n            <ColorPicker\n              color={color}\n              onColorChange={setColor}\n              thumbSize={30}\n              sliderSize={30}\n              noSnap={true}\n              row={false}\n            />\n          </View>\n          <View style={styles.modalButtons}>\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.background.secondary }]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onSelectColor(color);\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Select</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add new ResourceTracker component\nconst ResourceTracker = memo(({ character, onUpdate }) => {\n  if (!character) return null;\n\n  const [showAddResource, setShowAddResource] = useState(false);\n  const [newResourceName, setNewResourceName] = useState('');\n  const [newResourceMax, setNewResourceMax] = useState('');\n\n  useEffect(() => {\n    // Remove Ki Points if they exist\n    if (character.resources && character.resources['Ki Points']) {\n      const updatedResources = { ...character.resources };\n      delete updatedResources['Ki Points'];\n      onUpdate({\n        ...character,\n        resources: updatedResources\n      });\n    }\n  }, [character]);\n\n  const calculateResourceMax = (formula, character) => {\n    if (!formula) return 0;\n    \n    try {\n      // Handle level-based resources\n      if (formula === 'level') {\n        const level = parseInt(character.level) || 0;\n        console.log('Character level:', level); // Add logging\n        return level;\n      }\n      \n      // Handle charisma modifier based resources\n      if (formula.includes('charismaModifier')) {\n        const charismaMod = Math.floor((parseInt(character.abilityScores?.CHA) - 10) / 2);\n        return Math.max(1, charismaMod);\n      }\n      \n      // Handle complex formulas like rage\n      if (formula.includes('level')) {\n        const level = parseInt(character.level) || 0;\n        if (formula === '2 + floor((level-1)/3)') {\n          return 2 + Math.floor((level - 1) / 3);\n        }\n      }\n      \n      // If it's a simple number, return that\n      return parseInt(formula) || 0;\n    } catch (error) {\n      console.error('Error calculating resource max:', error);\n      return 0;\n    }\n  };\n\n  const handleAddResource = (resource) => {\n    try {\n      // Skip if trying to add Ki Points\n      if (resource.name === 'Ki Points') return;\n\n      const updatedResources = { ...character.resources };\n      const maxValue = calculateResourceMax(resource.maxFormula, character);\n      updatedResources[resource.name] = {\n        maxFormula: resource.maxFormula,\n        max: maxValue,\n        current: maxValue,\n        reset: resource.reset\n      };\n      \n      const updatedCharacter = {\n        ...character,\n        resources: updatedResources\n      };\n      \n      onUpdate(updatedCharacter);\n      setShowAddResource(false);\n      setNewResourceName('');\n      setNewResourceMax('');\n    } catch (error) {\n      console.error('Error adding resource:', error);\n      Alert.alert('Error', 'Failed to add resource');\n    }\n  };\n\n  const handleShortRest = () => {\n    try {\n      const updatedResources = { ...character.resources };\n      Object.keys(updatedResources).forEach(key => {\n        if (updatedResources[key].reset === 'shortRest') {\n          const maxValue = calculateResourceMax(updatedResources[key].maxFormula, character);\n          updatedResources[key] = {\n            ...updatedResources[key],\n            max: maxValue,\n            current: maxValue\n          };\n        }\n      });\n      onUpdate({ ...character, resources: updatedResources });\n    } catch (error) {\n      console.error('Error handling short rest:', error);\n      Alert.alert('Error', 'Failed to process short rest');\n    }\n  };\n\n  const handleLongRest = () => {\n    try {\n      const updatedResources = { ...character.resources };\n      Object.keys(updatedResources).forEach(key => {\n        const maxValue = calculateResourceMax(updatedResources[key].maxFormula, character);\n        updatedResources[key] = {\n          ...updatedResources[key],\n          max: maxValue,\n          current: maxValue\n        };\n      });\n      onUpdate({ ...character, resources: updatedResources });\n    } catch (error) {\n      console.error('Error handling long rest:', error);\n      Alert.alert('Error', 'Failed to process long rest');\n    }\n  };\n\n  const handleResourceChange = (name, change) => {\n    try {\n      const updatedResources = { ...character.resources };\n      const resource = updatedResources[name];\n      const currentValue = parseInt(resource.current) || 0;\n      const maxValue = parseInt(resource.max) || 0;\n      const newValue = Math.max(0, Math.min(maxValue, currentValue + change));\n      \n      updatedResources[name] = {\n        ...resource,\n        current: newValue\n      };\n      \n      // Create a new character object while preserving all existing data\n      const updatedCharacter = {\n        ...character,\n        resources: updatedResources,\n        pinnedNotes: character.pinnedNotes || [] // Preserve pinned notes\n      };\n      \n      onUpdate(updatedCharacter);\n    } catch (error) {\n      console.error('Error changing resource:', error);\n      Alert.alert('Error', 'Failed to update resource');\n    }\n  };\n\n  return (\n    <View style={styles.resourceContainer}>\n      <View style={styles.resourceHeader}>\n        <Text style={styles.resourceTitle}>Resources</Text>\n        <View style={[styles.resourceButtons, { flexDirection: 'column', gap: 5 }]}>\n          <TouchableOpacity\n            style={[styles.resourceButton, { backgroundColor: THEME.accent }]}\n            onPress={() => setShowAddResource(true)}\n          >\n            <Text style={styles.buttonText}>Add Resource</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[styles.resourceButton, { backgroundColor: THEME.success }]}\n            onPress={handleShortRest}\n          >\n            <Text style={styles.buttonText}>Short Rest</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[styles.resourceButton, { backgroundColor: THEME.success }]}\n            onPress={handleLongRest}\n          >\n            <Text style={styles.buttonText}>Long Rest</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <ScrollView style={styles.resourceList}>\n        {Object.entries(character.resources || {}).map(([name, resource]) => (\n          <View key={name} style={styles.resourceItem}>\n            <Text style={styles.resourceName}>{name}</Text>\n            <View style={styles.resourceControls}>\n              <TouchableOpacity\n                style={styles.resourceAdjust}\n                onPress={() => handleResourceChange(name, -1)}\n              >\n                <Text style={styles.buttonText}>-</Text>\n              </TouchableOpacity>\n              <Text style={styles.resourceValue}>\n                {resource.current || 0}/{resource.max || 0}\n              </Text>\n              <TouchableOpacity\n                style={styles.resourceAdjust}\n                onPress={() => handleResourceChange(name, 1)}\n              >\n                <Text style={styles.buttonText}>+</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        ))}\n      </ScrollView>\n\n      <Modal\n        visible={showAddResource}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setShowAddResource(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Add Resource</Text>\n            <ScrollView style={{ maxHeight: 200, marginBottom: 10 }}>\n              {COMMON_RESOURCES.map(resource => (\n                <TouchableOpacity\n                  key={resource.name}\n                  style={styles.resourceOption}\n                  onPress={() => handleAddResource(resource)}\n                >\n                  <Text style={styles.resourceOptionText}>{resource.name}</Text>\n                  <Text style={[styles.resourceOptionText, { opacity: 0.7 }]}>\n                    Reset on {resource.reset}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </ScrollView>\n            <View style={styles.divider} />\n            <Text style={[styles.modalTitle, { fontSize: 16 }]}>Custom Resource</Text>\n            <TextInput\n              style={styles.input}\n              value={newResourceName}\n              onChangeText={setNewResourceName}\n              placeholder=\"Resource Name\"\n              placeholderTextColor={THEME.text.light + '80'}\n            />\n            <TextInput\n              style={styles.input}\n              value={newResourceMax}\n              onChangeText={setNewResourceMax}\n              placeholder=\"Maximum Value\"\n              keyboardType=\"numeric\"\n              placeholderTextColor={THEME.text.light + '80'}\n            />\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.background.secondary }]}\n                onPress={() => {\n                  setShowAddResource(false);\n                  setNewResourceName('');\n                  setNewResourceMax('');\n                }}\n              >\n                <Text style={styles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={() => {\n                  if (newResourceName && newResourceMax) {\n                    handleAddResource({\n                      name: newResourceName,\n                      maxFormula: newResourceMax,\n                      reset: 'longRest'\n                    });\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Add</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n});\n\n// Add new PinnedNotes component\nconst PinnedNotes = memo(({ character, onUpdate }) => {\n  if (!character) return null;\n\n  const [showAddNote, setShowAddNote] = useState(false);\n  const [newNote, setNewNote] = useState('');\n\n  const handleRemoveNote = (index) => {\n    try {\n      // Create a new array from existing notes\n      const updatedNotes = [...(character.pinnedNotes || [])];\n      // Remove the note at the specified index\n      updatedNotes.splice(index, 1);\n      \n      // Create a new character object with all existing properties\n      const updatedCharacter = {\n        ...character,\n        pinnedNotes: updatedNotes,\n        resources: character.resources || {},\n        inventory: character.inventory || [],\n        currency: character.currency || {\n          CP: 0, SP: 0, EP: 0, GP: 0, PP: 0\n        }\n      };\n      \n      // Call onUpdate with the complete updated character object\n      onUpdate(updatedCharacter);\n    } catch (error) {\n      console.error('Error removing note:', error);\n      Alert.alert('Error', 'Failed to remove note');\n    }\n  };\n\n  const handleAddNote = () => {\n    try {\n      if (newNote.trim()) {\n        // Create a new array from existing notes or initialize if none exist\n        const updatedNotes = [...(character.pinnedNotes || [])];\n        if (updatedNotes.length >= MAX_PINNED_NOTES) {\n          updatedNotes.pop();\n        }\n        updatedNotes.unshift(newNote.trim());\n        \n        // Create a new character object with all existing properties\n        const updatedCharacter = {\n          ...character,\n          pinnedNotes: updatedNotes,\n          resources: character.resources || {},\n          inventory: character.inventory || [],\n          currency: character.currency || {\n            CP: 0, SP: 0, EP: 0, GP: 0, PP: 0\n          }\n        };\n        \n        // Call onUpdate with the complete updated character object\n        onUpdate(updatedCharacter);\n        setShowAddNote(false);\n        setNewNote('');\n      }\n    } catch (error) {\n      console.error('Error adding note:', error);\n      Alert.alert('Error', 'Failed to add note');\n    }\n  };\n\n  return (\n    <View style={styles.pinnedNotesContainer}>\n      <View style={styles.pinnedNotesHeader}>\n        <Text style={styles.resourceTitle}>Pinned Notes</Text>\n        <TouchableOpacity\n          style={[styles.resourceButton, { backgroundColor: THEME.accent }]}\n          onPress={() => setShowAddNote(true)}\n        >\n          <Text style={styles.buttonText}>Add Note</Text>\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView style={styles.pinnedNotesList}>\n        {(character.pinnedNotes || []).map((note, index) => (\n          <View key={index} style={styles.pinnedNoteItem}>\n            <Text style={styles.pinnedNoteText} numberOfLines={2}>{note}</Text>\n            <TouchableOpacity\n              style={styles.removeNoteButton}\n              onPress={() => handleRemoveNote(index)}\n            >\n              <Text style={[styles.buttonText, { fontSize: 18 }]}>×</Text>\n            </TouchableOpacity>\n          </View>\n        ))}\n      </ScrollView>\n\n      <Modal\n        visible={showAddNote}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setShowAddNote(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Add Pinned Note</Text>\n            <TextInput\n              style={[styles.input, { height: 100, textAlignVertical: 'top' }]}\n              value={newNote}\n              onChangeText={setNewNote}\n              placeholder=\"Enter your note...\"\n              placeholderTextColor={THEME.text.light + '80'}\n              multiline={true}\n            />\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.background.secondary }]}\n                onPress={() => {\n                  setShowAddNote(false);\n                  setNewNote('');\n                }}\n              >\n                <Text style={styles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={handleAddNote}\n              >\n                <Text style={styles.buttonText}>Add</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n});\n\nexport default function App() {\n  // Add calculateModifier here\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  // State declarations\n  const [roomCode, setRoomCode] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isJoining, setIsJoining] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [showRoomModal, setShowRoomModal] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [zoomLevel, setZoomLevel] = useState(isSmallScreen ? 0.8 : 1);\n  const [tokens, setTokens] = useState({});\n  const [currentColor, setCurrentColor] = useState(COLORS[0]);\n  const [initiative, setInitiative] = useState([]);\n  const [inCombat, setInCombat] = useState(false);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [layers, setLayers] = useState(initialGameState.layers);\n  const [diceHistory, setDiceHistory] = useState([]);\n  const [advantage, setAdvantage] = useState(false);\n  const [modifier, setModifier] = useState(0);\n  const [selectedToken, setSelectedToken] = useState(null);\n  const [showTokenModal, setShowTokenModal] = useState(false);\n  const [partyLoot, setPartyLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  });\n  const [showPartyLoot, setShowPartyLoot] = useState(false);\n  const [diceQuantity, setDiceQuantity] = useState(1);\n  const [characters, setCharacters] = useState([]);\n  const [showCharacterSheet, setShowCharacterSheet] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [showInventory, setShowInventory] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showPlayerNameModal, setShowPlayerNameModal] = useState(true);\n  const [rollType, setRollType] = useState('normal'); // 'normal', 'advantage', or 'disadvantage'\n  const [diceResult, setDiceResult] = useState(null);\n  const [showDiceResult, setShowDiceResult] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [isDM, setIsDM] = useState(false);\n  const [showEnemySelect, setShowEnemySelect] = useState(false);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n  const [storyText, setStoryText] = useState('');\n  const [isAoeMode, setIsAoeMode] = useState(false);\n  const [showColorWheel, setShowColorWheel] = useState(false);\n\n  // Refs\n  const firebaseRef = useRef(null);\n  const unsubscribeRef = useRef(null);\n\n  // Helper Functions\n  const handleDisconnect = useCallback(() => {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n\n      // Reset room-specific state\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n      // Don't clear characters or player name\n\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n\n  const handleInitiativeRoll = useCallback(() => {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n\n    const rolls = Object.entries(tokens).map(([position, token]) => {\n      const roll = Math.floor(Math.random() * 20) + 1;\n      const initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position,\n        initiative,\n        details: `${token.name} (${initiative})`\n      };\n    });\n\n    rolls.sort((a, b) => b.initiative - a.initiative);\n\n    if (firebaseRef.current) {\n      set(firebaseRef.current, {\n        ...initialGameState,\n        tokens,\n        layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      });\n    }\n\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n\n  const rollDice = useCallback((sides) => {\n    const allRolls = [];\n\n    // Roll for each die in quantity\n    for (let d = 0; d < diceQuantity; d++) {\n      const rolls = [];\n      const numRolls = rollType !== 'normal' ? 2 : 1;\n\n      // Roll with advantage/disadvantage if enabled\n      for (let i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n\n      const finalRoll = rollType === 'advantage' \n        ? Math.max(...rolls) \n        : rollType === 'disadvantage'\n          ? Math.min(...rolls)\n          : rolls[0];\n\n      allRolls.push({\n        rolls,\n        total: finalRoll\n      });\n    }\n\n    // Calculate grand total including modifier\n    const grandTotal = allRolls.reduce((sum, roll) => sum + roll.total, 0) + modifier;\n\n    const newResult = {\n      dice: `${diceQuantity}d${sides}`,\n      rolls: allRolls.map(r => r.rolls).flat(),\n      individualTotals: allRolls.map(r => r.total),\n      modifier,\n      rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n\n    setDiceHistory(prev => [newResult, ...prev.slice(0, 49)]);\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n\n  const handleCellPress = useCallback(async (row, col) => {\n    if (!firebaseRef.current) return;\n\n    try {\n      const position = `${row}-${col}`;\n      \n      // Handle AoE mode\n      if (isAoeMode) {\n        const snapshot = await get(firebaseRef.current);\n        const currentRoomData = snapshot.val() || {};\n        const currentAoe = currentRoomData.layers?.aoe || {};\n        \n        const newAoe = { ...currentAoe };\n        if (newAoe[position]) {\n          delete newAoe[position];\n        } else {\n          newAoe[position] = { color: currentColor };\n        }\n\n        await set(firebaseRef.current, {\n          ...currentRoomData,\n          layers: {\n            ...currentRoomData.layers,\n            aoe: newAoe\n          },\n          lastUpdate: Date.now()\n        });\n        return;\n      }\n\n      // Original token handling code\n      const newTokens = { ...tokens };\n\n      // First get current room data to preserve all existing data\n      const snapshot = await get(firebaseRef.current);\n      const currentRoomData = snapshot.val() || {};\n\n      if (tokens[position]) {\n        delete newTokens[position];\n      } else {\n        if (isDM) {\n          setSelectedPosition(position);\n          setShowEnemySelect(true);\n          return;\n        } else {\n          // Check if a character is selected\n          if (!selectedCharacter) {\n            Alert.alert('No Character Selected', 'Please select a character from your list first.');\n            return;\n          }\n\n          // Create token from selected character\n          newTokens[position] = {\n            name: selectedCharacter.name,\n            color: currentColor,\n            hp: selectedCharacter.hp,\n            maxHp: selectedCharacter.maxHp,\n            ac: selectedCharacter.ac,\n            initiativeBonus: calculateModifier(selectedCharacter.abilityScores.DEX),\n            effects: [],\n            position,\n            owner: playerName\n          };\n        }\n      }\n\n      // Update Firebase while preserving all existing data\n      await set(firebaseRef.current, {\n        ...currentRoomData,\n        tokens: newTokens,\n        lastUpdate: Date.now()\n      });\n\n      setTokens(newTokens);\n    } catch (error) {\n      console.error('Error updating tokens:', error);\n      Alert.alert('Error', 'Failed to update token');\n    }\n  }, [tokens, isDM, selectedCharacter, playerName, currentColor, isAoeMode]);\n\n  // Update the savePlayerData function\n  const savePlayerData = useCallback(async (newCharacters) => {\n    try {\n      if (!playerName || !roomCode) {\n        console.error('Missing playerName or roomCode');\n        return;\n      }\n\n      // Save to both room and global player data\n      const roomRef = ref(database, `rooms/${roomCode}`);\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n      \n      // Get current room data\n      const roomSnapshot = await get(roomRef);\n      const currentRoomData = roomSnapshot.exists() ? roomSnapshot.val() : {};\n      \n      // Update room data while preserving other data\n      await set(roomRef, {\n        ...currentRoomData,\n        characters: newCharacters,\n        lastUpdate: serverTimestamp()\n      });\n\n      // Update global player data\n      await set(globalPlayerRef, {\n        characters: newCharacters,\n        lastUpdate: serverTimestamp()\n      });\n\n      // Update local state after successful save\n      setCharacters(newCharacters);\n      \n    } catch (error) {\n      console.error('Error saving player data:', error);\n      Alert.alert('Error', 'Failed to save changes');\n      throw error; // Re-throw to allow handling in calling function\n    }\n  }, [playerName, roomCode, database]);\n\n  // Update the connectToRoom function's onValue listener\n  const connectToRoom = useCallback(async (code) => {\n    if (!code.trim() || !playerName) {\n      Alert.alert(\"Error\", \"Please enter a room code and player name\");\n      return;\n    }\n\n    setIsJoining(true);\n    setIsLoading(true);\n\n    try {\n      // First try to load player's global data\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n      const playerSnapshot = await get(globalPlayerRef);\n      let savedCharacters = [];\n      \n      if (playerSnapshot.exists()) {\n        const playerData = playerSnapshot.val();\n        savedCharacters = playerData.characters || [];\n        // Set characters from global data first\n        setCharacters(savedCharacters);\n      }\n\n      const gameRef = ref(database, `rooms/${code}`);\n      firebaseRef.current = gameRef;\n\n      // Check if room exists\n      const snapshot = await get(gameRef);\n      if (!snapshot.exists()) {\n        // If room doesn't exist, create it with the player's characters\n        await set(gameRef, {\n          ...initialGameState,\n          players: {\n            [playerName]: {\n              characters: savedCharacters,\n              lastUpdate: Date.now()\n            }\n          }\n        });\n      } else {\n        // If room exists, check for room-specific character data\n        const roomData = snapshot.val();\n        if (roomData.players && roomData.players[playerName]) {\n          const roomCharacters = roomData.players[playerName].characters || [];\n          // Update characters with room-specific data if it exists\n          setCharacters(roomCharacters);\n        } else {\n          // If no room-specific data, update room with player's global characters\n          const updatedRoomData = {\n            ...roomData,\n            players: {\n              ...(roomData.players || {}),\n              [playerName]: {\n                characters: savedCharacters,\n                lastUpdate: Date.now()\n              }\n            }\n          };\n          await set(gameRef, updatedRoomData);\n        }\n      }\n\n      // Set up real-time listener\n      const unsubscribe = onValue(gameRef, (snapshot) => {\n        const data = snapshot.val();\n        if (data) {\n          setTokens(data.tokens || {});\n          setLayers(data.layers || initialGameState.layers);\n          setInitiative(data.initiative || []);\n          setInCombat(data.inCombat || false);\n          setCurrentTurn(data.currentTurn || 0);\n          setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n          \n          // Only update story text if it's different from current text\n          // and if it was updated by someone else\n          if (data.campaignStory?.text !== undefined && \n              data.campaignStory?.updatedBy !== playerName) {\n            setStoryText(data.campaignStory.text);\n          }\n\n          // Update characters if they exist in the room data\n          if (data.players && data.players[playerName]) {\n            const newCharacters = data.players[playerName].characters || [];\n            setCharacters(newCharacters);\n          }\n        }\n      });\n\n      unsubscribeRef.current = unsubscribe;\n      setRoomCode(code);\n      setShowRoomModal(false);\n      setIsConnected(true);\n      \n    } catch (error) {\n      console.error('Connection error:', error);\n      Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n      setIsConnected(false);\n    } finally {\n      setIsJoining(false);\n      setIsLoading(false);\n    }\n  }, [playerName]);\n\n  // Effects\n  useEffect(() => {\n    const handleOffline = () => {\n      Alert.alert(\n        'Connection Lost',\n        'Please check your internet connection',\n        [{ text: 'OK' }]\n      );\n    };\n\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n\n  // Add to styles\n  const layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%',\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10,\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10,\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1,\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold',\n    },\n    characterItem: {\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 5,\n      backgroundColor: THEME.background.secondary,\n    },\n    characterInfo: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontWeight: 'bold',\n    },\n    characterDetails: {\n      color: THEME.text.light,\n      opacity: 0.8,\n    },\n  };\n\n  // Add the delete function in App component\n  const handleDeleteCharacter = useCallback(async () => {\n    if (!selectedCharacter) return;\n\n    try {\n      const newCharacters = characters.filter(char => char.name !== selectedCharacter.name);\n      setCharacters(newCharacters);\n      await savePlayerData(newCharacters);\n      setSelectedCharacter(null);\n      setShowDeleteModal(false);\n    } catch (error) {\n      console.error('Error deleting character:', error);\n      Alert.alert('Error', 'Failed to delete character');\n    }\n  }, [selectedCharacter, characters, savePlayerData]);\n\n  // Add the handleEnemySelect function\n  const handleEnemySelect = useCallback(async (enemy) => {\n    if (!selectedPosition || !firebaseRef.current) return;\n\n    try {\n      const newTokens = { ...tokens };\n      newTokens[selectedPosition] = {\n        ...enemy,\n        position: selectedPosition,\n        effects: [],\n        owner: 'DM'\n      };\n\n      // First get current room data to preserve all existing data\n      const snapshot = await get(firebaseRef.current);\n      const currentRoomData = snapshot.val() || {};\n\n      // Update Firebase while preserving all existing data\n      await set(firebaseRef.current, {\n        ...currentRoomData,\n        tokens: newTokens,\n        lastUpdate: Date.now()\n      });\n\n      setTokens(newTokens);\n      setShowEnemySelect(false);\n      setSelectedPosition(null);\n    } catch (error) {\n      console.error('Error adding enemy:', error);\n      Alert.alert('Error', 'Failed to add enemy');\n    }\n  }, [selectedPosition, tokens]);\n\n  // Main render return\n  return (\n    <SafeAreaView style={[styles.container, isDarkMode && styles.darkMode]}>\n      <View style={styles.container}>\n        {/* Modals stay at the top level */}\n        <TokenModal \n          showTokenModal={showTokenModal}\n          setShowTokenModal={setShowTokenModal}\n          selectedToken={selectedToken}\n          setSelectedToken={setSelectedToken}\n          tokens={tokens}\n          firebaseRef={firebaseRef}\n          initialGameState={initialGameState}\n          layers={layers}\n          initiative={initiative}\n          inCombat={inCombat}\n          currentTurn={currentTurn}\n          THEME={THEME}\n        />\n\n        <RoomModal \n          showRoomModal={showRoomModal}\n          setShowRoomModal={setShowRoomModal}\n          isConnected={isConnected}\n          roomCode={roomCode}\n          setRoomCode={setRoomCode}\n          isJoining={isJoining}\n          connectToRoom={connectToRoom}\n        />\n\n        <PlayerNameModal\n          visible={showPlayerNameModal && !playerName}\n          onSubmit={(name) => {\n            setPlayerName(name);\n            setShowPlayerNameModal(false);\n            setIsConnected(true);\n          }}\n        />\n\n        <DiceResultModal\n          visible={showDiceResult}\n          result={diceResult}\n          onClose={() => setShowDiceResult(false)}\n        />\n\n        <PartyLootModal\n          visible={showPartyLoot}\n          onClose={() => setShowPartyLoot(false)}\n          partyLoot={partyLoot}\n          playerName={playerName}\n          onUpdate={(updatedLoot) => {\n            setPartyLoot(updatedLoot);\n            if (firebaseRef.current) {\n              set(firebaseRef.current, {\n                ...initialGameState,\n                tokens,\n                layers,\n                initiative,\n                inCombat,\n                currentTurn,\n                partyLoot: updatedLoot\n              });\n            }\n          }}\n        />\n\n        <CharacterSheetModal\n          visible={showCharacterSheet}\n          onClose={() => setShowCharacterSheet(false)}\n          character={selectedCharacter || {\n            name: '',\n            class: '',\n            level: 1,\n            owner: playerName,\n            proficiencyBonus: 2,\n            hp: 0,\n            maxHp: 0,\n            ac: 10,\n            abilityScores: {\n              STR: 10,\n              DEX: 10,\n              CON: 10,\n              INT: 10,\n              WIS: 10,\n              CHA: 10\n            },\n            proficientSkills: [],\n            currency: {\n              CP: 0,\n              SP: 0,\n              EP: 0,\n              GP: 0,\n              PP: 0\n            },\n            resources: {},\n            pinnedNotes: [],\n            inventory: [],\n            items: []\n          }}\n          characters={characters}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n\n              // Create new array with updated character\n              const newCharacters = selectedCharacter\n                ? characters.map(char => \n                    char.name === selectedCharacter.name ? updatedCharacter : char\n                  )\n                : [...characters, updatedCharacter];\n\n              // Save to Firebase first\n              await savePlayerData(newCharacters);\n\n              // Only update local state after successful save\n              setCharacters(newCharacters);\n              setSelectedCharacter(updatedCharacter);\n\n              // Close the modal after successful save\n              setShowCharacterSheet(false);\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          }}\n        />\n\n        <InventoryModal\n          visible={showInventory}\n          onClose={() => setShowInventory(false)}\n          character={selectedCharacter}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              const newCharacters = characters.map(char => \n                char.name === selectedCharacter.name ? updatedCharacter : char\n              );\n\n              setCharacters(newCharacters);\n              await savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          }}\n        />\n\n        {!isConnected ? (\n          <View style={styles.loadingContainer}>\n            {isLoading ? (\n              <View style={{ alignItems: 'center' }}>\n                <ActivityIndicator size=\"large\" color={THEME.accent} />\n                <Text style={[styles.loadingText, { marginTop: 20 }]}>\n                  Connecting to room...\n                </Text>\n              </View>\n            ) : (\n              <Text style={styles.loadingText}>\n                Enter a room code to begin\n              </Text>\n            )}\n          </View>\n        ) : (\n          <>\n            <View style={styles.header}>\n              <Text style={styles.title}>D&D Combat Tracker</Text>\n              <ScrollView \n                horizontal={isSmallScreen} \n                showsHorizontalScrollIndicator={false}\n                contentContainerStyle={styles.controls}\n              >\n                <TouchableOpacity \n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={() => setShowRoomModal(true)}\n                >\n                  <Text style={styles.buttonText}>Room: {roomCode}</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={handleInitiativeRoll}\n                >\n                  <Text style={styles.buttonText}>Roll Initiative</Text>\n                </TouchableOpacity>\n\n                {inCombat && (\n                  <>\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.success }]}\n                      onPress={() => {\n                        const nextTurn = (currentTurn + 1) % initiative.length;\n                        setCurrentTurn(nextTurn);\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative,\n                            inCombat: true,\n                            currentTurn: nextTurn\n                          });\n                        }\n                      }}\n                    >\n                      <Text style={styles.buttonText}>Next Turn</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                      onPress={() => {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0\n                          });\n                        }\n                        setInitiative([]);\n                        setInCombat(false);\n                        setCurrentTurn(0);\n                      }}\n                    >\n                      <Text style={styles.buttonText}>End Combat</Text>\n                    </TouchableOpacity>\n                  </>\n                )}\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                  onPress={() => {\n                    Alert.alert(\n                      \"Leave Room\",\n                      \"Are you sure you want to leave this room?\",\n                      [\n                        { text: \"Cancel\", style: \"cancel\" },\n                        { \n                          text: \"Leave\", \n                          style: \"destructive\",\n                          onPress: () => {\n                            handleDisconnect();\n                            setShowRoomModal(true);\n                          }\n                        }\n                      ]\n                    );\n                  }}\n                >\n                  <Text style={styles.buttonText}>Leave Room</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity \n                  style={[\n                    styles.controlButton,\n                    isDM && styles.dmToggleActive\n                  ]}\n                  onPress={() => setIsDM(!isDM)}\n                >\n                  <Text style={styles.buttonText}>DM Mode</Text>\n                </TouchableOpacity>\n\n                {/* Add AoE toggle button to controls */}\n                <View style={styles.controls}>\n                  {/* ... existing control buttons ... */}\n                  <TouchableOpacity\n                    style={[\n                      styles.controlButton,\n                      { backgroundColor: isAoeMode ? THEME.accent : THEME.background.secondary }\n                    ]}\n                    onPress={() => setIsAoeMode(!isAoeMode)}\n                  >\n                    <Text style={styles.buttonText}>AoE Mode</Text>\n                  </TouchableOpacity>\n                </View>\n              </ScrollView>\n            </View>\n            <ScrollView style={styles.content}>\n              <View style={styles.mainArea}>\n                {/* Left Sidebar - Dice Roller */}\n                <View style={styles.leftSidebar}>\n                  <View style={diceStyles.dicePanel}>\n                    <Text style={diceStyles.diceTitle}>Dice Roller</Text>\n                    <View style={diceStyles.diceControls}>\n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.controlGroup}>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'advantage' && diceStyles.controlActive,\n                              rollType === 'advantage' && { backgroundColor: THEME.success }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'advantage' ? 'normal' : 'advantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Advantage</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'disadvantage' && diceStyles.controlActive,\n                              rollType === 'disadvantage' && { backgroundColor: THEME.danger }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'disadvantage' ? 'normal' : 'disadvantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Disadvantage</Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n\n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.modifierGroup}>\n                          <Text style={diceStyles.modifierLabel}>Modifier</Text>\n                          <TextInput\n                            style={diceStyles.modifierInput}\n                            value={String(modifier)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 0;\n                              setModifier(num);\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                        <View style={diceStyles.quantityGroup}>\n                          <Text style={diceStyles.quantityLabel}>Quantity</Text>\n                          <TextInput\n                            style={diceStyles.quantityInput}\n                            value={String(diceQuantity)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 1;\n                              setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                      </View>\n                    </View>\n\n                    <View style={diceStyles.diceGrid}>\n                      {DICE_TYPES.map(({ sides }) => (\n                        <TouchableOpacity\n                          key={sides}\n                          style={[diceStyles.diceButton, { backgroundColor: THEME.background.secondary }]}\n                          onPress={() => {\n                            const rolls = [];\n                            for (let i = 0; i < diceQuantity; i++) {\n                              if (rollType !== 'normal') {\n                                const roll1 = Math.floor(Math.random() * sides) + 1;\n                                const roll2 = Math.floor(Math.random() * sides) + 1;\n                                rolls.push(rollType === 'advantage' ? Math.max(roll1, roll2) : Math.min(roll1, roll2));\n                              } else {\n                                rolls.push(Math.floor(Math.random() * sides) + 1);\n                              }\n                            }\n\n                            const total = rolls.reduce((sum, roll) => sum + roll, 0) + modifier;\n                            const result = {\n                              dice: `${diceQuantity}d${sides}`,\n                              rolls,\n                              modifier,\n                              rollType,\n                              total\n                            };\n\n                            setDiceResult(result);\n                            setShowDiceResult(true);\n                            Vibration.vibrate(50);\n                          }}\n                        >\n                          <Text style={diceStyles.diceButtonText}>d{sides}</Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  </View>\n\n                  {/* Player Tools Panel */}\n                  <View style={styles.infoPanel}>\n                    <Text style={styles.infoPanelTitle}>Player Tools</Text>\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll = Math.floor(Math.random() * 20) + 1;\n                          setDiceResult({\n                            dice: \"d20\",\n                            rolls: [roll],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: roll\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick d20</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll1 = Math.floor(Math.random() * 20) + 1;\n                          const roll2 = Math.floor(Math.random() * 20) + 1;\n                          const total = Math.max(roll1, roll2);\n                          setDiceResult({\n                            dice: \"d20 with advantage\",\n                            rolls: [roll1, roll2],\n                            modifier: 0,\n                            rollType: 'advantage',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Advantage</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const damage = Math.floor(Math.random() * 8) + 1;\n                          setDiceResult({\n                            dice: \"d8\",\n                            rolls: [damage],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: damage\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Damage</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll1 = Math.floor(Math.random() * 20) + 1;\n                          const roll2 = Math.floor(Math.random() * 20) + 1;\n                          const total = Math.min(roll1, roll2);\n                          setDiceResult({\n                            dice: \"d20 with disadvantage\",\n                            rolls: [roll1, roll2],\n                            modifier: 0,\n                            rollType: 'disadvantage',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Disadvantage</Text>\n                      </TouchableOpacity>\n                    </View>\n\n                    <View style={styles.divider} />\n\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, { backgroundColor: THEME.accent }]}\n                        onPress={() => {\n                          const rolls = [\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1\n                          ].sort((a, b) => b - a);\n                          // Drop lowest roll\n                          rolls.pop();\n                          const total = rolls.reduce((sum, roll) => sum + roll, 0);\n                          setDiceResult({\n                            dice: \"4d6 drop lowest\",\n                            rolls: rolls,\n                            modifier: 0,\n                            rollType: 'normal',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Roll Ability Score</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                        onPress={() => {\n                          const roll = Math.floor(Math.random() * 100) + 1;\n                          setDiceResult({\n                            dice: \"d100\",\n                            rolls: [roll],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: roll\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Percentile Roll</Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n\n                {/* Grid Section */}\n                <View style={styles.gridSection}>\n                  <ScrollView \n                    horizontal \n                    contentContainerStyle={{ minWidth: '100%' }}\n                  >\n                    <ScrollView>\n                      <View style={[\n                        styles.gridContainer,\n                        { transform: [{ scale: zoomLevel }] }\n                      ]}>\n                        {/* Color Picker */}\n                        <View style={styles.colorPicker}>\n                          <TouchableOpacity\n                            style={[\n                              styles.colorButton,\n                              { backgroundColor: currentColor, width: 40, height: 40 }\n                            ]}\n                            onPress={() => setShowColorWheel(true)}\n                          />\n                        </View>\n\n                        {/* Grid */}\n                        {Array.from({ length: GRID_SIZE }).map((_, row) => (\n                          <View key={row} style={styles.row}>\n                            {Array.from({ length: GRID_SIZE }).map((_, col) => {\n                              const position = `${row}-${col}`;\n                              const token = tokens[position];\n                              const isCurrentTurn = inCombat && \n                                initiative[currentTurn]?.position === position;\n\n                              return (\n                                <TouchableOpacity\n                                  key={col}\n                                  style={[\n                                    styles.cell,\n                                    token && { backgroundColor: token.color },\n                                    layers.aoe?.[position] && {\n                                      backgroundColor: layers.aoe[position].color,\n                                      opacity: 0.5\n                                    },\n                                    isCurrentTurn && styles.currentTurn\n                                  ]}\n                                  onPress={() => handleCellPress(row, col)}\n                                  onLongPress={() => {\n                                    if (token) {\n                                      setSelectedToken({ ...token, position });\n                                      setShowTokenModal(true);\n                                    }\n                                  }}\n                                >\n                                  {token && (\n                                    <View style={styles.tokenContent}>\n                                      <Text style={[\n                                        styles.tokenText,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]} numberOfLines={1}>\n                                        {token.name}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenHp,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        HP: {token.hp}/{token.maxHp}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenHp,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        AC: {token.ac}\n                                      </Text>\n                                      {token.effects && token.effects.length > 0 && (\n                                        <View style={statusStyles.tokenEffects}>\n                                          {token.effects.map(effect => {\n                                            const statusEffect = STATUS_EFFECTS.find(e => e.id === effect);\n                                            return statusEffect ? (\n                                              <Text key={effect} style={statusStyles.effectIcon}>\n                                                {statusEffect.icon}\n                                              </Text>\n                                            ) : null;\n                                          })}\n                                        </View>\n                                      )}\n                                    </View>\n                                  )}\n                                </TouchableOpacity>\n                              );\n                            })}\n                          </View>\n                        ))}\n                      </View>\n                    </ScrollView>\n                  </ScrollView>\n                  <GridZoomControls \n                    zoomLevel={zoomLevel}\n                    setZoomLevel={setZoomLevel}\n                  />\n\n                  {/* Campaign Story Panel */}\n                  <View style={[styles.infoPanel, { marginTop: 20 }]}>\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 10 }}>\n                      <Text style={styles.infoPanelTitle}>Campaign Story</Text>\n                      {isDM && (\n                        <TouchableOpacity\n                          style={[styles.quickActionButton, { backgroundColor: THEME.accent, width: 100 }]}\n                          onPress={() => {\n                            if (firebaseRef.current) {\n                              // First get the current room data\n                              get(firebaseRef.current).then((snapshot) => {\n                                const currentRoomData = snapshot.val() || {};\n                                \n                                // Update the room data while preserving all existing data\n                                set(firebaseRef.current, {\n                                  ...currentRoomData,\n                                  campaignStory: {\n                                    text: storyText,\n                                    lastUpdate: Date.now(),\n                                    updatedBy: playerName\n                                  }\n                                });\n                              });\n                            }\n                          }}\n                        >\n                          <Text style={styles.quickActionText}>Save Story</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n                    <TextInput\n                      style={[\n                        styles.input,\n                        {\n                          height: 200,\n                          textAlignVertical: 'top',\n                          padding: 10,\n                          backgroundColor: THEME.background.secondary,\n                          color: THEME.text.light,\n                          fontSize: 14,\n                          lineHeight: 20,\n                          marginBottom: 10\n                        }\n                      ]}\n                      multiline={true}\n                      value={storyText}\n                      onChangeText={isDM ? setStoryText : undefined}\n                      editable={isDM}\n                      placeholder=\"Type or paste your campaign story here...\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    {initialGameState.campaignStory?.updatedBy && (\n                      <Text style={[styles.infoLabel, { textAlign: 'right' }]}>\n                        Last updated by {initialGameState.campaignStory.updatedBy}\n                      </Text>\n                    )}\n                  </View>\n                </View>\n\n                {/* Right Sidebar - Character Management & Combat */}\n                <View style={styles.rightSidebar}>\n                  {/* Quick Actions */}\n                  <View style={styles.quickActions}>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={() => {\n                        // Initialize new character data\n                        const newCharacter = {\n                          name: '',\n                          class: '',\n                          level: 1,\n                          owner: playerName,\n                          proficiencyBonus: 2,\n                          hp: 0,\n                          maxHp: 0,\n                          ac: 10,\n                          abilityScores: {\n                            STR: 10,\n                            DEX: 10,\n                            CON: 10,\n                            INT: 10,\n                            WIS: 10,\n                            CHA: 10\n                          },\n                          proficientSkills: [],\n                          currency: {\n                            CP: 0,\n                            SP: 0,\n                            EP: 0,\n                            GP: 0,\n                            PP: 0\n                          },\n                          resources: {},\n                          pinnedNotes: [],\n                          inventory: []\n                        };\n                        setSelectedCharacter(newCharacter);\n                        setShowCharacterSheet(true);\n                      }}\n                    >\n                      <Text style={styles.quickActionText}>New Character</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={() => setShowPartyLoot(true)}\n                    >\n                      <Text style={styles.quickActionText}>Party Loot</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={handleInitiativeRoll}\n                    >\n                      <Text style={styles.quickActionText}>Roll Initiative</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={[styles.quickActionButton, { backgroundColor: THEME.danger }]}\n                      onPress={() => {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens: {},\n                            layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0,\n                            partyLoot,\n                            characters\n                          });\n                          setTokens({});\n                          setInitiative([]);\n                          setInCombat(false);\n                          setCurrentTurn(0);\n                        }\n                      }}\n                    >\n                      <Text style={styles.quickActionText}>Clear Board</Text>\n                    </TouchableOpacity>\n                  </View>\n\n                  {/* Character Management Panel */}\n                  <View style={[styles.infoPanel, { marginBottom: 15 }]}>\n                    <Text style={styles.infoPanelTitle}>Characters</Text>\n                    <ScrollView style={{ maxHeight: 200 }}>\n                      {characters.map((char, index) => (\n                        <TouchableOpacity\n                          key={index}\n                          style={[\n                            layoutStyles.characterItem,\n                            selectedCharacter?.name === char.name && { backgroundColor: THEME.accent + '40' }\n                          ]}\n                          onPress={() => setSelectedCharacter(char)}\n                        >\n                          <View style={layoutStyles.characterInfo}>\n                            <View>\n                              <Text style={layoutStyles.characterName}>{char.name}</Text>\n                              <Text style={layoutStyles.characterDetails}>\n                                Level {char.level} {char.class}\n                              </Text>\n                            </View>\n                            <View style={styles.statBadge}>\n                              <Text style={styles.statBadgeText}>\n                                HP: {char.hp}/{char.maxHp}\n                              </Text>\n                            </View>\n                          </View>\n                        </TouchableOpacity>\n                      ))}\n                    </ScrollView>\n                    \n                    {selectedCharacter && (\n                      <>\n                        <View style={styles.divider} />\n                        <View style={styles.infoGrid}>\n                          <TouchableOpacity\n                            style={[styles.quickActionButton, { backgroundColor: THEME.accent }]}\n                            onPress={() => {\n                              // Ensure character data is properly initialized before opening modal\n                              const initialCharacter = selectedCharacter ? {\n                                ...selectedCharacter,\n                                resources: selectedCharacter.resources || {},\n                                pinnedNotes: selectedCharacter.pinnedNotes || [],\n                                inventory: selectedCharacter.inventory || [],\n                                currency: selectedCharacter.currency || {\n                                  CP: 0,\n                                  SP: 0,\n                                  EP: 0,\n                                  GP: 0,\n                                  PP: 0\n                                }\n                              } : {\n                                name: '',\n                                class: '',\n                                level: 1,\n                                owner: playerName,\n                                proficiencyBonus: 2,\n                                hp: 0,\n                                maxHp: 0,\n                                ac: 10,\n                                abilityScores: {\n                                  STR: 10,\n                                  DEX: 10,\n                                  CON: 10,\n                                  INT: 10,\n                                  WIS: 10,\n                                  CHA: 10\n                                },\n                                proficientSkills: [],\n                                currency: {\n                                  CP: 0,\n                                  SP: 0,\n                                  EP: 0,\n                                  GP: 0,\n                                  PP: 0\n                                },\n                                resources: {},\n                                pinnedNotes: [],\n                                inventory: []\n                              };\n                              setSelectedCharacter(initialCharacter);\n                              setShowCharacterSheet(true);\n                            }}\n                          >\n                            <Text style={styles.quickActionText}>Character Sheet</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                            onPress={() => setShowInventory(true)}\n                          >\n                            <Text style={styles.quickActionText}>Inventory</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[styles.quickActionButton, { backgroundColor: THEME.danger }]}\n                            onPress={() => setShowDeleteModal(true)}\n                          >\n                            <Text style={styles.quickActionText}>Delete Character</Text>\n                          </TouchableOpacity>\n                        </View>\n                      </>\n                    )}\n                  </View>\n\n                  {/* Combat Tracker Panel */}\n                  <View style={styles.infoPanel}>\n                    <Text style={styles.infoPanelTitle}>Combat Tracker</Text>\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, inCombat ? { backgroundColor: THEME.danger } : {}]}\n                        onPress={() => {\n                          if (inCombat) {\n                            if (firebaseRef.current) {\n                              set(firebaseRef.current, {\n                                ...initialGameState,\n                                tokens,\n                                layers,\n                                initiative: [],\n                                inCombat: false,\n                                currentTurn: 0\n                              });\n                            }\n                            setInitiative([]);\n                            setInCombat(false);\n                            setCurrentTurn(0);\n                          } else {\n                            handleInitiativeRoll();\n                          }\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>\n                          {inCombat ? 'End Combat' : 'Start Combat'}\n                        </Text>\n                      </TouchableOpacity>\n                      \n                      {inCombat && (\n                        <TouchableOpacity\n                          style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                          onPress={() => {\n                            const nextTurn = (currentTurn + 1) % initiative.length;\n                            setCurrentTurn(nextTurn);\n                            if (firebaseRef.current) {\n                              set(firebaseRef.current, {\n                                ...initialGameState,\n                                tokens,\n                                layers,\n                                initiative,\n                                inCombat: true,\n                                currentTurn: nextTurn\n                              });\n                            }\n                          }}\n                        >\n                          <Text style={styles.quickActionText}>Next Turn</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n\n                    {inCombat && initiative.length > 0 && (\n                      <>\n                        <View style={styles.divider} />\n                        <Text style={[styles.infoPanelTitle, { fontSize: 14 }]}>Current Turn</Text>\n                        <View style={[styles.infoCard, { marginBottom: 10 }]}>\n                          <Text style={styles.infoValue}>\n                            {tokens[initiative[currentTurn]?.position]?.name || 'Unknown'}\n                          </Text>\n                          <Text style={styles.infoLabel}>\n                            Initiative: {initiative[currentTurn]?.initiative || '0'}\n                          </Text>\n                        </View>\n                        \n                        <Text style={[styles.infoPanelTitle, { fontSize: 14 }]}>Initiative Order</Text>\n                        <ScrollView style={{ maxHeight: 150 }}>\n                          {initiative.map((item, index) => {\n                            const token = tokens[item.position];\n                            if (!token) return null;\n                            return (\n                              <View \n                                key={item.position}\n                                style={[\n                                  styles.infoCard,\n                                  { marginBottom: 5 },\n                                  index === currentTurn && { backgroundColor: THEME.accent + '40' }\n                                ]}\n                              >\n                                <Text style={styles.infoValue}>{token.name}</Text>\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                                  <Text style={styles.infoLabel}>Initiative: {item.initiative}</Text>\n                                  <Text style={styles.infoLabel}>HP: {token.hp}/{token.maxHp}</Text>\n                                </View>\n                              </View>\n                            );\n                          })}\n                        </ScrollView>\n                      </>\n                    )}\n                  </View>\n\n                  {/* Character Tools Panel */}\n                  {selectedCharacter && (\n                    <View style={styles.infoPanel}>\n                      <Text style={styles.infoPanelTitle}>Character Tools</Text>\n                      <View style={{ gap: 15 }}>\n                        <ResourceTracker\n                          character={selectedCharacter}\n                          onUpdate={async (updatedCharacter) => {\n                            try {\n                              if (!updatedCharacter) {\n                                throw new Error('No character data to save');\n                              }\n\n                              const newCharacters = characters.map(char => \n                                char.name === selectedCharacter.name ? updatedCharacter : char\n                              );\n\n                              setCharacters(newCharacters);\n                              await savePlayerData(newCharacters);\n\n                            } catch (error) {\n                              console.error('Error saving character:', error);\n                              Alert.alert('Error', 'Failed to save character');\n                            }\n                          }}\n                        />\n                        \n                        <PinnedNotes\n                          character={selectedCharacter}\n                          onUpdate={async (updatedCharacter) => {\n                            try {\n                              if (!updatedCharacter) {\n                                throw new Error('No character data to save');\n                              }\n\n                              const newCharacters = characters.map(char => \n                                char.name === selectedCharacter.name ? updatedCharacter : char\n                              );\n\n                              setCharacters(newCharacters);\n                              await savePlayerData(newCharacters);\n\n                            } catch (error) {\n                              console.error('Error saving character:', error);\n                              Alert.alert('Error', 'Failed to save character');\n                            }\n                          }}\n                        />\n                        \n                        <QuickRules />\n                      </View>\n                    </View>\n                  )}\n                </View>\n              </View>\n            </ScrollView>\n          </>\n        )}\n      </View>\n      <DeleteCharacterModal\n        visible={showDeleteModal}\n        character={selectedCharacter}\n        onClose={() => setShowDeleteModal(false)}\n        onConfirm={handleDeleteCharacter}\n      />\n      <EnemySelectModal\n        visible={showEnemySelect}\n        onClose={() => {\n          setShowEnemySelect(false);\n          setSelectedPosition(null);\n        }}\n        onSelect={handleEnemySelect}\n      />\n      <ColorWheelModal\n        visible={showColorWheel}\n        onClose={() => setShowColorWheel(false)}\n        onSelectColor={setCurrentColor}\n        initialColor={currentColor}\n      />\n    </SafeAreaView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}