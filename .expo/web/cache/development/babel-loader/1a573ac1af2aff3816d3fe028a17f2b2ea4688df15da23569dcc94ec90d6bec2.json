{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, get, off } from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from \"./components/DiceModel\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\nvar app = initializeApp(firebaseConfig);\nvar database = getDatabase(app);\nvar LETTERS = Array.from({\n  length: 26\n}, function (_, i) {\n  return String.fromCharCode(65 + i);\n});\nvar COLORS = ['#4527A0', '#4A90E2', '#7C4DFF', '#00BFA5', '#3F51B5', '#673AB7', '#2196F3', '#B39DDB'];\nvar GRID_SIZE = 10;\nvar ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nvar SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nvar CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nvar DICE_TYPES = [{\n  sides: 4,\n  color: '#FF6B6B'\n}, {\n  sides: 6,\n  color: '#4ECDC4'\n}, {\n  sides: 8,\n  color: '#45B7D1'\n}, {\n  sides: 10,\n  color: '#96CEB4'\n}, {\n  sides: 12,\n  color: '#FFEEAD'\n}, {\n  sides: 20,\n  color: '#D4A5A5'\n}, {\n  sides: 100,\n  color: '#9B59B6'\n}];\nvar STATUS_EFFECTS = [{\n  id: 'blinded',\n  name: 'Blinded',\n  icon: '👁️'\n}, {\n  id: 'charmed',\n  name: 'Charmed',\n  icon: '💕'\n}, {\n  id: 'deafened',\n  name: 'Deafened',\n  icon: '👂'\n}, {\n  id: 'frightened',\n  name: 'Frightened',\n  icon: '😨'\n}, {\n  id: 'grappled',\n  name: 'Grappled',\n  icon: '🤼'\n}, {\n  id: 'incapacitated',\n  name: 'Incapacitated',\n  icon: '💫'\n}, {\n  id: 'invisible',\n  name: 'Invisible',\n  icon: '👻'\n}, {\n  id: 'paralyzed',\n  name: 'Paralyzed',\n  icon: '⚡'\n}, {\n  id: 'petrified',\n  name: 'Petrified',\n  icon: '🗿'\n}, {\n  id: 'poisoned',\n  name: 'Poisoned',\n  icon: '🤢'\n}, {\n  id: 'prone',\n  name: 'Prone',\n  icon: '⬇️'\n}, {\n  id: 'restrained',\n  name: 'Restrained',\n  icon: '⛓️'\n}, {\n  id: 'stunned',\n  name: 'Stunned',\n  icon: '💫'\n}, {\n  id: 'unconscious',\n  name: 'Unconscious',\n  icon: '💤'\n}];\nvar COMMON_ENEMIES = [{\n  name: 'Bandit',\n  hp: 11,\n  maxHp: 11,\n  ac: 12,\n  initiativeBonus: 1,\n  color: '#8B4513'\n}, {\n  name: 'Wolf',\n  hp: 11,\n  maxHp: 11,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#808080'\n}, {\n  name: 'Wraith',\n  hp: 67,\n  maxHp: 67,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#4A0404'\n}, {\n  name: 'Goblin',\n  hp: 7,\n  maxHp: 7,\n  ac: 15,\n  initiativeBonus: 2,\n  color: '#355E3B'\n}, {\n  name: 'Skeleton',\n  hp: 13,\n  maxHp: 13,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#E1D9D1'\n}, {\n  name: 'Zombie',\n  hp: 22,\n  maxHp: 22,\n  ac: 8,\n  initiativeBonus: -2,\n  color: '#4A412A'\n}];\nvar windowDimensions = Dimensions.get('window');\nvar isSmallScreen = windowDimensions.width < 768;\nvar THEME = {\n  primary: '#2E1F5E',\n  secondary: '#4527A0',\n  accent: '#4A90E2',\n  gold: '#7C4DFF',\n  danger: '#FF5252',\n  success: '#00BFA5',\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1A103C',\n    secondary: '#2E1F5E',\n    dark: '#150D30',\n    panel: '#3F2B85'\n  }\n};\nvar initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true\n  },\n  partyLoot: {\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  campaignStory: {\n    text: '',\n    lastUpdate: null,\n    updatedBy: null\n  },\n  lastUpdate: Date.now()\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%'\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%'\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start'\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1,\n    width: '100%'\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%'\n  },\n  leftSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 2 : 0\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%',\n    order: isSmallScreen ? 1 : 1\n  },\n  rightSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 3 : 2\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%'\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center'\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40'\n  },\n  diceResult: {\n    color: THEME.text.light\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%'\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent\n  },\n  initiativeText: {\n    color: THEME.text.light\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold'\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none'\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center'\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent\n  },\n  quickActions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    padding: 15,\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    marginBottom: 15\n  },\n  quickActionButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 100,\n    flex: 1\n  },\n  quickActionText: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  infoPanel: {\n    backgroundColor: THEME.background.panel,\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15\n  },\n  infoPanelTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  infoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  infoCard: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    flex: 1,\n    minWidth: 150\n  },\n  infoLabel: {\n    color: THEME.accent,\n    fontSize: 12,\n    marginBottom: 5\n  },\n  infoValue: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  statBadge: {\n    backgroundColor: THEME.accent + '20',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n    alignSelf: 'flex-start'\n  },\n  statBadgeText: {\n    color: THEME.accent,\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  divider: {\n    height: 1,\n    backgroundColor: THEME.accent + '40',\n    marginVertical: 15\n  }\n});\nvar additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%'\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  sheetSection: {\n    marginBottom: 20\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold'\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5\n  },\n  abilityMod: {\n    color: THEME.text.light\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center'\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4\n  },\n  enemyOption: {\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 8,\n    backgroundColor: THEME.background.secondary\n  },\n  dmToggle: {\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginLeft: 10\n  },\n  dmToggleActive: {\n    backgroundColor: THEME.accent\n  }\n});\nvar diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: '0px 2px 3.84px rgba(0, 0, 0, 0.25)'\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold'\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center'\n  },\n  controlActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200\n  },\n  historyScroll: {\n    padding: 10\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary\n  },\n  historyLeft: {\n    flex: 1\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  diceControls: {\n    flexDirection: 'column',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  diceContainer: {\n    width: isSmallScreen ? 80 : 100,\n    height: isSmallScreen ? 80 : 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginBottom: 5\n  }\n});\nvar statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80\n  },\n  effectActive: {\n    backgroundColor: THEME.accent\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12\n  }\n});\nvar saveGameState = function () {\n  var _ref = _asyncToGenerator(function* () {\n    if (firebaseRef.current) {\n      try {\n        yield set(firebaseRef.current, {\n          tokens: tokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          characters: characters,\n          settings: initialGameState.settings,\n          lastUpdate: Date.now()\n        });\n      } catch (error) {\n        console.error('Error saving game state:', error);\n        Alert.alert('Error', 'Failed to save game state');\n      }\n    }\n  });\n  return function saveGameState() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar CharacterSheetModal = memo(function (_ref2) {\n  var visible = _ref2.visible,\n    onClose = _ref2.onClose,\n    character = _ref2.character,\n    characters = _ref2.characters,\n    onUpdate = _ref2.onUpdate;\n  var _useState = useState(function () {\n      return {\n        name: (character == null ? void 0 : character.name) || '',\n        class: (character == null ? void 0 : character.class) || '',\n        level: (character == null ? void 0 : character.level) || 1,\n        owner: (character == null ? void 0 : character.owner) || '',\n        proficiencyBonus: (character == null ? void 0 : character.proficiencyBonus) || 2,\n        hp: (character == null ? void 0 : character.hp) || 0,\n        maxHp: (character == null ? void 0 : character.maxHp) || 0,\n        ac: (character == null ? void 0 : character.ac) || 10,\n        abilityScores: (character == null ? void 0 : character.abilityScores) || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: (character == null ? void 0 : character.proficientSkills) || [],\n        currency: (character == null ? void 0 : character.currency) || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: (character == null ? void 0 : character.items) || [],\n        inventory: (character == null ? void 0 : character.inventory) || []\n      };\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    editedCharacter = _useState2[0],\n    setEditedCharacter = _useState2[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        hp: character.hp || 0,\n        maxHp: character.maxHp || 0,\n        ac: character.ac || 10,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var handleAbilityScoreChange = function handleAbilityScoreChange(ability, value) {\n    var newScore = parseInt(value) || 0;\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        abilityScores: _objectSpread(_objectSpread({}, prev.abilityScores), {}, _defineProperty({}, ability, newScore))\n      });\n    });\n  };\n  var toggleProficiency = function toggleProficiency(skill) {\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        proficientSkills: prev.proficientSkills.includes(skill) ? prev.proficientSkills.filter(function (s) {\n          return s !== skill;\n        }) : [].concat(_toConsumableArray(prev.proficientSkills), [skill])\n      });\n    });\n  };\n  var getSkillModifier = function getSkillModifier(skill, ability) {\n    var abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    var profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n  var handleSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var updatedCharacter = _objectSpread(_objectSpread({}, character), editedCharacter);\n        onUpdate(updatedCharacter);\n      } catch (error) {\n        console.error('Error saving character:', error);\n        Alert.alert('Error', 'Failed to save character');\n      }\n    });\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(GestureScrollView, {\n          children: [_jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Character Info\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: editedCharacter.name,\n              onChangeText: function onChangeText(text) {\n                return setEditedCharacter(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Character Name\",\n              placeholderTextColor: THEME.text.light + '80'\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10\n              },\n              children: [_jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: editedCharacter.class,\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      class: text\n                    });\n                  });\n                },\n                placeholder: \"Class\",\n                placeholderTextColor: THEME.text.light + '80'\n              }), _jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: String(editedCharacter.level),\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      level: parseInt(text) || 1\n                    });\n                  });\n                },\n                placeholder: \"Level\",\n                keyboardType: \"numeric\",\n                placeholderTextColor: THEME.text.light + '80'\n              })]\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginTop: 10\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flex: 2\n                },\n                children: [_jsx(Text, {\n                  style: [styles.buttonText, {\n                    marginBottom: 5\n                  }],\n                  children: \"Hit Points\"\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    gap: 5\n                  },\n                  children: [_jsx(TextInput, {\n                    style: [styles.input, {\n                      flex: 1\n                    }],\n                    value: String(editedCharacter.hp),\n                    onChangeText: function onChangeText(text) {\n                      return setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          hp: parseInt(text) || 0\n                        });\n                      });\n                    },\n                    placeholder: \"Current HP\",\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(Text, {\n                    style: {\n                      color: THEME.text.light,\n                      alignSelf: 'center',\n                      fontSize: 18\n                    },\n                    children: \"/\"\n                  }), _jsx(TextInput, {\n                    style: [styles.input, {\n                      flex: 1\n                    }],\n                    value: String(editedCharacter.maxHp),\n                    onChangeText: function onChangeText(text) {\n                      return setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          maxHp: parseInt(text) || 0\n                        });\n                      });\n                    },\n                    placeholder: \"Max HP\",\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flex: 1\n                },\n                children: [_jsx(Text, {\n                  style: [styles.buttonText, {\n                    marginBottom: 5\n                  }],\n                  children: \"Armor Class\"\n                }), _jsx(TextInput, {\n                  style: styles.input,\n                  value: String(editedCharacter.ac),\n                  onChangeText: function onChangeText(text) {\n                    return setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        ac: parseInt(text) || 10\n                      });\n                    });\n                  },\n                  placeholder: \"AC\",\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              })]\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Ability Scores\"\n            }), _jsx(View, {\n              style: additionalStyles.abilityScores,\n              children: ABILITY_SCORES.map(function (ability) {\n                return _jsxs(View, {\n                  style: additionalStyles.abilityBox,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.abilityLabel,\n                    children: ability\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.abilityScore,\n                    value: String(editedCharacter.abilityScores[ability]),\n                    onChangeText: function onChangeText(text) {\n                      return handleAbilityScoreChange(ability, text);\n                    },\n                    keyboardType: \"numeric\",\n                    maxLength: 2,\n                    selectTextOnFocus: true\n                  }), _jsxs(Text, {\n                    style: additionalStyles.abilityMod,\n                    children: [calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : '', calculateModifier(editedCharacter.abilityScores[ability])]\n                  })]\n                }, ability);\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Skills\"\n            }), _jsx(View, {\n              style: additionalStyles.skillsList,\n              children: Object.entries(SKILLS).map(function (_ref4) {\n                var _ref5 = _slicedToArray(_ref4, 2),\n                  ability = _ref5[0],\n                  skills = _ref5[1];\n                return skills.map(function (skill) {\n                  return _jsxs(TouchableOpacity, {\n                    style: additionalStyles.skillItem,\n                    onPress: function onPress() {\n                      return toggleProficiency(skill);\n                    },\n                    children: [_jsx(View, {\n                      style: [additionalStyles.proficientDot, {\n                        backgroundColor: editedCharacter.proficientSkills.includes(skill) ? THEME.accent : THEME.background.secondary\n                      }]\n                    }), _jsx(Text, {\n                      style: additionalStyles.skillName,\n                      children: skill\n                    }), _jsxs(Text, {\n                      style: additionalStyles.skillMod,\n                      children: [getSkillModifier(skill, ability) >= 0 ? '+' : '', getSkillModifier(skill, ability)]\n                    })]\n                  }, skill);\n                });\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Inventory\"\n            }), _jsx(View, {\n              style: additionalStyles.lootSection,\n              children: CURRENCY.map(function (currency) {\n                return _jsxs(View, {\n                  style: additionalStyles.currencyRow,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.currencyLabel,\n                    children: currency\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.currencyInput,\n                    value: String(editedCharacter.currency[currency] || 0),\n                    onChangeText: function onChangeText(text) {\n                      var value = parseInt(text) || 0;\n                      setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                }, currency);\n              })\n            }), _jsxs(View, {\n              style: additionalStyles.lootSection,\n              children: [_jsxs(View, {\n                style: additionalStyles.lootHeader,\n                children: [_jsx(Text, {\n                  style: additionalStyles.sectionTitle,\n                  children: \"Items\"\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.addButton,\n                  onPress: function onPress() {\n                    setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: [].concat(_toConsumableArray(prev.items), [{\n                          name: '',\n                          quantity: 1,\n                          notes: '',\n                          addedBy: character.name\n                        }])\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"Add Item\"\n                  })\n                })]\n              }), editedCharacter.items.map(function (item, index) {\n                return _jsxs(View, {\n                  style: additionalStyles.itemRow,\n                  children: [_jsxs(View, {\n                    style: additionalStyles.itemInfo,\n                    children: [_jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        flex: 2\n                      }],\n                      value: item.name,\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          name: text\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      placeholder: \"Item name\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), _jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        width: 60\n                      }],\n                      value: String(item.quantity),\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          quantity: parseInt(text) || 1\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      keyboardType: \"numeric\",\n                      placeholder: \"Qty\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                      style: additionalStyles.removeButton,\n                      onPress: function onPress() {\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: prev.items.filter(function (_, i) {\n                              return i !== index;\n                            })\n                          });\n                        });\n                      },\n                      children: _jsx(Text, {\n                        style: styles.buttonText,\n                        children: \"\\xD7\"\n                      })\n                    })]\n                  }), _jsxs(Text, {\n                    style: additionalStyles.addedBy,\n                    children: [\"Added by: \", item.addedBy]\n                  })]\n                }, index);\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.success\n              }],\n              onPress: handleSave,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Save Changes\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n});\nvar TokenModal = memo(function (_ref6) {\n  var showTokenModal = _ref6.showTokenModal,\n    setShowTokenModal = _ref6.setShowTokenModal,\n    selectedToken = _ref6.selectedToken,\n    setSelectedToken = _ref6.setSelectedToken,\n    tokens = _ref6.tokens,\n    firebaseRef = _ref6.firebaseRef,\n    initialGameState = _ref6.initialGameState,\n    layers = _ref6.layers,\n    initiative = _ref6.initiative,\n    inCombat = _ref6.inCombat,\n    currentTurn = _ref6.currentTurn,\n    THEME = _ref6.THEME;\n  return _jsx(Modal, {\n    visible: showTokenModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {\n      return setShowTokenModal(false);\n    },\n    children: _jsx(Pressable, {\n      style: [styles.modalOverlay, {\n        cursor: 'default'\n      }],\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      },\n      children: _jsx(View, {\n        style: styles.modalContent,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.select({\n            ios: 'padding',\n            android: 'height'\n          }),\n          style: styles.modalContainer,\n          keyboardVerticalOffset: Platform.select({\n            ios: 64,\n            android: 0\n          }),\n          children: _jsxs(Pressable, {\n            onPress: function onPress(e) {\n              return e.stopPropagation();\n            },\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Edit Token\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: selectedToken == null ? void 0 : selectedToken.name,\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Token Name\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              spellCheck: false,\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginBottom: 10\n              },\n              children: [_jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.hp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var hp = parseInt(text) || 0;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        hp: Math.max(0, hp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Current HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.maxHp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var maxHp = parseInt(text) || 1;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        maxHp: Math.max(1, maxHp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Max HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              })]\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: String((selectedToken == null ? void 0 : selectedToken.initiativeBonus) || '0'),\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    initiativeBonus: parseInt(text) || 0\n                  });\n                });\n              },\n              keyboardType: \"numeric\",\n              placeholder: \"Initiative Bonus\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: statusStyles.effectsContainer,\n              children: [_jsx(Text, {\n                style: statusStyles.effectsTitle,\n                children: \"Status Effects\"\n              }), _jsx(View, {\n                style: statusStyles.effectsGrid,\n                children: STATUS_EFFECTS.map(function (effect) {\n                  var _selectedToken$effect;\n                  return _jsx(TouchableOpacity, {\n                    style: [statusStyles.effectButton, (selectedToken == null ? void 0 : (_selectedToken$effect = selectedToken.effects) == null ? void 0 : _selectedToken$effect.includes(effect.id)) && statusStyles.effectActive],\n                    onPress: function onPress() {\n                      setSelectedToken(function (prev) {\n                        var currentEffects = prev.effects || [];\n                        var newEffects = currentEffects.includes(effect.id) ? currentEffects.filter(function (e) {\n                          return e !== effect.id;\n                        }) : [].concat(_toConsumableArray(currentEffects), [effect.id]);\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          effects: newEffects\n                        });\n                      });\n                    },\n                    children: _jsxs(Text, {\n                      style: statusStyles.effectText,\n                      children: [effect.icon, \" \", effect.name]\n                    })\n                  }, effect.id);\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.modalButtons,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    var newTokens = _objectSpread({}, tokens);\n                    delete newTokens[selectedToken.position];\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: newTokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: inCombat,\n                      currentTurn: currentTurn\n                    }));\n                    setShowTokenModal(false);\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Delete\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    var newTokens = _objectSpread(_objectSpread({}, tokens), {}, _defineProperty({}, selectedToken.position, selectedToken));\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: newTokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: inCombat,\n                      currentTurn: currentTurn\n                    }));\n                    setShowTokenModal(false);\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Save\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n});\nvar modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001\n  }\n});\nvar RoomModal = memo(function (_ref7) {\n  var showRoomModal = _ref7.showRoomModal,\n    setShowRoomModal = _ref7.setShowRoomModal,\n    isConnected = _ref7.isConnected,\n    roomCode = _ref7.roomCode,\n    setRoomCode = _ref7.setRoomCode,\n    isJoining = _ref7.isJoining,\n    connectToRoom = _ref7.connectToRoom;\n  return _jsx(Modal, {\n    visible: showRoomModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    style: {\n      zIndex: 999\n    },\n    children: _jsx(View, {\n      style: [modalStyles.modalOverlay, {\n        pointerEvents: 'auto'\n      }],\n      children: _jsxs(View, {\n        style: modalStyles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Join Room\"\n        }), _jsx(TextInput, {\n          style: [styles.input, {\n            marginBottom: 15,\n            zIndex: 1002\n          }],\n          value: roomCode,\n          onChangeText: function onChangeText(text) {\n            setRoomCode(text.trim().toLowerCase());\n          },\n          placeholder: \"Enter room code...\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          editable: !isJoining,\n          autoFocus: true,\n          blurOnSubmit: false\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n            width: '100%',\n            zIndex: 1002\n          }],\n          onPress: function onPress() {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          },\n          disabled: isJoining,\n          children: isJoining ? _jsxs(View, {\n            style: styles.loadingButtonContent,\n            children: [_jsx(ActivityIndicator, {\n              color: THEME.text.light\n            }), _jsx(Text, {\n              style: [styles.buttonText, {\n                marginLeft: 10\n              }],\n              children: \"Connecting...\"\n            })]\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Join Room\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar PartyLootModal = memo(function (_ref8) {\n  var visible = _ref8.visible,\n    onClose = _ref8.onClose,\n    partyLoot = _ref8.partyLoot,\n    onUpdate = _ref8.onUpdate,\n    playerName = _ref8.playerName;\n  var _useState3 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: []\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editedLoot = _useState4[0],\n    setEditedLoot = _useState4[1];\n  useEffect(function () {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: [styles.modalContent, {\n          maxHeight: '90%'\n        }],\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Party Loot\"\n        }), _jsxs(ScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (type) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: type\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedLoot.currency[type] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, type, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, type);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedLoot(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      items: [].concat(_toConsumableArray(prev.items), [{\n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedLoot.items.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    flex: 2\n                  }],\n                  value: item.name,\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      name: text\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  placeholder: \"Item name\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    width: 60\n                  }],\n                  value: String(item.quantity),\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      quantity: parseInt(text) || 1\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Qty\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.removeButton,\n                  onPress: function onPress() {\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: prev.items.filter(function (_, i) {\n                          return i !== index;\n                        })\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"\\xD7\"\n                  })\n                })]\n              }, item.id || index);\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonRow,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, styles.closeButton],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(editedLoot);\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar GridZoomControls = memo(function (_ref9) {\n  var zoomLevel = _ref9.zoomLevel,\n    setZoomLevel = _ref9.setZoomLevel;\n  var debouncedZoom = debounce(function (newZoom) {\n    setZoomLevel(newZoom);\n  }, 100);\n  return _jsxs(View, {\n    style: styles.zoomControls,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.max(0.5, zoomLevel - 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"-\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.min(2, zoomLevel + 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"+\"\n      })\n    })]\n  });\n});\nvar InventoryModal = memo(function (_ref10) {\n  var visible = _ref10.visible,\n    onClose = _ref10.onClose,\n    character = _ref10.character,\n    onUpdate = _ref10.onUpdate;\n  var _useState5 = useState({\n      currency: (character == null ? void 0 : character.currency) || {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      inventory: (character == null ? void 0 : character.inventory) || []\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editedInventory = _useState6[0],\n    setEditedInventory = _useState6[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!visible || !character) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(Text, {\n          style: additionalStyles.sectionTitle,\n          children: [character.name, \"'s Inventory\"]\n        }), _jsxs(GestureScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (currency) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: currency\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedInventory.currency[currency] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedInventory(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, currency);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedInventory(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      inventory: [].concat(_toConsumableArray(prev.inventory), [{\n                        name: '',\n                        quantity: 1,\n                        notes: '',\n                        addedBy: character.name\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedInventory.inventory.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsxs(View, {\n                  style: additionalStyles.itemInfo,\n                  children: [_jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      flex: 2\n                    }],\n                    value: item.name,\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        name: text\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    placeholder: \"Item name\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      width: 60\n                    }],\n                    value: String(item.quantity),\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        quantity: parseInt(text) || 1\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholder: \"Qty\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                    style: additionalStyles.removeButton,\n                    onPress: function onPress() {\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: prev.inventory.filter(function (_, i) {\n                            return i !== index;\n                          })\n                        });\n                      });\n                    },\n                    children: _jsx(Text, {\n                      style: styles.buttonText,\n                      children: \"\\xD7\"\n                    })\n                  })]\n                }), _jsxs(Text, {\n                  style: additionalStyles.addedBy,\n                  children: [\"Added by: \", item.addedBy]\n                })]\n              }, index);\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n                currency: editedInventory.currency,\n                inventory: editedInventory.inventory\n              }));\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar PlayerNameModal = memo(function (_ref11) {\n  var visible = _ref11.visible,\n    onSubmit = _ref11.onSubmit;\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    name = _useState8[0],\n    setName = _useState8[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Enter Your Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: setName,\n          placeholder: \"Your name\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"words\"\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.success,\n            width: '100%',\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            return onSubmit(name);\n          },\n          disabled: !name.trim(),\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Continue\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2\n  }\n});\nvar calculateModifier = function calculateModifier(score) {\n  return Math.floor((score - 10) / 2);\n};\nvar DiceResultModal = memo(function (_ref12) {\n  var visible = _ref12.visible,\n    result = _ref12.result,\n    onClose = _ref12.onClose;\n  useEffect(function () {\n    if (visible) {\n      var timer = setTimeout(onClose, 2000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [visible, onClose]);\n  if (!visible || !result) return null;\n  return _jsx(View, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 9999,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    children: _jsxs(View, {\n      style: {\n        backgroundColor: THEME.background.panel + 'E6',\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        minWidth: 200,\n        maxWidth: '90%',\n        shadowColor: '#000',\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n      },\n      children: [_jsxs(Text, {\n        style: {\n          color: THEME.text.light,\n          fontSize: 18,\n          marginBottom: 5\n        },\n        children: [result.dice, \" \", result.rollType !== 'normal' ? \"(\" + result.rollType + \")\" : '']\n      }), _jsx(Text, {\n        style: {\n          color: THEME.accent,\n          fontSize: 32,\n          fontWeight: 'bold',\n          marginBottom: 5\n        },\n        children: result.total\n      }), _jsxs(Text, {\n        style: {\n          color: THEME.text.light + '80',\n          fontSize: 14\n        },\n        children: [\"Rolls: [\", result.rolls.join(', '), \"]\", result.modifier !== 0 && \" + \" + result.modifier]\n      })]\n    })\n  });\n});\nvar DeleteCharacterModal = memo(function (_ref13) {\n  var visible = _ref13.visible,\n    character = _ref13.character,\n    onClose = _ref13.onClose,\n    onConfirm = _ref13.onConfirm;\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmName = _useState10[0],\n    setConfirmName = _useState10[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Delete Character\"\n        }), _jsxs(Text, {\n          style: [styles.buttonText, {\n            marginBottom: 10,\n            textAlign: 'center'\n          }],\n          children: [\"Type \\\"\", character == null ? void 0 : character.name, \"\\\" to confirm deletion\"]\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: confirmName,\n          onChangeText: setConfirmName,\n          placeholder: \"Character name\",\n          placeholderTextColor: THEME.text.light + '80'\n        }), _jsxs(View, {\n          style: [styles.modalButtons, {\n            marginTop: 15\n          }],\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.background.secondary\n            }],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: confirmName === (character == null ? void 0 : character.name) ? THEME.danger : THEME.background.secondary,\n              opacity: confirmName === (character == null ? void 0 : character.name) ? 1 : 0.5\n            }],\n            onPress: function onPress() {\n              if (confirmName === (character == null ? void 0 : character.name)) {\n                onConfirm();\n              }\n            },\n            disabled: confirmName !== (character == null ? void 0 : character.name),\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Delete\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar EnemySelectModal = memo(function (_ref14) {\n  var visible = _ref14.visible,\n    onClose = _ref14.onClose,\n    onSelect = _ref14.onSelect;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Select Enemy\"\n        }), _jsx(ScrollView, {\n          style: {\n            maxHeight: 300\n          },\n          children: COMMON_ENEMIES.map(function (enemy, index) {\n            return _jsxs(TouchableOpacity, {\n              style: [styles.enemyOption, {\n                backgroundColor: THEME.background.secondary\n              }],\n              onPress: function onPress() {\n                return onSelect(enemy);\n              },\n              children: [_jsx(Text, {\n                style: styles.buttonText,\n                children: enemy.name\n              }), _jsxs(Text, {\n                style: [styles.buttonText, {\n                  opacity: 0.7,\n                  fontSize: 12\n                }],\n                children: [\"HP: \", enemy.hp, \" \\u2022 AC: \", enemy.ac]\n              })]\n            }, index);\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.background.secondary,\n            marginTop: 10\n          }],\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Cancel\"\n          })\n        })]\n      })\n    })\n  });\n});\nexport default function App() {\n  var _initialGameState$cam, _tokens$initiative$cu, _initiative$currentTu2, _initiative$currentTu3;\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    roomCode = _useState12[0],\n    setRoomCode = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isConnected = _useState14[0],\n    setIsConnected = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isLoading = _useState16[0],\n    setIsLoading = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isJoining = _useState18[0],\n    setIsJoining = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isUpdating = _useState20[0],\n    setIsUpdating = _useState20[1];\n  var _useState21 = useState(true),\n    _useState22 = _slicedToArray(_useState21, 2),\n    showRoomModal = _useState22[0],\n    setShowRoomModal = _useState22[1];\n  var _useState23 = useState(true),\n    _useState24 = _slicedToArray(_useState23, 2),\n    isDarkMode = _useState24[0],\n    setIsDarkMode = _useState24[1];\n  var _useState25 = useState(isSmallScreen ? 0.8 : 1),\n    _useState26 = _slicedToArray(_useState25, 2),\n    zoomLevel = _useState26[0],\n    setZoomLevel = _useState26[1];\n  var _useState27 = useState({}),\n    _useState28 = _slicedToArray(_useState27, 2),\n    tokens = _useState28[0],\n    setTokens = _useState28[1];\n  var _useState29 = useState(COLORS[0]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    currentColor = _useState30[0],\n    setCurrentColor = _useState30[1];\n  var _useState31 = useState([]),\n    _useState32 = _slicedToArray(_useState31, 2),\n    initiative = _useState32[0],\n    setInitiative = _useState32[1];\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    inCombat = _useState34[0],\n    setInCombat = _useState34[1];\n  var _useState35 = useState(0),\n    _useState36 = _slicedToArray(_useState35, 2),\n    currentTurn = _useState36[0],\n    setCurrentTurn = _useState36[1];\n  var _useState37 = useState(initialGameState.layers),\n    _useState38 = _slicedToArray(_useState37, 2),\n    layers = _useState38[0],\n    setLayers = _useState38[1];\n  var _useState39 = useState([]),\n    _useState40 = _slicedToArray(_useState39, 2),\n    diceHistory = _useState40[0],\n    setDiceHistory = _useState40[1];\n  var _useState41 = useState(false),\n    _useState42 = _slicedToArray(_useState41, 2),\n    advantage = _useState42[0],\n    setAdvantage = _useState42[1];\n  var _useState43 = useState(0),\n    _useState44 = _slicedToArray(_useState43, 2),\n    modifier = _useState44[0],\n    setModifier = _useState44[1];\n  var _useState45 = useState(null),\n    _useState46 = _slicedToArray(_useState45, 2),\n    selectedToken = _useState46[0],\n    setSelectedToken = _useState46[1];\n  var _useState47 = useState(false),\n    _useState48 = _slicedToArray(_useState47, 2),\n    showTokenModal = _useState48[0],\n    setShowTokenModal = _useState48[1];\n  var _useState49 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: [],\n      currentViewer: null\n    }),\n    _useState50 = _slicedToArray(_useState49, 2),\n    partyLoot = _useState50[0],\n    setPartyLoot = _useState50[1];\n  var _useState51 = useState(false),\n    _useState52 = _slicedToArray(_useState51, 2),\n    showPartyLoot = _useState52[0],\n    setShowPartyLoot = _useState52[1];\n  var _useState53 = useState(1),\n    _useState54 = _slicedToArray(_useState53, 2),\n    diceQuantity = _useState54[0],\n    setDiceQuantity = _useState54[1];\n  var _useState55 = useState([]),\n    _useState56 = _slicedToArray(_useState55, 2),\n    characters = _useState56[0],\n    setCharacters = _useState56[1];\n  var _useState57 = useState(false),\n    _useState58 = _slicedToArray(_useState57, 2),\n    showCharacterSheet = _useState58[0],\n    setShowCharacterSheet = _useState58[1];\n  var _useState59 = useState(null),\n    _useState60 = _slicedToArray(_useState59, 2),\n    selectedCharacter = _useState60[0],\n    setSelectedCharacter = _useState60[1];\n  var _useState61 = useState(false),\n    _useState62 = _slicedToArray(_useState61, 2),\n    showInventory = _useState62[0],\n    setShowInventory = _useState62[1];\n  var _useState63 = useState(''),\n    _useState64 = _slicedToArray(_useState63, 2),\n    playerName = _useState64[0],\n    setPlayerName = _useState64[1];\n  var _useState65 = useState(true),\n    _useState66 = _slicedToArray(_useState65, 2),\n    showPlayerNameModal = _useState66[0],\n    setShowPlayerNameModal = _useState66[1];\n  var _useState67 = useState('normal'),\n    _useState68 = _slicedToArray(_useState67, 2),\n    rollType = _useState68[0],\n    setRollType = _useState68[1];\n  var _useState69 = useState(null),\n    _useState70 = _slicedToArray(_useState69, 2),\n    diceResult = _useState70[0],\n    setDiceResult = _useState70[1];\n  var _useState71 = useState(false),\n    _useState72 = _slicedToArray(_useState71, 2),\n    showDiceResult = _useState72[0],\n    setShowDiceResult = _useState72[1];\n  var _useState73 = useState(false),\n    _useState74 = _slicedToArray(_useState73, 2),\n    showDeleteModal = _useState74[0],\n    setShowDeleteModal = _useState74[1];\n  var _useState75 = useState(false),\n    _useState76 = _slicedToArray(_useState75, 2),\n    isDM = _useState76[0],\n    setIsDM = _useState76[1];\n  var _useState77 = useState(false),\n    _useState78 = _slicedToArray(_useState77, 2),\n    showEnemySelect = _useState78[0],\n    setShowEnemySelect = _useState78[1];\n  var _useState79 = useState(null),\n    _useState80 = _slicedToArray(_useState79, 2),\n    selectedPosition = _useState80[0],\n    setSelectedPosition = _useState80[1];\n  var _useState81 = useState(''),\n    _useState82 = _slicedToArray(_useState81, 2),\n    storyText = _useState82[0],\n    setStoryText = _useState82[1];\n  var firebaseRef = useRef(null);\n  var unsubscribeRef = useRef(null);\n  var handleDisconnect = useCallback(function () {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n  var handleInitiativeRoll = useCallback(function () {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n    var rolls = Object.entries(tokens).map(function (_ref15) {\n      var _ref16 = _slicedToArray(_ref15, 2),\n        position = _ref16[0],\n        token = _ref16[1];\n      var roll = Math.floor(Math.random() * 20) + 1;\n      var initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position: position,\n        initiative: initiative,\n        details: token.name + \" (\" + initiative + \")\"\n      };\n    });\n    rolls.sort(function (a, b) {\n      return b.initiative - a.initiative;\n    });\n    if (firebaseRef.current) {\n      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n        tokens: tokens,\n        layers: layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      }));\n    }\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n  var rollDice = useCallback(function (sides) {\n    var allRolls = [];\n    for (var d = 0; d < diceQuantity; d++) {\n      var rolls = [];\n      var numRolls = rollType !== 'normal' ? 2 : 1;\n      for (var i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n      var finalRoll = rollType === 'advantage' ? Math.max.apply(Math, rolls) : rollType === 'disadvantage' ? Math.min.apply(Math, rolls) : rolls[0];\n      allRolls.push({\n        rolls: rolls,\n        total: finalRoll\n      });\n    }\n    var grandTotal = allRolls.reduce(function (sum, roll) {\n      return sum + roll.total;\n    }, 0) + modifier;\n    var newResult = {\n      dice: diceQuantity + \"d\" + sides,\n      rolls: allRolls.map(function (r) {\n        return r.rolls;\n      }).flat(),\n      individualTotals: allRolls.map(function (r) {\n        return r.total;\n      }),\n      modifier: modifier,\n      rollType: rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n    setDiceHistory(function (prev) {\n      return [newResult].concat(_toConsumableArray(prev.slice(0, 49)));\n    });\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n  var handleCellPress = useCallback(function () {\n    var _ref17 = _asyncToGenerator(function* (row, col) {\n      if (!firebaseRef.current) return;\n      try {\n        var position = row + \"-\" + col;\n        var newTokens = _objectSpread({}, tokens);\n        var snapshot = yield get(firebaseRef.current);\n        var currentRoomData = snapshot.val() || {};\n        if (tokens[position]) {\n          delete newTokens[position];\n        } else {\n          if (isDM) {\n            setSelectedPosition(position);\n            setShowEnemySelect(true);\n            return;\n          } else {\n            if (!selectedCharacter) {\n              Alert.alert('No Character Selected', 'Please select a character from your list first.');\n              return;\n            }\n            newTokens[position] = {\n              name: selectedCharacter.name,\n              color: currentColor,\n              hp: selectedCharacter.hp,\n              maxHp: selectedCharacter.maxHp,\n              ac: selectedCharacter.ac,\n              initiativeBonus: calculateModifier(selectedCharacter.abilityScores.DEX),\n              effects: [],\n              position: position,\n              owner: playerName\n            };\n          }\n        }\n        yield set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n          tokens: newTokens,\n          lastUpdate: Date.now()\n        }));\n        setTokens(newTokens);\n      } catch (error) {\n        console.error('Error updating tokens:', error);\n        Alert.alert('Error', 'Failed to update token');\n      }\n    });\n    return function (_x, _x2) {\n      return _ref17.apply(this, arguments);\n    };\n  }(), [tokens, currentColor, selectedCharacter, playerName, isDM]);\n  var savePlayerData = useCallback(function () {\n    var _ref18 = _asyncToGenerator(function* (updatedCharacters) {\n      if (!playerName || !roomCode) return;\n      try {\n        var roomPlayerRef = ref(database, \"rooms/\" + roomCode + \"/players/\" + playerName);\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerData = {\n          characters: updatedCharacters,\n          lastUpdate: Date.now()\n        };\n        yield Promise.all([set(roomPlayerRef, playerData), set(globalPlayerRef, playerData)]);\n      } catch (error) {\n        console.error('Error saving player data:', error);\n        Alert.alert('Error', 'Failed to save character data');\n      }\n    });\n    return function (_x3) {\n      return _ref18.apply(this, arguments);\n    };\n  }(), [playerName, roomCode]);\n  var connectToRoom = useCallback(function () {\n    var _ref19 = _asyncToGenerator(function* (code) {\n      if (!code.trim() || !playerName) {\n        Alert.alert(\"Error\", \"Please enter a room code and player name\");\n        return;\n      }\n      setIsJoining(true);\n      setIsLoading(true);\n      try {\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerSnapshot = yield get(globalPlayerRef);\n        if (playerSnapshot.exists()) {\n          var playerData = playerSnapshot.val();\n          setCharacters(playerData.characters || []);\n        }\n        var gameRef = ref(database, \"rooms/\" + code);\n        firebaseRef.current = gameRef;\n        var snapshot = yield get(gameRef);\n        if (!snapshot.exists()) {\n          yield set(gameRef, initialGameState);\n        }\n        var unsubscribe = onValue(gameRef, function (snapshot) {\n          var data = snapshot.val();\n          if (data) {\n            var _data$campaignStory;\n            setTokens(data.tokens || {});\n            setLayers(data.layers || initialGameState.layers);\n            setInitiative(data.initiative || []);\n            setInCombat(data.inCombat || false);\n            setCurrentTurn(data.currentTurn || 0);\n            setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n            setStoryText(((_data$campaignStory = data.campaignStory) == null ? void 0 : _data$campaignStory.text) || '');\n            if (data.players && data.players[playerName]) {\n              setCharacters(data.players[playerName].characters || []);\n            }\n          }\n        });\n        unsubscribeRef.current = unsubscribe;\n        setRoomCode(code);\n        setShowRoomModal(false);\n        setIsConnected(true);\n      } catch (error) {\n        console.error('Connection error:', error);\n        Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n        setIsConnected(false);\n      } finally {\n        setIsJoining(false);\n        setIsLoading(false);\n      }\n    });\n    return function (_x4) {\n      return _ref19.apply(this, arguments);\n    };\n  }(), [playerName]);\n  useEffect(function () {\n    var handleOffline = function handleOffline() {\n      Alert.alert('Connection Lost', 'Please check your internet connection', [{\n        text: 'OK'\n      }]);\n    };\n    window.addEventListener('offline', handleOffline);\n    return function () {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n  var layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%'\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    },\n    characterItem: {\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 5,\n      backgroundColor: THEME.background.secondary\n    },\n    characterInfo: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    },\n    characterDetails: {\n      color: THEME.text.light,\n      opacity: 0.8\n    }\n  };\n  var handleDeleteCharacter = useCallback(_asyncToGenerator(function* () {\n    if (!selectedCharacter) return;\n    try {\n      var newCharacters = characters.filter(function (char) {\n        return char.name !== selectedCharacter.name;\n      });\n      setCharacters(newCharacters);\n      yield savePlayerData(newCharacters);\n      setSelectedCharacter(null);\n      setShowDeleteModal(false);\n    } catch (error) {\n      console.error('Error deleting character:', error);\n      Alert.alert('Error', 'Failed to delete character');\n    }\n  }), [selectedCharacter, characters, savePlayerData]);\n  var handleEnemySelect = useCallback(function () {\n    var _ref21 = _asyncToGenerator(function* (enemy) {\n      if (!selectedPosition || !firebaseRef.current) return;\n      try {\n        var newTokens = _objectSpread({}, tokens);\n        newTokens[selectedPosition] = _objectSpread(_objectSpread({}, enemy), {}, {\n          position: selectedPosition,\n          effects: [],\n          owner: 'DM'\n        });\n        var snapshot = yield get(firebaseRef.current);\n        var currentRoomData = snapshot.val() || {};\n        yield set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n          tokens: newTokens,\n          lastUpdate: Date.now()\n        }));\n        setTokens(newTokens);\n        setShowEnemySelect(false);\n        setSelectedPosition(null);\n      } catch (error) {\n        console.error('Error adding enemy:', error);\n        Alert.alert('Error', 'Failed to add enemy');\n      }\n    });\n    return function (_x5) {\n      return _ref21.apply(this, arguments);\n    };\n  }(), [selectedPosition, tokens]);\n  return _jsxs(SafeAreaView, {\n    style: [styles.container, isDarkMode && styles.darkMode],\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TokenModal, {\n        showTokenModal: showTokenModal,\n        setShowTokenModal: setShowTokenModal,\n        selectedToken: selectedToken,\n        setSelectedToken: setSelectedToken,\n        tokens: tokens,\n        firebaseRef: firebaseRef,\n        initialGameState: initialGameState,\n        layers: layers,\n        initiative: initiative,\n        inCombat: inCombat,\n        currentTurn: currentTurn,\n        THEME: THEME\n      }), _jsx(RoomModal, {\n        showRoomModal: showRoomModal,\n        setShowRoomModal: setShowRoomModal,\n        isConnected: isConnected,\n        roomCode: roomCode,\n        setRoomCode: setRoomCode,\n        isJoining: isJoining,\n        connectToRoom: connectToRoom\n      }), _jsx(PlayerNameModal, {\n        visible: showPlayerNameModal && !playerName,\n        onSubmit: function onSubmit(name) {\n          setPlayerName(name);\n          setShowPlayerNameModal(false);\n          setIsConnected(true);\n        }\n      }), _jsx(DiceResultModal, {\n        visible: showDiceResult,\n        result: diceResult,\n        onClose: function onClose() {\n          return setShowDiceResult(false);\n        }\n      }), _jsx(PartyLootModal, {\n        visible: showPartyLoot,\n        onClose: function onClose() {\n          return setShowPartyLoot(false);\n        },\n        partyLoot: partyLoot,\n        playerName: playerName,\n        onUpdate: function onUpdate(updatedLoot) {\n          setPartyLoot(updatedLoot);\n          if (firebaseRef.current) {\n            set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n              tokens: tokens,\n              layers: layers,\n              initiative: initiative,\n              inCombat: inCombat,\n              currentTurn: currentTurn,\n              partyLoot: updatedLoot\n            }));\n          }\n        }\n      }), _jsx(CharacterSheetModal, {\n        visible: showCharacterSheet,\n        onClose: function onClose() {\n          return setShowCharacterSheet(false);\n        },\n        character: selectedCharacter || {\n          name: '',\n          class: '',\n          level: 1,\n          owner: playerName,\n          proficiencyBonus: 2,\n          hp: 0,\n          maxHp: 0,\n          ac: 10,\n          abilityScores: {\n            STR: 10,\n            DEX: 10,\n            CON: 10,\n            INT: 10,\n            WIS: 10,\n            CHA: 10\n          },\n          proficientSkills: [],\n          currency: {\n            CP: 0,\n            SP: 0,\n            EP: 0,\n            GP: 0,\n            PP: 0\n          },\n          items: [],\n          inventory: []\n        },\n        characters: characters,\n        onUpdate: (function () {\n          var _ref22 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n              var newCharacters = selectedCharacter ? characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              }) : [].concat(_toConsumableArray(characters), [updatedCharacter]);\n              setCharacters(newCharacters);\n              var playerRef = ref(database, \"players/\" + playerName);\n              yield set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n              if (firebaseRef.current) {\n                var roomSnapshot = yield get(firebaseRef.current);\n                var currentRoomData = roomSnapshot.val() || {};\n                yield set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                  tokens: tokens,\n                  layers: layers,\n                  initiative: initiative,\n                  inCombat: inCombat,\n                  currentTurn: currentTurn,\n                  partyLoot: partyLoot,\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                }));\n              }\n              setShowCharacterSheet(false);\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          });\n          return function (_x6) {\n            return _ref22.apply(this, arguments);\n          };\n        }())\n      }), _jsx(InventoryModal, {\n        visible: showInventory,\n        onClose: function onClose() {\n          return setShowInventory(false);\n        },\n        character: selectedCharacter,\n        onUpdate: (function () {\n          var _ref23 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              var newCharacters = characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              });\n              setCharacters(newCharacters);\n              yield savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          });\n          return function (_x7) {\n            return _ref23.apply(this, arguments);\n          };\n        }())\n      }), !isConnected ? _jsx(View, {\n        style: styles.loadingContainer,\n        children: isLoading ? _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(ActivityIndicator, {\n            size: \"large\",\n            color: THEME.accent\n          }), _jsx(Text, {\n            style: [styles.loadingText, {\n              marginTop: 20\n            }],\n            children: \"Connecting to room...\"\n          })]\n        }) : _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Enter a room code to begin\"\n        })\n      }) : _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"D&D Combat Tracker\"\n          }), _jsxs(ScrollView, {\n            horizontal: isSmallScreen,\n            showsHorizontalScrollIndicator: false,\n            contentContainerStyle: styles.controls,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: function onPress() {\n                return setShowRoomModal(true);\n              },\n              children: _jsxs(Text, {\n                style: styles.buttonText,\n                children: [\"Room: \", roomCode]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: handleInitiativeRoll,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Roll Initiative\"\n              })\n            }), inCombat && _jsxs(_Fragment, {\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  var nextTurn = (currentTurn + 1) % initiative.length;\n                  setCurrentTurn(nextTurn);\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: true,\n                      currentTurn: nextTurn\n                    }));\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Next Turn\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: [],\n                      inCombat: false,\n                      currentTurn: 0\n                    }));\n                  }\n                  setInitiative([]);\n                  setInCombat(false);\n                  setCurrentTurn(0);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"End Combat\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.danger\n              }],\n              onPress: function onPress() {\n                Alert.alert(\"Leave Room\", \"Are you sure you want to leave this room?\", [{\n                  text: \"Cancel\",\n                  style: \"cancel\"\n                }, {\n                  text: \"Leave\",\n                  style: \"destructive\",\n                  onPress: function onPress() {\n                    if (unsubscribeRef.current) {\n                      unsubscribeRef.current();\n                      unsubscribeRef.current = null;\n                    }\n                    if (firebaseRef.current) {\n                      off(firebaseRef.current);\n                      firebaseRef.current = null;\n                    }\n                    setIsConnected(false);\n                    setRoomCode('');\n                    setTokens({});\n                    setInitiative([]);\n                    setInCombat(false);\n                    setCurrentTurn(0);\n                    setPartyLoot(initialGameState.partyLoot);\n                    setShowRoomModal(true);\n                    setShowPlayerNameModal(true);\n                  }\n                }]);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Leave Room\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, isDM && styles.dmToggleActive],\n              onPress: function onPress() {\n                return setIsDM(!isDM);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"DM Mode\"\n              })\n            })]\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.content,\n          children: _jsxs(View, {\n            style: styles.mainArea,\n            children: [_jsxs(View, {\n              style: styles.leftSidebar,\n              children: [_jsxs(View, {\n                style: diceStyles.dicePanel,\n                children: [_jsx(Text, {\n                  style: diceStyles.diceTitle,\n                  children: \"Dice Roller\"\n                }), _jsxs(View, {\n                  style: diceStyles.diceControls,\n                  children: [_jsx(View, {\n                    style: diceStyles.controlsRow,\n                    children: _jsxs(View, {\n                      style: diceStyles.controlGroup,\n                      children: [_jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'advantage' && diceStyles.controlActive, rollType === 'advantage' && {\n                          backgroundColor: THEME.success\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'advantage' ? 'normal' : 'advantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Advantage\"\n                        })\n                      }), _jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'disadvantage' && diceStyles.controlActive, rollType === 'disadvantage' && {\n                          backgroundColor: THEME.danger\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'disadvantage' ? 'normal' : 'disadvantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Disadvantage\"\n                        })\n                      })]\n                    })\n                  }), _jsxs(View, {\n                    style: diceStyles.controlsRow,\n                    children: [_jsxs(View, {\n                      style: diceStyles.modifierGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.modifierLabel,\n                        children: \"Modifier\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.modifierInput,\n                        value: String(modifier),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 0;\n                          setModifier(num);\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    }), _jsxs(View, {\n                      style: diceStyles.quantityGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.quantityLabel,\n                        children: \"Quantity\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.quantityInput,\n                        value: String(diceQuantity),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 1;\n                          setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    })]\n                  })]\n                }), _jsx(View, {\n                  style: diceStyles.diceGrid,\n                  children: DICE_TYPES.map(function (_ref24) {\n                    var sides = _ref24.sides;\n                    return _jsx(TouchableOpacity, {\n                      style: [diceStyles.diceButton, {\n                        backgroundColor: THEME.background.secondary\n                      }],\n                      onPress: function onPress() {\n                        var rolls = [];\n                        for (var i = 0; i < diceQuantity; i++) {\n                          if (rollType !== 'normal') {\n                            var roll1 = Math.floor(Math.random() * sides) + 1;\n                            var roll2 = Math.floor(Math.random() * sides) + 1;\n                            rolls.push(rollType === 'advantage' ? Math.max(roll1, roll2) : Math.min(roll1, roll2));\n                          } else {\n                            rolls.push(Math.floor(Math.random() * sides) + 1);\n                          }\n                        }\n                        var total = rolls.reduce(function (sum, roll) {\n                          return sum + roll;\n                        }, 0) + modifier;\n                        var result = {\n                          dice: diceQuantity + \"d\" + sides,\n                          rolls: rolls,\n                          modifier: modifier,\n                          rollType: rollType,\n                          total: total\n                        };\n                        setDiceResult(result);\n                        setShowDiceResult(true);\n                        Vibration.vibrate(50);\n                      },\n                      children: _jsxs(Text, {\n                        style: diceStyles.diceButtonText,\n                        children: [\"d\", sides]\n                      })\n                    }, sides);\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.infoPanel,\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Player Tools\"\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll = Math.floor(Math.random() * 20) + 1;\n                      setDiceResult({\n                        dice: \"d20\",\n                        rolls: [roll],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: roll\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick d20\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll1 = Math.floor(Math.random() * 20) + 1;\n                      var roll2 = Math.floor(Math.random() * 20) + 1;\n                      var total = Math.max(roll1, roll2);\n                      setDiceResult({\n                        dice: \"d20 with advantage\",\n                        rolls: [roll1, roll2],\n                        modifier: 0,\n                        rollType: 'advantage',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Advantage\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var damage = Math.floor(Math.random() * 8) + 1;\n                      setDiceResult({\n                        dice: \"d8\",\n                        rolls: [damage],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: damage\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Damage\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll1 = Math.floor(Math.random() * 20) + 1;\n                      var roll2 = Math.floor(Math.random() * 20) + 1;\n                      var total = Math.min(roll1, roll2);\n                      setDiceResult({\n                        dice: \"d20 with disadvantage\",\n                        rolls: [roll1, roll2],\n                        modifier: 0,\n                        rollType: 'disadvantage',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Disadvantage\"\n                    })\n                  })]\n                }), _jsx(View, {\n                  style: styles.divider\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.accent\n                    }],\n                    onPress: function onPress() {\n                      var rolls = [Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1].sort(function (a, b) {\n                        return b - a;\n                      });\n                      rolls.pop();\n                      var total = rolls.reduce(function (sum, roll) {\n                        return sum + roll;\n                      }, 0);\n                      setDiceResult({\n                        dice: \"4d6 drop lowest\",\n                        rolls: rolls,\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Roll Ability Score\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.success\n                    }],\n                    onPress: function onPress() {\n                      var roll = Math.floor(Math.random() * 100) + 1;\n                      setDiceResult({\n                        dice: \"d100\",\n                        rolls: [roll],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: roll\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Percentile Roll\"\n                    })\n                  })]\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.gridSection,\n              children: [_jsx(ScrollView, {\n                horizontal: true,\n                contentContainerStyle: {\n                  minWidth: '100%'\n                },\n                children: _jsx(ScrollView, {\n                  children: _jsxs(View, {\n                    style: [styles.gridContainer, {\n                      transform: [{\n                        scale: zoomLevel\n                      }]\n                    }],\n                    children: [_jsx(View, {\n                      style: styles.colorPicker,\n                      children: COLORS.map(function (color) {\n                        return _jsx(TouchableOpacity, {\n                          style: [styles.colorButton, {\n                            backgroundColor: color\n                          }, color === currentColor && styles.selectedColor],\n                          onPress: function onPress() {\n                            return setCurrentColor(color);\n                          }\n                        }, color);\n                      })\n                    }), Array.from({\n                      length: GRID_SIZE\n                    }).map(function (_, row) {\n                      return _jsx(View, {\n                        style: styles.row,\n                        children: Array.from({\n                          length: GRID_SIZE\n                        }).map(function (_, col) {\n                          var _initiative$currentTu;\n                          var position = row + \"-\" + col;\n                          var token = tokens[position];\n                          var isCurrentTurn = inCombat && ((_initiative$currentTu = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu.position) === position;\n                          return _jsx(TouchableOpacity, {\n                            style: [styles.cell, token && {\n                              backgroundColor: token.color\n                            }, isCurrentTurn && styles.currentTurn],\n                            onPress: function onPress() {\n                              return handleCellPress(row, col);\n                            },\n                            onLongPress: function onLongPress() {\n                              if (token) {\n                                setSelectedToken(_objectSpread(_objectSpread({}, token), {}, {\n                                  position: position\n                                }));\n                                setShowTokenModal(true);\n                              }\n                            },\n                            children: token && _jsxs(View, {\n                              style: styles.tokenContent,\n                              children: [_jsx(Text, {\n                                style: [styles.tokenText, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                numberOfLines: 1,\n                                children: token.name\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [\"HP: \", token.hp, \"/\", token.maxHp]\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [\"AC: \", token.ac]\n                              }), token.effects && token.effects.length > 0 && _jsx(View, {\n                                style: statusStyles.tokenEffects,\n                                children: token.effects.map(function (effect) {\n                                  var statusEffect = STATUS_EFFECTS.find(function (e) {\n                                    return e.id === effect;\n                                  });\n                                  return statusEffect ? _jsx(Text, {\n                                    style: statusStyles.effectIcon,\n                                    children: statusEffect.icon\n                                  }, effect) : null;\n                                })\n                              })]\n                            })\n                          }, col);\n                        })\n                      }, row);\n                    })]\n                  })\n                })\n              }), _jsx(GridZoomControls, {\n                zoomLevel: zoomLevel,\n                setZoomLevel: setZoomLevel\n              }), _jsxs(View, {\n                style: [styles.infoPanel, {\n                  marginTop: 20\n                }],\n                children: [_jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: 10\n                  },\n                  children: [_jsx(Text, {\n                    style: styles.infoPanelTitle,\n                    children: \"Campaign Story\"\n                  }), isDM && _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.accent,\n                      width: 100\n                    }],\n                    onPress: function onPress() {\n                      if (firebaseRef.current) {\n                        get(firebaseRef.current).then(function (snapshot) {\n                          var currentRoomData = snapshot.val() || {};\n                          set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                            campaignStory: {\n                              text: storyText,\n                              lastUpdate: Date.now(),\n                              updatedBy: playerName\n                            }\n                          }));\n                        });\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Save Story\"\n                    })\n                  })]\n                }), _jsx(TextInput, {\n                  style: [styles.input, {\n                    height: 200,\n                    textAlignVertical: 'top',\n                    padding: 10,\n                    backgroundColor: THEME.background.secondary,\n                    color: THEME.text.light,\n                    fontSize: 14,\n                    lineHeight: 20,\n                    marginBottom: 10\n                  }],\n                  multiline: true,\n                  value: storyText,\n                  onChangeText: isDM ? setStoryText : undefined,\n                  editable: isDM,\n                  placeholder: \"Type or paste your campaign story here...\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), ((_initialGameState$cam = initialGameState.campaignStory) == null ? void 0 : _initialGameState$cam.updatedBy) && _jsxs(Text, {\n                  style: [styles.infoLabel, {\n                    textAlign: 'right'\n                  }],\n                  children: [\"Last updated by \", initialGameState.campaignStory.updatedBy]\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.rightSidebar,\n              children: [_jsxs(View, {\n                style: styles.quickActions,\n                children: [_jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: function onPress() {\n                    return setShowCharacterSheet(true);\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"New Character\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: function onPress() {\n                    return setShowPartyLoot(true);\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Party Loot\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: handleInitiativeRoll,\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Roll Initiative\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: [styles.quickActionButton, {\n                    backgroundColor: THEME.danger\n                  }],\n                  onPress: function onPress() {\n                    if (firebaseRef.current) {\n                      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                        tokens: {},\n                        layers: layers,\n                        initiative: [],\n                        inCombat: false,\n                        currentTurn: 0,\n                        partyLoot: partyLoot,\n                        characters: characters\n                      }));\n                      setTokens({});\n                      setInitiative([]);\n                      setInCombat(false);\n                      setCurrentTurn(0);\n                    }\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Clear Board\"\n                  })\n                })]\n              }), _jsxs(View, {\n                style: [styles.infoPanel, {\n                  marginBottom: 15\n                }],\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Characters\"\n                }), _jsx(ScrollView, {\n                  style: {\n                    maxHeight: 200\n                  },\n                  children: characters.filter(function (char) {\n                    return char.owner === playerName;\n                  }).map(function (char, index) {\n                    return _jsx(TouchableOpacity, {\n                      style: [layoutStyles.characterItem, (selectedCharacter == null ? void 0 : selectedCharacter.name) === char.name && {\n                        backgroundColor: THEME.accent + '40'\n                      }],\n                      onPress: function onPress() {\n                        return setSelectedCharacter(char);\n                      },\n                      children: _jsxs(View, {\n                        style: layoutStyles.characterInfo,\n                        children: [_jsxs(View, {\n                          children: [_jsx(Text, {\n                            style: layoutStyles.characterName,\n                            children: char.name\n                          }), _jsxs(Text, {\n                            style: layoutStyles.characterDetails,\n                            children: [\"Level \", char.level, \" \", char.class]\n                          })]\n                        }), _jsx(View, {\n                          style: styles.statBadge,\n                          children: _jsxs(Text, {\n                            style: styles.statBadgeText,\n                            children: [\"HP: \", char.hp, \"/\", char.maxHp]\n                          })\n                        })]\n                      })\n                    }, index);\n                  })\n                }), selectedCharacter && _jsxs(_Fragment, {\n                  children: [_jsx(View, {\n                    style: styles.divider\n                  }), _jsxs(View, {\n                    style: styles.infoGrid,\n                    children: [_jsx(TouchableOpacity, {\n                      style: [styles.quickActionButton, {\n                        backgroundColor: THEME.accent\n                      }],\n                      onPress: function onPress() {\n                        return setShowCharacterSheet(true);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.quickActionText,\n                        children: \"Character Sheet\"\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      style: [styles.quickActionButton, {\n                        backgroundColor: THEME.success\n                      }],\n                      onPress: function onPress() {\n                        return setShowInventory(true);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.quickActionText,\n                        children: \"Inventory\"\n                      })\n                    })]\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: styles.infoPanel,\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Combat Tracker\"\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, inCombat ? {\n                      backgroundColor: THEME.danger\n                    } : {}],\n                    onPress: function onPress() {\n                      if (inCombat) {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                            tokens: tokens,\n                            layers: layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0\n                          }));\n                        }\n                        setInitiative([]);\n                        setInCombat(false);\n                        setCurrentTurn(0);\n                      } else {\n                        handleInitiativeRoll();\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: inCombat ? 'End Combat' : 'Start Combat'\n                    })\n                  }), inCombat && _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.success\n                    }],\n                    onPress: function onPress() {\n                      var nextTurn = (currentTurn + 1) % initiative.length;\n                      setCurrentTurn(nextTurn);\n                      if (firebaseRef.current) {\n                        set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                          tokens: tokens,\n                          layers: layers,\n                          initiative: initiative,\n                          inCombat: true,\n                          currentTurn: nextTurn\n                        }));\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Next Turn\"\n                    })\n                  })]\n                }), inCombat && initiative.length > 0 && _jsxs(_Fragment, {\n                  children: [_jsx(View, {\n                    style: styles.divider\n                  }), _jsx(Text, {\n                    style: [styles.infoPanelTitle, {\n                      fontSize: 14\n                    }],\n                    children: \"Current Turn\"\n                  }), _jsxs(View, {\n                    style: [styles.infoCard, {\n                      marginBottom: 10\n                    }],\n                    children: [_jsx(Text, {\n                      style: styles.infoValue,\n                      children: ((_tokens$initiative$cu = tokens[(_initiative$currentTu2 = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu2.position]) == null ? void 0 : _tokens$initiative$cu.name) || 'Unknown'\n                    }), _jsxs(Text, {\n                      style: styles.infoLabel,\n                      children: [\"Initiative: \", ((_initiative$currentTu3 = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu3.initiative) || '0']\n                    })]\n                  }), _jsx(Text, {\n                    style: [styles.infoPanelTitle, {\n                      fontSize: 14\n                    }],\n                    children: \"Initiative Order\"\n                  }), _jsx(ScrollView, {\n                    style: {\n                      maxHeight: 150\n                    },\n                    children: initiative.map(function (item, index) {\n                      var token = tokens[item.position];\n                      if (!token) return null;\n                      return _jsxs(View, {\n                        style: [styles.infoCard, {\n                          marginBottom: 5\n                        }, index === currentTurn && {\n                          backgroundColor: THEME.accent + '40'\n                        }],\n                        children: [_jsx(Text, {\n                          style: styles.infoValue,\n                          children: token.name\n                        }), _jsxs(View, {\n                          style: {\n                            flexDirection: 'row',\n                            justifyContent: 'space-between'\n                          },\n                          children: [_jsxs(Text, {\n                            style: styles.infoLabel,\n                            children: [\"Initiative: \", item.initiative]\n                          }), _jsxs(Text, {\n                            style: styles.infoLabel,\n                            children: [\"HP: \", token.hp, \"/\", token.maxHp]\n                          })]\n                        })]\n                      }, item.position);\n                    })\n                  })]\n                })]\n              })]\n            })]\n          })\n        })]\n      })]\n    }), _jsx(DeleteCharacterModal, {\n      visible: showDeleteModal,\n      character: selectedCharacter,\n      onClose: function onClose() {\n        return setShowDeleteModal(false);\n      },\n      onConfirm: handleDeleteCharacter\n    }), _jsx(EnemySelectModal, {\n      visible: showEnemySelect,\n      onClose: function onClose() {\n        setShowEnemySelect(false);\n        setSelectedPosition(null);\n      },\n      onSelect: handleEnemySelect\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","memo","StyleSheet","View","Text","TouchableOpacity","Pressable","TextInput","ScrollView","Alert","Modal","KeyboardAvoidingView","Platform","SafeAreaView","ActivityIndicator","Keyboard","Vibration","Dimensions","initializeApp","getDatabase","ref","onValue","set","get","off","debounce","GestureScrollView","DiceRoller","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","LETTERS","Array","from","length","_","i","String","fromCharCode","COLORS","GRID_SIZE","ABILITY_SCORES","SKILLS","STR","DEX","CON","INT","WIS","CHA","CURRENCY","DICE_TYPES","sides","color","STATUS_EFFECTS","id","name","icon","COMMON_ENEMIES","hp","maxHp","ac","initiativeBonus","windowDimensions","isSmallScreen","width","THEME","primary","secondary","accent","gold","danger","success","text","light","dark","background","panel","initialGameState","tokens","layers","grid","terrain","effects","fog","initiative","inCombat","currentTurn","settings","gridSize","showCoordinates","partyLoot","currency","CP","SP","EP","GP","PP","items","currentViewer","characters","campaignStory","lastUpdate","updatedBy","Date","now","styles","create","container","flex","backgroundColor","height","header","padding","title","fontSize","fontWeight","marginBottom","controls","flexDirection","flexWrap","gap","justifyContent","controlButton","borderRadius","minWidth","alignItems","content","mainArea","minHeight","leftSidebar","flexShrink","order","gridSection","rightSidebar","gridContainer","row","cell","borderWidth","borderColor","tokenContent","tokenText","textAlign","tokenHp","modalOverlay","modalContainer","modalContent","modalTitle","input","modalButtons","marginTop","modalButton","buttonText","loadingContainer","loadingText","loadingButtonContent","diceBox","diceControls","diceButtons","diceButton","diceHistory","maxHeight","diceResultContainer","borderBottomWidth","borderBottomColor","diceResult","diceTotal","diceRolls","initiativeList","initiativeScroll","initiativeItem","currentInitiative","initiativeText","currentInitiativeText","zoomControls","position","right","bottom","display","zoomButton","opacity","advantageButton","advantageActive","modifierInput","boxTitle","colorPicker","colorButton","margin","selectedColor","quickActions","quickActionButton","quickActionText","infoPanel","infoPanelTitle","infoGrid","infoCard","infoLabel","infoValue","statBadge","paddingVertical","paddingHorizontal","alignSelf","statBadgeText","divider","marginVertical","additionalStyles","characterSheet","maxWidth","sheetHeader","sheetSection","sectionTitle","abilityScores","abilityBox","abilityLabel","abilityScore","abilityMod","skillsList","skillItem","proficientDot","marginRight","skillName","skillMod","closeButton","top","closeButtonText","lootSection","currencyRow","currencyInput","currencyLabel","itemRow","itemInput","removeButton","addButton","lootHeader","itemInfo","addedBy","enemyOption","dmToggle","marginLeft","dmToggleActive","diceStyles","dicePanel","diceHeader","diceTitle","diceGrid","boxShadow","diceButtonText","controlGroup","controlActive","modifierGroup","modifierLabel","historyContainer","historyScroll","historyItem","historyLeft","historyInfo","historyDice","historyRolls","historyTotal","clearButton","quantityGroup","quantityLabel","quantityInput","controlsRow","diceContainer","overflow","statusStyles","effectsContainer","borderTopWidth","borderTopColor","paddingTop","effectsTitle","effectsGrid","effectButton","effectActive","effectText","tokenEffects","effectIcon","saveGameState","_ref","_asyncToGenerator","firebaseRef","current","error","console","alert","apply","arguments","CharacterSheetModal","_ref2","visible","onClose","character","onUpdate","_useState","class","level","owner","proficiencyBonus","proficientSkills","inventory","_useState2","_slicedToArray","editedCharacter","setEditedCharacter","calculateModifier","score","Math","floor","handleAbilityScoreChange","ability","value","newScore","parseInt","prev","_objectSpread","_defineProperty","toggleProficiency","skill","includes","filter","s","concat","_toConsumableArray","getSkillModifier","profBonus","handleSave","_ref3","updatedCharacter","transparent","animationType","onRequestClose","children","style","onPress","onChangeText","placeholder","placeholderTextColor","keyboardType","map","maxLength","selectTextOnFocus","Object","entries","_ref4","_ref5","skills","quantity","notes","item","index","newItems","TokenModal","_ref6","showTokenModal","setShowTokenModal","selectedToken","setSelectedToken","cursor","dismiss","behavior","select","ios","android","keyboardVerticalOffset","e","stopPropagation","blurOnSubmit","autoComplete","spellCheck","enablesReturnKeyAutomatically","max","effect","_selectedToken$effect","currentEffects","newEffects","newTokens","modalStyles","left","zIndex","RoomModal","_ref7","showRoomModal","setShowRoomModal","isConnected","roomCode","setRoomCode","isJoining","connectToRoom","pointerEvents","trim","toLowerCase","autoCapitalize","autoCorrect","editable","autoFocus","disabled","PartyLootModal","_ref8","playerName","_useState3","_useState4","editedLoot","setEditedLoot","type","toString","buttonRow","button","GridZoomControls","_ref9","zoomLevel","setZoomLevel","debouncedZoom","newZoom","min","InventoryModal","_ref10","_useState5","_useState6","editedInventory","setEditedInventory","newInventory","PlayerNameModal","_ref11","onSubmit","_useState7","_useState8","setName","viewerStyles","viewersList","viewersTitle","viewerName","DiceResultModal","_ref12","result","timer","setTimeout","clearTimeout","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","dice","rollType","total","rolls","join","modifier","DeleteCharacterModal","_ref13","onConfirm","_useState9","_useState10","confirmName","setConfirmName","EnemySelectModal","_ref14","onSelect","enemy","App","_initialGameState$cam","_tokens$initiative$cu","_initiative$currentTu2","_initiative$currentTu3","_useState11","_useState12","_useState13","_useState14","setIsConnected","_useState15","_useState16","isLoading","setIsLoading","_useState17","_useState18","setIsJoining","_useState19","_useState20","isUpdating","setIsUpdating","_useState21","_useState22","_useState23","_useState24","isDarkMode","setIsDarkMode","_useState25","_useState26","_useState27","_useState28","setTokens","_useState29","_useState30","currentColor","setCurrentColor","_useState31","_useState32","setInitiative","_useState33","_useState34","setInCombat","_useState35","_useState36","setCurrentTurn","_useState37","_useState38","setLayers","_useState39","_useState40","setDiceHistory","_useState41","_useState42","advantage","setAdvantage","_useState43","_useState44","setModifier","_useState45","_useState46","_useState47","_useState48","_useState49","_useState50","setPartyLoot","_useState51","_useState52","showPartyLoot","setShowPartyLoot","_useState53","_useState54","diceQuantity","setDiceQuantity","_useState55","_useState56","setCharacters","_useState57","_useState58","showCharacterSheet","setShowCharacterSheet","_useState59","_useState60","selectedCharacter","setSelectedCharacter","_useState61","_useState62","showInventory","setShowInventory","_useState63","_useState64","setPlayerName","_useState65","_useState66","showPlayerNameModal","setShowPlayerNameModal","_useState67","_useState68","setRollType","_useState69","_useState70","setDiceResult","_useState71","_useState72","showDiceResult","setShowDiceResult","_useState73","_useState74","showDeleteModal","setShowDeleteModal","_useState75","_useState76","isDM","setIsDM","_useState77","_useState78","showEnemySelect","setShowEnemySelect","_useState79","_useState80","selectedPosition","setSelectedPosition","_useState81","_useState82","storyText","setStoryText","unsubscribeRef","handleDisconnect","handleInitiativeRoll","keys","_ref15","_ref16","token","roll","random","details","sort","a","b","rollDice","allRolls","d","numRolls","push","finalRoll","grandTotal","reduce","sum","newResult","r","flat","individualTotals","timestamp","slice","vibrate","handleCellPress","_ref17","col","snapshot","currentRoomData","val","_x","_x2","savePlayerData","_ref18","updatedCharacters","roomPlayerRef","globalPlayerRef","playerData","Promise","all","_x3","_ref19","code","playerSnapshot","exists","gameRef","unsubscribe","data","_data$campaignStory","players","_x4","handleOffline","window","addEventListener","removeEventListener","layoutStyles","sidePanel","sidePanelTitle","panelButton","panelButtonText","characterItem","characterInfo","characterName","characterDetails","handleDeleteCharacter","newCharacters","char","handleEnemySelect","_ref21","_x5","darkMode","updatedLoot","_ref22","Error","playerRef","roomSnapshot","_x6","_ref23","_x7","size","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","nextTurn","num","_ref24","roll1","roll2","damage","pop","transform","scale","_initiative$currentTu","isCurrentTurn","onLongPress","numberOfLines","statusEffect","find","then","textAlignVertical","lineHeight","multiline","undefined"],"sources":["C:/Users/Daniel/Desktop/3d-dice-main/App.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  TouchableOpacity, \n  Pressable,\n  TextInput, \n  ScrollView, \n  Alert, \n  Modal,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ActivityIndicator,\n  Keyboard,\n  Vibration,\n  Dimensions\n} from 'react-native';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getDatabase, \n  ref, \n  onValue, \n  set, \n  get, \n  off \n} from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from './components/DiceModel';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Constants\nconst LETTERS = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\nconst COLORS = [\n  '#4527A0',  // Rich purple\n  '#4A90E2',  // Bright blue\n  '#7C4DFF',  // Bright purple\n  '#00BFA5',  // Teal\n  '#3F51B5',  // Indigo\n  '#673AB7',  // Deep Purple\n  '#2196F3',  // Blue\n  '#B39DDB'   // Light Purple\n];\nconst GRID_SIZE = 10;\nconst ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nconst SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nconst CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nconst DICE_TYPES = [\n  { sides: 4, color: '#FF6B6B' },\n  { sides: 6, color: '#4ECDC4' },\n  { sides: 8, color: '#45B7D1' },\n  { sides: 10, color: '#96CEB4' },\n  { sides: 12, color: '#FFEEAD' },\n  { sides: 20, color: '#D4A5A5' },\n  { sides: 100, color: '#9B59B6' }\n];\nconst STATUS_EFFECTS = [\n  { id: 'blinded', name: 'Blinded', icon: '👁️' },\n  { id: 'charmed', name: 'Charmed', icon: '💕' },\n  { id: 'deafened', name: 'Deafened', icon: '👂' },\n  { id: 'frightened', name: 'Frightened', icon: '😨' },\n  { id: 'grappled', name: 'Grappled', icon: '🤼' },\n  { id: 'incapacitated', name: 'Incapacitated', icon: '💫' },\n  { id: 'invisible', name: 'Invisible', icon: '👻' },\n  { id: 'paralyzed', name: 'Paralyzed', icon: '⚡' },\n  { id: 'petrified', name: 'Petrified', icon: '🗿' },\n  { id: 'poisoned', name: 'Poisoned', icon: '🤢' },\n  { id: 'prone', name: 'Prone', icon: '⬇️' },\n  { id: 'restrained', name: 'Restrained', icon: '⛓️' },\n  { id: 'stunned', name: 'Stunned', icon: '💫' },\n  { id: 'unconscious', name: 'Unconscious', icon: '💤' }\n];\n\n// Add this constant near the other constants at the top\nconst COMMON_ENEMIES = [\n  {\n    name: 'Bandit',\n    hp: 11,\n    maxHp: 11,\n    ac: 12,\n    initiativeBonus: 1,\n    color: '#8B4513'\n  },\n  {\n    name: 'Wolf',\n    hp: 11,\n    maxHp: 11,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#808080'\n  },\n  {\n    name: 'Wraith',\n    hp: 67,\n    maxHp: 67,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#4A0404'\n  },\n  {\n    name: 'Goblin',\n    hp: 7,\n    maxHp: 7,\n    ac: 15,\n    initiativeBonus: 2,\n    color: '#355E3B'\n  },\n  {\n    name: 'Skeleton',\n    hp: 13,\n    maxHp: 13,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#E1D9D1'\n  },\n  {\n    name: 'Zombie',\n    hp: 22,\n    maxHp: 22,\n    ac: 8,\n    initiativeBonus: -2,\n    color: '#4A412A'\n  }\n];\n\n// Get window dimensions\nconst windowDimensions = Dimensions.get('window');\nconst isSmallScreen = windowDimensions.width < 768;\n\n// Theme configuration\nconst THEME = {\n  primary: '#2E1F5E',      // Deep purple\n  secondary: '#4527A0',    // Rich purple\n  accent: '#4A90E2',       // Bright blue\n  gold: '#7C4DFF',         // Bright purple\n  danger: '#FF5252',       // Red (keeping for clear danger indication)\n  success: '#00BFA5',      // Teal (keeping for clear success indication)\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1A103C',    // Darkest purple\n    secondary: '#2E1F5E',  // Deep purple\n    dark: '#150D30',       // Very dark purple\n    panel: '#3F2B85'       // Medium purple\n  }\n};\n\n// Initial game state\nconst initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true,\n  },\n  partyLoot: {\n    currency: { CP: 0, SP: 0, EP: 0, GP: 0, PP: 0 },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  campaignStory: {\n    text: '',\n    lastUpdate: null,\n    updatedBy: null\n  },\n  lastUpdate: Date.now()\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%',\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%',\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start',\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%',\n  },\n  leftSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 2 : 0,\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%',\n    order: isSmallScreen ? 1 : 1,\n  },\n  rightSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 3 : 2,\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary,\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2,\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400,\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15,\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%',\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10,\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center',\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60,\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10,\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40',\n  },\n  diceResult: {\n    color: THEME.text.light,\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent,\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12,\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%',\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200,\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary,\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent,\n  },\n  initiativeText: {\n    color: THEME.text.light,\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold',\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none',\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8,\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center',\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10,\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2,\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent,\n  },\n  quickActions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    padding: 15,\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    marginBottom: 15,\n  },\n  quickActionButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 100,\n    flex: 1,\n  },\n  quickActionText: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  infoPanel: {\n    backgroundColor: THEME.background.panel,\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n  },\n  infoPanelTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  infoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  infoCard: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    flex: 1,\n    minWidth: 150,\n  },\n  infoLabel: {\n    color: THEME.accent,\n    fontSize: 12,\n    marginBottom: 5,\n  },\n  infoValue: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  statBadge: {\n    backgroundColor: THEME.accent + '20',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n    alignSelf: 'flex-start',\n  },\n  statBadgeText: {\n    color: THEME.accent,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  divider: {\n    height: 1,\n    backgroundColor: THEME.accent + '40',\n    marginVertical: 15,\n  },\n});\n\nconst additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%',\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  sheetSection: {\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10,\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10,\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5,\n  },\n  abilityMod: {\n    color: THEME.text.light,\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200,\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1,\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10,\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20,\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15,\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center',\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30,\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10,\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger,\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1,\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4,\n  },\n  enemyOption: {\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 8,\n    backgroundColor: THEME.background.secondary,\n  },\n  dmToggle: {\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginLeft: 10,\n  },\n  dmToggleActive: {\n    backgroundColor: THEME.accent,\n  }\n});\n\nconst diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: '0px 2px 3.84px rgba(0, 0, 0, 0.25)', // Replace elevation and shadowProps\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold',\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  controlActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200,\n  },\n  historyScroll: {\n    padding: 10,\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary,\n  },\n  historyLeft: {\n    flex: 1,\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7,\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5,\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  diceControls: {\n    flexDirection: 'column',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10,\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  diceContainer: {\n    width: isSmallScreen ? 80 : 100,\n    height: isSmallScreen ? 80 : 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginBottom: 5,\n  }\n});\n\nconst statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15,\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80,\n  },\n  effectActive: {\n    backgroundColor: THEME.accent,\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12,\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2,\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12,\n  },\n});\n\n// Create a helper function to save game state\nconst saveGameState = async () => {\n  if (firebaseRef.current) {\n    try {\n      await set(firebaseRef.current, {\n        tokens,\n        layers,\n        initiative,\n        inCombat,\n        currentTurn,\n        partyLoot,\n        characters,\n        settings: initialGameState.settings,\n        lastUpdate: Date.now()\n      });\n    } catch (error) {\n      console.error('Error saving game state:', error);\n      Alert.alert('Error', 'Failed to save game state');\n    }\n  }\n};\n\n// Add this component definition before the TokenModal component\nconst CharacterSheetModal = memo(({ visible, onClose, character, characters, onUpdate }) => {\n  const [editedCharacter, setEditedCharacter] = useState(() => ({\n    name: character?.name || '',\n    class: character?.class || '',\n    level: character?.level || 1,\n    owner: character?.owner || '',\n    proficiencyBonus: character?.proficiencyBonus || 2,\n    // Add HP and AC\n    hp: character?.hp || 0,\n    maxHp: character?.maxHp || 0,\n    ac: character?.ac || 10,\n    abilityScores: character?.abilityScores || {\n      STR: 10,\n      DEX: 10,\n      CON: 10,\n      INT: 10,\n      WIS: 10,\n      CHA: 10\n    },\n    proficientSkills: character?.proficientSkills || [],\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: character?.items || [],\n    inventory: character?.inventory || []\n  }));\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        hp: character.hp || 0,\n        maxHp: character.maxHp || 0,\n        ac: character.ac || 10,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n\n  // Add error boundary\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  const handleAbilityScoreChange = (ability, value) => {\n    const newScore = parseInt(value) || 0;\n    setEditedCharacter(prev => ({\n      ...prev,\n      abilityScores: {\n        ...prev.abilityScores,\n        [ability]: newScore\n      }\n    }));\n  };\n\n  const toggleProficiency = (skill) => {\n    setEditedCharacter(prev => ({\n      ...prev,\n      proficientSkills: prev.proficientSkills.includes(skill)\n        ? prev.proficientSkills.filter(s => s !== skill)\n        : [...prev.proficientSkills, skill]\n    }));\n  };\n\n  const getSkillModifier = (skill, ability) => {\n    const abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    const profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n\n  const handleSave = async () => {\n    try {\n      const updatedCharacter = {\n        ...character,\n        ...editedCharacter\n      };\n\n      onUpdate(updatedCharacter);\n    } catch (error) {\n      console.error('Error saving character:', error);\n      Alert.alert('Error', 'Failed to save character');\n    }\n  };\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <GestureScrollView>\n            {/* Basic Info */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Character Info</Text>\n              <TextInput\n                style={styles.input}\n                value={editedCharacter.name}\n                onChangeText={(text) => setEditedCharacter(prev => ({...prev, name: text}))}\n                placeholder=\"Character Name\"\n                placeholderTextColor={THEME.text.light + '80'}\n              />\n              <View style={{ flexDirection: 'row', gap: 10 }}>\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={editedCharacter.class}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, class: text}))}\n                  placeholder=\"Class\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={String(editedCharacter.level)}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, level: parseInt(text) || 1}))}\n                  placeholder=\"Level\"\n                  keyboardType=\"numeric\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n              </View>\n\n              {/* Add HP and AC fields here */}\n              <View style={{ flexDirection: 'row', gap: 10, marginTop: 10 }}>\n                <View style={{ flex: 2 }}>\n                  <Text style={[styles.buttonText, { marginBottom: 5 }]}>Hit Points</Text>\n                  <View style={{ flexDirection: 'row', gap: 5 }}>\n                    <TextInput\n                      style={[styles.input, { flex: 1 }]}\n                      value={String(editedCharacter.hp)}\n                      onChangeText={(text) => setEditedCharacter(prev => ({\n                        ...prev,\n                        hp: parseInt(text) || 0\n                      }))}\n                      placeholder=\"Current HP\"\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <Text style={{ color: THEME.text.light, alignSelf: 'center', fontSize: 18 }}>/</Text>\n                    <TextInput\n                      style={[styles.input, { flex: 1 }]}\n                      value={String(editedCharacter.maxHp)}\n                      onChangeText={(text) => setEditedCharacter(prev => ({\n                        ...prev,\n                        maxHp: parseInt(text) || 0\n                      }))}\n                      placeholder=\"Max HP\"\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                </View>\n                <View style={{ flex: 1 }}>\n                  <Text style={[styles.buttonText, { marginBottom: 5 }]}>Armor Class</Text>\n                  <TextInput\n                    style={styles.input}\n                    value={String(editedCharacter.ac)}\n                    onChangeText={(text) => setEditedCharacter(prev => ({\n                      ...prev,\n                      ac: parseInt(text) || 10\n                    }))}\n                    placeholder=\"AC\"\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              </View>\n            </View>\n\n            {/* Ability Scores */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Ability Scores</Text>\n              <View style={additionalStyles.abilityScores}>\n                {ABILITY_SCORES.map(ability => (\n                  <View key={ability} style={additionalStyles.abilityBox}>\n                    <Text style={additionalStyles.abilityLabel}>{ability}</Text>\n                    <TextInput\n                      style={additionalStyles.abilityScore}\n                      value={String(editedCharacter.abilityScores[ability])}\n                      onChangeText={(text) => handleAbilityScoreChange(ability, text)}\n                      keyboardType=\"numeric\"\n                      maxLength={2}\n                      selectTextOnFocus={true}\n                    />\n                    <Text style={additionalStyles.abilityMod}>\n                      {calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : ''}\n                      {calculateModifier(editedCharacter.abilityScores[ability])}\n                    </Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n\n            {/* Skills */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Skills</Text>\n              <View style={additionalStyles.skillsList}>\n                {Object.entries(SKILLS).map(([ability, skills]) =>\n                  skills.map(skill => (\n                    <TouchableOpacity\n                      key={skill}\n                      style={additionalStyles.skillItem}\n                      onPress={() => toggleProficiency(skill)}\n                    >\n                      <View style={[\n                        additionalStyles.proficientDot,\n                        {\n                          backgroundColor: editedCharacter.proficientSkills.includes(skill)\n                            ? THEME.accent\n                            : THEME.background.secondary\n                        }\n                      ]} />\n                      <Text style={additionalStyles.skillName}>{skill}</Text>\n                      <Text style={additionalStyles.skillMod}>\n                        {getSkillModifier(skill, ability) >= 0 ? '+' : ''}\n                        {getSkillModifier(skill, ability)}\n                      </Text>\n                    </TouchableOpacity>\n                  ))\n                )}\n              </View>\n            </View>\n\n            {/* Inventory */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Inventory</Text>\n\n              <View style={additionalStyles.lootSection}>\n                {/* Currency */}\n                {CURRENCY.map(currency => (\n                  <View key={currency} style={additionalStyles.currencyRow}>\n                    <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                    <TextInput\n                      style={additionalStyles.currencyInput}\n                      value={String(editedCharacter.currency[currency] || 0)}\n                      onChangeText={(text) => {\n                        const value = parseInt(text) || 0;\n                        setEditedCharacter(prev => ({\n                          ...prev,\n                          currency: {\n                            ...prev.currency,\n                            [currency]: value\n                          }\n                        }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                ))}\n              </View>\n\n              <View style={additionalStyles.lootSection}>\n                <View style={additionalStyles.lootHeader}>\n                  <Text style={additionalStyles.sectionTitle}>Items</Text>\n                  <TouchableOpacity\n                    style={additionalStyles.addButton}\n                    onPress={() => {\n                      setEditedCharacter(prev => ({\n                        ...prev,\n                        items: [...prev.items, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>Add Item</Text>\n                  </TouchableOpacity>\n                </View>\n\n                {editedCharacter.items.map((item, index) => (\n                  <View key={index} style={additionalStyles.itemRow}>\n                    <View style={additionalStyles.itemInfo}>\n                      <TextInput\n                        style={[additionalStyles.itemInput, { flex: 2 }]}\n                        value={item.name}\n                        onChangeText={(text) => {\n                          const newItems = [...editedCharacter.items];\n                          newItems[index] = { ...item, name: text };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        placeholder=\"Item name\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      <TextInput\n                        style={[additionalStyles.itemInput, { width: 60 }]}\n                        value={String(item.quantity)}\n                        onChangeText={(text) => {\n                          const newItems = [...editedCharacter.items];\n                          newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        keyboardType=\"numeric\"\n                        placeholder=\"Qty\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      {item.addedBy === character.name && (\n                        <TouchableOpacity\n                          style={additionalStyles.removeButton}\n                          onPress={() => {\n                            setEditedCharacter(prev => ({\n                              ...prev,\n                              items: prev.items.filter((_, i) => i !== index)\n                            }));\n                          }}\n                        >\n                          <Text style={styles.buttonText}>×</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n                    <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                  </View>\n                ))}\n              </View>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={handleSave}\n              >\n                <Text style={styles.buttonText}>Save Changes</Text>\n              </TouchableOpacity>\n            </View>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Memoized Modal Components\nconst TokenModal = memo(({ \n  showTokenModal, \n  setShowTokenModal, \n  selectedToken, \n  setSelectedToken, \n  tokens, \n  firebaseRef, \n  initialGameState, \n  layers, \n  initiative, \n  inCombat, \n  currentTurn, \n  THEME \n}) => (\n  <Modal\n    visible={showTokenModal}\n    transparent={true}\n    animationType=\"fade\"\n    onRequestClose={() => setShowTokenModal(false)}\n  >\n    <Pressable \n      style={[styles.modalOverlay, { cursor: 'default' }]}\n      onPress={() => Keyboard.dismiss()}\n    >\n      <View style={styles.modalContent}>\n        <KeyboardAvoidingView \n          behavior={Platform.select({ ios: 'padding', android: 'height' })}\n          style={styles.modalContainer}\n          keyboardVerticalOffset={Platform.select({ ios: 64, android: 0 })}\n        >\n          <Pressable onPress={e => e.stopPropagation()}>\n            <Text style={styles.modalTitle}>Edit Token</Text>\n            <TextInput\n              style={styles.input}\n              value={selectedToken?.name}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  name: text\n                }));\n              }}\n              placeholder=\"Token Name\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              spellCheck={false}\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n\n            <View style={{ flexDirection: 'row', gap: 10, marginBottom: 10 }}>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.hp || '')}\n                  onChangeText={(text) => {\n                    const hp = parseInt(text) || 0;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      hp: Math.max(0, hp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Current HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.maxHp || '')}\n                  onChangeText={(text) => {\n                    const maxHp = parseInt(text) || 1;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      maxHp: Math.max(1, maxHp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Max HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n            </View>\n\n            <TextInput\n              style={styles.input}\n              value={String(selectedToken?.initiativeBonus || '0')}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  initiativeBonus: parseInt(text) || 0\n                }));\n              }}\n              keyboardType=\"numeric\"\n              placeholder=\"Initiative Bonus\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n\n            <View style={statusStyles.effectsContainer}>\n              <Text style={statusStyles.effectsTitle}>Status Effects</Text>\n              <View style={statusStyles.effectsGrid}>\n                {STATUS_EFFECTS.map(effect => (\n                  <TouchableOpacity\n                    key={effect.id}\n                    style={[\n                      statusStyles.effectButton,\n                      selectedToken?.effects?.includes(effect.id) && statusStyles.effectActive\n                    ]}\n                    onPress={() => {\n                      setSelectedToken(prev => {\n                        const currentEffects = prev.effects || [];\n                        const newEffects = currentEffects.includes(effect.id)\n                          ? currentEffects.filter(e => e !== effect.id)\n                          : [...currentEffects, effect.id];\n                        return {\n                          ...prev,\n                          effects: newEffects\n                        };\n                      });\n                    }}\n                  >\n                    <Text style={statusStyles.effectText}>\n                      {effect.icon} {effect.name}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            </View>\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.danger }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    const newTokens = { ...tokens };\n                    delete newTokens[selectedToken.position];\n                    set(firebaseRef.current, { \n                      ...initialGameState,\n                      tokens: newTokens,\n                      layers,\n                      initiative,\n                      inCombat,\n                      currentTurn\n                    });\n                    setShowTokenModal(false);\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Delete</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    const newTokens = {\n                      ...tokens,\n                      [selectedToken.position]: selectedToken\n                    };\n                    set(firebaseRef.current, {\n                      ...initialGameState,\n                      tokens: newTokens,\n                      layers,\n                      initiative,\n                      inCombat,\n                      currentTurn\n                    });\n                    setShowTokenModal(false);\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </Pressable>\n        </KeyboardAvoidingView>\n      </View>\n    </Pressable>\n  </Modal>\n));\n\n// Update the RoomModal styles\nconst modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000, // Add high z-index\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001, // Even higher z-index\n  },\n});\n\n// Update the RoomModal component\nconst RoomModal = memo(({ \n  showRoomModal, \n  setShowRoomModal, \n  isConnected, \n  roomCode, \n  setRoomCode, \n  isJoining, \n  connectToRoom \n}) => (\n  <Modal\n    visible={showRoomModal}\n    transparent={true}\n    animationType=\"fade\"\n    onRequestClose={() => {}}\n    style={{ zIndex: 999 }} // Add z-index to Modal\n  >\n    <View style={[modalStyles.modalOverlay, { pointerEvents: 'auto' }]}>\n      <View style={modalStyles.modalContent}>\n        <Text style={styles.modalTitle}>Join Room</Text>\n        <TextInput\n          style={[styles.input, { marginBottom: 15, zIndex: 1002 }]} // Add z-index to input\n          value={roomCode}\n          onChangeText={(text) => {\n            setRoomCode(text.trim().toLowerCase());\n          }}\n          placeholder=\"Enter room code...\"\n          placeholderTextColor={THEME.text.light + '80'}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          editable={!isJoining}\n          autoFocus={true}\n          blurOnSubmit={false}\n        />\n        <TouchableOpacity\n          style={[\n            styles.modalButton,\n            { \n              backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n              width: '100%',\n              zIndex: 1002 // Add z-index to button\n            }\n          ]}\n          onPress={() => {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          }}\n          disabled={isJoining}\n        >\n          {isJoining ? (\n            <View style={styles.loadingButtonContent}>\n              <ActivityIndicator color={THEME.text.light} />\n              <Text style={[styles.buttonText, { marginLeft: 10 }]}>\n                Connecting...\n              </Text>\n            </View>\n          ) : (\n            <Text style={styles.buttonText}>Join Room</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    </View>\n  </Modal>\n));\n\nconst PartyLootModal = memo(({ visible, onClose, partyLoot, onUpdate, playerName }) => {\n  const [editedLoot, setEditedLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: []\n  });\n\n  useEffect(() => {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[styles.modalContent, { maxHeight: '90%' }]}>\n          <Text style={styles.modalTitle}>Party Loot</Text>\n\n          <ScrollView>\n            {/* Currency Section */}\n            <View style={additionalStyles.lootSection}>\n              {CURRENCY.map(type => (\n                <View key={type} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{type}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedLoot.currency[type] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [type]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            {/* Items Section */}\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedLoot(prev => ({\n                      ...prev,\n                      items: [...prev.items, { \n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName \n                      }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedLoot.items.map((item, index) => (\n                <View key={item.id || index} style={additionalStyles.itemRow}>\n                  <TextInput\n                    style={[additionalStyles.itemInput, { flex: 2 }]}\n                    value={item.name}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, name: text };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    placeholder=\"Item name\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TextInput\n                    style={[additionalStyles.itemInput, { width: 60 }]}\n                    value={String(item.quantity)}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Qty\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TouchableOpacity\n                    style={additionalStyles.removeButton}\n                    onPress={() => {\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        items: prev.items.filter((_, i) => i !== index)\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>×</Text>\n                  </TouchableOpacity>\n                </View>\n              ))}\n            </View>\n          </ScrollView>\n\n          <View style={styles.buttonRow}>\n            <TouchableOpacity\n              style={[styles.button, styles.closeButton]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate(editedLoot);\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add this component definition before the App component\nconst GridZoomControls = memo(({ zoomLevel, setZoomLevel }) => {\n  const debouncedZoom = debounce((newZoom) => {\n    setZoomLevel(newZoom);\n  }, 100);\n\n  return (\n    <View style={styles.zoomControls}>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.max(0.5, zoomLevel - 0.1))}\n      >\n        <Text style={styles.buttonText}>-</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.min(2, zoomLevel + 0.1))}\n      >\n        <Text style={styles.buttonText}>+</Text>\n      </TouchableOpacity>\n    </View>\n  );\n});\n\n// Add InventoryModal component\nconst InventoryModal = memo(({ visible, onClose, character, onUpdate }) => {\n  const [editedInventory, setEditedInventory] = useState({\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    inventory: character?.inventory || []\n  });\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n\n  if (!visible || !character) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <Text style={additionalStyles.sectionTitle}>{character.name}'s Inventory</Text>\n\n          <GestureScrollView>\n            <View style={additionalStyles.lootSection}>\n              {/* Currency */}\n              {CURRENCY.map(currency => (\n                <View key={currency} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedInventory.currency[currency] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedInventory(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [currency]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedInventory(prev => ({\n                      ...prev,\n                      inventory: [...prev.inventory, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedInventory.inventory.map((item, index) => (\n                <View key={index} style={additionalStyles.itemRow}>\n                  <View style={additionalStyles.itemInfo}>\n                    <TextInput\n                      style={[additionalStyles.itemInput, { flex: 2 }]}\n                      value={item.name}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, name: text };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      placeholder=\"Item name\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <TextInput\n                      style={[additionalStyles.itemInput, { width: 60 }]}\n                      value={String(item.quantity)}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, quantity: parseInt(text) || 1 };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholder=\"Qty\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    {item.addedBy === character.name && (\n                      <TouchableOpacity\n                        style={additionalStyles.removeButton}\n                        onPress={() => {\n                          setEditedInventory(prev => ({\n                            ...prev,\n                            inventory: prev.inventory.filter((_, i) => i !== index)\n                          }));\n                        }}\n                      >\n                        <Text style={styles.buttonText}>×</Text>\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                  <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                </View>\n              ))}\n            </View>\n\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate({\n                  ...character,\n                  currency: editedInventory.currency,\n                  inventory: editedInventory.inventory\n                });\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add PlayerNameModal component\nconst PlayerNameModal = memo(({ visible, onSubmit }) => {\n  const [name, setName] = useState('');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={() => {}}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Enter Your Name</Text>\n          <TextInput\n            style={styles.input}\n            value={name}\n            onChangeText={setName}\n            placeholder=\"Your name\"\n            placeholderTextColor={THEME.text.light + '80'}\n            autoCapitalize=\"words\"\n          />\n          <TouchableOpacity\n            style={[styles.modalButton, { \n              backgroundColor: THEME.success,\n              width: '100%',\n              marginTop: 10\n            }]}\n            onPress={() => onSubmit(name)}\n            disabled={!name.trim()}\n          >\n            <Text style={styles.buttonText}>Continue</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add to styles\nconst viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5,\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2,\n  },\n});\n\n// Add this function at the top level of the App component, before the state declarations\nconst calculateModifier = (score) => {\n  return Math.floor((score - 10) / 2);\n};\n\n// Add this new component near the other modal components\nconst DiceResultModal = memo(({ visible, result, onClose }) => {\n  useEffect(() => {\n    if (visible) {\n      const timer = setTimeout(onClose, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [visible, onClose]);\n\n  if (!visible || !result) return null;\n\n  return (\n    <View style={{\n      position: 'fixed', // Change from 'absolute' to 'fixed'\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 9999, // Increase zIndex to ensure it's above everything\n      backgroundColor: 'rgba(0, 0, 0, 0.5)', // Add semi-transparent background\n    }}>\n      <View style={{\n        backgroundColor: THEME.background.panel + 'E6',\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        minWidth: 200,\n        maxWidth: '90%',\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5,\n      }}>\n        <Text style={{\n          color: THEME.text.light,\n          fontSize: 18,\n          marginBottom: 5,\n        }}>\n          {result.dice} {result.rollType !== 'normal' ? `(${result.rollType})` : ''}\n        </Text>\n        <Text style={{\n          color: THEME.accent,\n          fontSize: 32,\n          fontWeight: 'bold',\n          marginBottom: 5,\n        }}>\n          {result.total}\n        </Text>\n        <Text style={{\n          color: THEME.text.light + '80',\n          fontSize: 14,\n        }}>\n          Rolls: [{result.rolls.join(', ')}]\n          {result.modifier !== 0 && ` + ${result.modifier}`}\n        </Text>\n      </View>\n    </View>\n  );\n});\n\n// Add this new component near the other modal components\nconst DeleteCharacterModal = memo(({ visible, character, onClose, onConfirm }) => {\n  const [confirmName, setConfirmName] = useState('');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Delete Character</Text>\n          <Text style={[styles.buttonText, { marginBottom: 10, textAlign: 'center' }]}>\n            Type \"{character?.name}\" to confirm deletion\n          </Text>\n          <TextInput\n            style={styles.input}\n            value={confirmName}\n            onChangeText={setConfirmName}\n            placeholder=\"Character name\"\n            placeholderTextColor={THEME.text.light + '80'}\n          />\n          <View style={[styles.modalButtons, { marginTop: 15 }]}>\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.background.secondary }]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[\n                styles.modalButton, \n                { \n                  backgroundColor: confirmName === character?.name ? THEME.danger : THEME.background.secondary,\n                  opacity: confirmName === character?.name ? 1 : 0.5\n                }\n              ]}\n              onPress={() => {\n                if (confirmName === character?.name) {\n                  onConfirm();\n                }\n              }}\n              disabled={confirmName !== character?.name}\n            >\n              <Text style={styles.buttonText}>Delete</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add this new component for the enemy selection modal\nconst EnemySelectModal = memo(({ visible, onClose, onSelect }) => {\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Select Enemy</Text>\n          <ScrollView style={{ maxHeight: 300 }}>\n            {COMMON_ENEMIES.map((enemy, index) => (\n              <TouchableOpacity\n                key={index}\n                style={[\n                  styles.enemyOption,\n                  { backgroundColor: THEME.background.secondary }\n                ]}\n                onPress={() => onSelect(enemy)}\n              >\n                <Text style={styles.buttonText}>{enemy.name}</Text>\n                <Text style={[styles.buttonText, { opacity: 0.7, fontSize: 12 }]}>\n                  HP: {enemy.hp} • AC: {enemy.ac}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, { backgroundColor: THEME.background.secondary, marginTop: 10 }]}\n            onPress={onClose}\n          >\n            <Text style={styles.buttonText}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\nexport default function App() {\n  // Add calculateModifier here\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  // State declarations\n  const [roomCode, setRoomCode] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isJoining, setIsJoining] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [showRoomModal, setShowRoomModal] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [zoomLevel, setZoomLevel] = useState(isSmallScreen ? 0.8 : 1);\n  const [tokens, setTokens] = useState({});\n  const [currentColor, setCurrentColor] = useState(COLORS[0]);\n  const [initiative, setInitiative] = useState([]);\n  const [inCombat, setInCombat] = useState(false);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [layers, setLayers] = useState(initialGameState.layers);\n  const [diceHistory, setDiceHistory] = useState([]);\n  const [advantage, setAdvantage] = useState(false);\n  const [modifier, setModifier] = useState(0);\n  const [selectedToken, setSelectedToken] = useState(null);\n  const [showTokenModal, setShowTokenModal] = useState(false);\n  const [partyLoot, setPartyLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  });\n  const [showPartyLoot, setShowPartyLoot] = useState(false);\n  const [diceQuantity, setDiceQuantity] = useState(1);\n  const [characters, setCharacters] = useState([]);\n  const [showCharacterSheet, setShowCharacterSheet] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [showInventory, setShowInventory] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showPlayerNameModal, setShowPlayerNameModal] = useState(true);\n  const [rollType, setRollType] = useState('normal'); // 'normal', 'advantage', or 'disadvantage'\n  const [diceResult, setDiceResult] = useState(null);\n  const [showDiceResult, setShowDiceResult] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [isDM, setIsDM] = useState(false);\n  const [showEnemySelect, setShowEnemySelect] = useState(false);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n  const [storyText, setStoryText] = useState('');\n\n  // Refs\n  const firebaseRef = useRef(null);\n  const unsubscribeRef = useRef(null);\n\n  // Helper Functions\n  const handleDisconnect = useCallback(() => {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n\n      // Reset room-specific state\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n      // Don't clear characters or player name\n\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n\n  const handleInitiativeRoll = useCallback(() => {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n\n    const rolls = Object.entries(tokens).map(([position, token]) => {\n      const roll = Math.floor(Math.random() * 20) + 1;\n      const initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position,\n        initiative,\n        details: `${token.name} (${initiative})`\n      };\n    });\n\n    rolls.sort((a, b) => b.initiative - a.initiative);\n\n    if (firebaseRef.current) {\n      set(firebaseRef.current, {\n        ...initialGameState,\n        tokens,\n        layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      });\n    }\n\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n\n  const rollDice = useCallback((sides) => {\n    const allRolls = [];\n\n    // Roll for each die in quantity\n    for (let d = 0; d < diceQuantity; d++) {\n      const rolls = [];\n      const numRolls = rollType !== 'normal' ? 2 : 1;\n\n      // Roll with advantage/disadvantage if enabled\n      for (let i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n\n      const finalRoll = rollType === 'advantage' \n        ? Math.max(...rolls) \n        : rollType === 'disadvantage'\n          ? Math.min(...rolls)\n          : rolls[0];\n\n      allRolls.push({\n        rolls,\n        total: finalRoll\n      });\n    }\n\n    // Calculate grand total including modifier\n    const grandTotal = allRolls.reduce((sum, roll) => sum + roll.total, 0) + modifier;\n\n    const newResult = {\n      dice: `${diceQuantity}d${sides}`,\n      rolls: allRolls.map(r => r.rolls).flat(),\n      individualTotals: allRolls.map(r => r.total),\n      modifier,\n      rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n\n    setDiceHistory(prev => [newResult, ...prev.slice(0, 49)]);\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n\n  const handleCellPress = useCallback(async (row, col) => {\n    if (!firebaseRef.current) return;\n\n    try {\n      const position = `${row}-${col}`;\n      const newTokens = { ...tokens };\n\n      // First get current room data to preserve all existing data\n      const snapshot = await get(firebaseRef.current);\n      const currentRoomData = snapshot.val() || {};\n\n      if (tokens[position]) {\n        delete newTokens[position];\n      } else {\n        if (isDM) {\n          setSelectedPosition(position);\n          setShowEnemySelect(true);\n          return;\n        } else {\n          // Check if a character is selected\n          if (!selectedCharacter) {\n            Alert.alert('No Character Selected', 'Please select a character from your list first.');\n            return;\n          }\n\n          // Create token from selected character\n          newTokens[position] = {\n            name: selectedCharacter.name,\n            color: currentColor,\n            hp: selectedCharacter.hp,\n            maxHp: selectedCharacter.maxHp,\n            ac: selectedCharacter.ac,\n            initiativeBonus: calculateModifier(selectedCharacter.abilityScores.DEX),\n            effects: [],\n            position,\n            owner: playerName\n          };\n        }\n      }\n\n      // Update Firebase while preserving all existing data\n      await set(firebaseRef.current, {\n        ...currentRoomData,\n        tokens: newTokens,\n        lastUpdate: Date.now()\n      });\n\n      setTokens(newTokens);\n    } catch (error) {\n      console.error('Error updating tokens:', error);\n      Alert.alert('Error', 'Failed to update token');\n    }\n  }, [tokens, currentColor, selectedCharacter, playerName, isDM]);\n\n  // Update the savePlayerData function\n  const savePlayerData = useCallback(async (updatedCharacters) => {\n    if (!playerName || !roomCode) return;\n\n    try {\n      // Save to both the room and a separate players collection\n      const roomPlayerRef = ref(database, `rooms/${roomCode}/players/${playerName}`);\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n\n      const playerData = {\n        characters: updatedCharacters,\n        lastUpdate: Date.now()\n      };\n\n      // Update both locations\n      await Promise.all([\n        set(roomPlayerRef, playerData),\n        set(globalPlayerRef, playerData)\n      ]);\n    } catch (error) {\n      console.error('Error saving player data:', error);\n      Alert.alert('Error', 'Failed to save character data');\n    }\n  }, [playerName, roomCode]);\n\n  // Update the connectToRoom function\n  const connectToRoom = useCallback(async (code) => {\n    if (!code.trim() || !playerName) {\n      Alert.alert(\"Error\", \"Please enter a room code and player name\");\n      return;\n    }\n\n    setIsJoining(true);\n    setIsLoading(true);\n\n    try {\n      // First try to load player's global data\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n      const playerSnapshot = await get(globalPlayerRef);\n      if (playerSnapshot.exists()) {\n        const playerData = playerSnapshot.val();\n        setCharacters(playerData.characters || []);\n      }\n\n      const gameRef = ref(database, `rooms/${code}`);\n      firebaseRef.current = gameRef;\n\n      // Check if room exists\n      const snapshot = await get(gameRef);\n      if (!snapshot.exists()) {\n        await set(gameRef, initialGameState);\n      }\n\n      // Set up real-time listener\n      const unsubscribe = onValue(gameRef, (snapshot) => {\n        const data = snapshot.val();\n        if (data) {\n          setTokens(data.tokens || {});\n          setLayers(data.layers || initialGameState.layers);\n          setInitiative(data.initiative || []);\n          setInCombat(data.inCombat || false);\n          setCurrentTurn(data.currentTurn || 0);\n          setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n          setStoryText(data.campaignStory?.text || '');\n\n          // Update characters from room data if they exist\n          if (data.players && data.players[playerName]) {\n            setCharacters(data.players[playerName].characters || []);\n          }\n        }\n      });\n\n      unsubscribeRef.current = unsubscribe;\n      setRoomCode(code);\n      setShowRoomModal(false);\n      setIsConnected(true);\n\n    } catch (error) {\n      console.error('Connection error:', error);\n      Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n      setIsConnected(false);\n    } finally {\n      setIsJoining(false);\n      setIsLoading(false);\n    }\n  }, [playerName]);\n\n  // Effects\n  useEffect(() => {\n    const handleOffline = () => {\n      Alert.alert(\n        'Connection Lost',\n        'Please check your internet connection',\n        [{ text: 'OK' }]\n      );\n    };\n\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n\n  // Add to styles\n  const layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%',\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10,\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10,\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1,\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold',\n    },\n    characterItem: {\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 5,\n      backgroundColor: THEME.background.secondary,\n    },\n    characterInfo: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontWeight: 'bold',\n    },\n    characterDetails: {\n      color: THEME.text.light,\n      opacity: 0.8,\n    },\n  };\n\n  // Add the delete function in App component\n  const handleDeleteCharacter = useCallback(async () => {\n    if (!selectedCharacter) return;\n\n    try {\n      const newCharacters = characters.filter(char => char.name !== selectedCharacter.name);\n      setCharacters(newCharacters);\n      await savePlayerData(newCharacters);\n      setSelectedCharacter(null);\n      setShowDeleteModal(false);\n    } catch (error) {\n      console.error('Error deleting character:', error);\n      Alert.alert('Error', 'Failed to delete character');\n    }\n  }, [selectedCharacter, characters, savePlayerData]);\n\n  // Add the handleEnemySelect function\n  const handleEnemySelect = useCallback(async (enemy) => {\n    if (!selectedPosition || !firebaseRef.current) return;\n\n    try {\n      const newTokens = { ...tokens };\n      newTokens[selectedPosition] = {\n        ...enemy,\n        position: selectedPosition,\n        effects: [],\n        owner: 'DM'\n      };\n\n      // First get current room data to preserve all existing data\n      const snapshot = await get(firebaseRef.current);\n      const currentRoomData = snapshot.val() || {};\n\n      // Update Firebase while preserving all existing data\n      await set(firebaseRef.current, {\n        ...currentRoomData,\n        tokens: newTokens,\n        lastUpdate: Date.now()\n      });\n\n      setTokens(newTokens);\n      setShowEnemySelect(false);\n      setSelectedPosition(null);\n    } catch (error) {\n      console.error('Error adding enemy:', error);\n      Alert.alert('Error', 'Failed to add enemy');\n    }\n  }, [selectedPosition, tokens]);\n\n  // Main render return\n  return (\n    <SafeAreaView style={[styles.container, isDarkMode && styles.darkMode]}>\n      <View style={styles.container}>\n        {/* Modals stay at the top level */}\n        <TokenModal \n          showTokenModal={showTokenModal}\n          setShowTokenModal={setShowTokenModal}\n          selectedToken={selectedToken}\n          setSelectedToken={setSelectedToken}\n          tokens={tokens}\n          firebaseRef={firebaseRef}\n          initialGameState={initialGameState}\n          layers={layers}\n          initiative={initiative}\n          inCombat={inCombat}\n          currentTurn={currentTurn}\n          THEME={THEME}\n        />\n\n        <RoomModal \n          showRoomModal={showRoomModal}\n          setShowRoomModal={setShowRoomModal}\n          isConnected={isConnected}\n          roomCode={roomCode}\n          setRoomCode={setRoomCode}\n          isJoining={isJoining}\n          connectToRoom={connectToRoom}\n        />\n\n        <PlayerNameModal\n          visible={showPlayerNameModal && !playerName}\n          onSubmit={(name) => {\n            setPlayerName(name);\n            setShowPlayerNameModal(false);\n            setIsConnected(true);\n          }}\n        />\n\n        <DiceResultModal\n          visible={showDiceResult}\n          result={diceResult}\n          onClose={() => setShowDiceResult(false)}\n        />\n\n        <PartyLootModal\n          visible={showPartyLoot}\n          onClose={() => setShowPartyLoot(false)}\n          partyLoot={partyLoot}\n          playerName={playerName}\n          onUpdate={(updatedLoot) => {\n            setPartyLoot(updatedLoot);\n            if (firebaseRef.current) {\n              set(firebaseRef.current, {\n                ...initialGameState,\n                tokens,\n                layers,\n                initiative,\n                inCombat,\n                currentTurn,\n                partyLoot: updatedLoot\n              });\n            }\n          }}\n        />\n\n        <CharacterSheetModal\n          visible={showCharacterSheet}\n          onClose={() => setShowCharacterSheet(false)}\n          character={selectedCharacter || {\n            name: '',\n            class: '',\n            level: 1,\n            owner: playerName,\n            proficiencyBonus: 2,\n            hp: 0,\n            maxHp: 0,\n            ac: 10,\n            abilityScores: {\n              STR: 10,\n              DEX: 10,\n              CON: 10,\n              INT: 10,\n              WIS: 10,\n              CHA: 10\n            },\n            proficientSkills: [],\n            currency: {\n              CP: 0,\n              SP: 0,\n              EP: 0,\n              GP: 0,\n              PP: 0\n            },\n            items: [],\n            inventory: []\n          }}\n          characters={characters}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n\n              // Create new array with updated character\n              const newCharacters = selectedCharacter\n                ? characters.map(char => \n                    char.name === selectedCharacter.name ? updatedCharacter : char\n                  )\n                : [...characters, updatedCharacter];\n\n              // Update local state first\n              setCharacters(newCharacters);\n\n              // Save to Firebase\n              const playerRef = ref(database, `players/${playerName}`);\n              await set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n\n              // Also save to room data while preserving campaign story\n              if (firebaseRef.current) {\n                // First get the current room data\n                const roomSnapshot = await get(firebaseRef.current);\n                const currentRoomData = roomSnapshot.val() || {};\n                \n                // Update the room data while preserving campaign story and other data\n                await set(firebaseRef.current, {\n                  ...currentRoomData,\n                  tokens,\n                  layers,\n                  initiative,\n                  inCombat,\n                  currentTurn,\n                  partyLoot,\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                });\n              }\n\n              setShowCharacterSheet(false);\n\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          }}\n        />\n\n        <InventoryModal\n          visible={showInventory}\n          onClose={() => setShowInventory(false)}\n          character={selectedCharacter}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              const newCharacters = characters.map(char => \n                char.name === selectedCharacter.name ? updatedCharacter : char\n              );\n\n              setCharacters(newCharacters);\n              await savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          }}\n        />\n\n        {!isConnected ? (\n          <View style={styles.loadingContainer}>\n            {isLoading ? (\n              <View style={{ alignItems: 'center' }}>\n                <ActivityIndicator size=\"large\" color={THEME.accent} />\n                <Text style={[styles.loadingText, { marginTop: 20 }]}>\n                  Connecting to room...\n                </Text>\n              </View>\n            ) : (\n              <Text style={styles.loadingText}>\n                Enter a room code to begin\n              </Text>\n            )}\n          </View>\n        ) : (\n          <>\n            <View style={styles.header}>\n              <Text style={styles.title}>D&D Combat Tracker</Text>\n              <ScrollView \n                horizontal={isSmallScreen} \n                showsHorizontalScrollIndicator={false}\n                contentContainerStyle={styles.controls}\n              >\n                <TouchableOpacity \n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={() => setShowRoomModal(true)}\n                >\n                  <Text style={styles.buttonText}>Room: {roomCode}</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={handleInitiativeRoll}\n                >\n                  <Text style={styles.buttonText}>Roll Initiative</Text>\n                </TouchableOpacity>\n\n                {inCombat && (\n                  <>\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.success }]}\n                      onPress={() => {\n                        const nextTurn = (currentTurn + 1) % initiative.length;\n                        setCurrentTurn(nextTurn);\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative,\n                            inCombat: true,\n                            currentTurn: nextTurn\n                          });\n                        }\n                      }}\n                    >\n                      <Text style={styles.buttonText}>Next Turn</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                      onPress={() => {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0\n                          });\n                        }\n                        setInitiative([]);\n                        setInCombat(false);\n                        setCurrentTurn(0);\n                      }}\n                    >\n                      <Text style={styles.buttonText}>End Combat</Text>\n                    </TouchableOpacity>\n                  </>\n                )}\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                  onPress={() => {\n                    Alert.alert(\n                      \"Leave Room\",\n                      \"Are you sure you want to leave this room?\",\n                      [\n                        { text: \"Cancel\", style: \"cancel\" },\n                        { \n                          text: \"Leave\", \n                          style: \"destructive\",\n                          onPress: () => {\n                            // Disconnect from Firebase\n                            if (unsubscribeRef.current) {\n                              unsubscribeRef.current();\n                              unsubscribeRef.current = null;\n                            }\n                            if (firebaseRef.current) {\n                              off(firebaseRef.current);\n                              firebaseRef.current = null;\n                            }\n\n                            // Reset state\n                            setIsConnected(false);\n                            setRoomCode('');\n                            setTokens({});\n                            setInitiative([]);\n                            setInCombat(false);\n                            setCurrentTurn(0);\n                            setPartyLoot(initialGameState.partyLoot);\n                            setShowRoomModal(true);\n                            setShowPlayerNameModal(true);\n                          }\n                        }\n                      ]\n                    );\n                  }}\n                >\n                  <Text style={styles.buttonText}>Leave Room</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity \n                  style={[\n                    styles.controlButton,\n                    isDM && styles.dmToggleActive\n                  ]}\n                  onPress={() => setIsDM(!isDM)}\n                >\n                  <Text style={styles.buttonText}>DM Mode</Text>\n                </TouchableOpacity>\n              </ScrollView>\n            </View>\n            <ScrollView style={styles.content}>\n              <View style={styles.mainArea}>\n                {/* Left Sidebar - Dice Roller */}\n                <View style={styles.leftSidebar}>\n                  <View style={diceStyles.dicePanel}>\n                    <Text style={diceStyles.diceTitle}>Dice Roller</Text>\n                    <View style={diceStyles.diceControls}>\n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.controlGroup}>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'advantage' && diceStyles.controlActive,\n                              rollType === 'advantage' && { backgroundColor: THEME.success }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'advantage' ? 'normal' : 'advantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Advantage</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'disadvantage' && diceStyles.controlActive,\n                              rollType === 'disadvantage' && { backgroundColor: THEME.danger }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'disadvantage' ? 'normal' : 'disadvantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Disadvantage</Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n\n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.modifierGroup}>\n                          <Text style={diceStyles.modifierLabel}>Modifier</Text>\n                          <TextInput\n                            style={diceStyles.modifierInput}\n                            value={String(modifier)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 0;\n                              setModifier(num);\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                        <View style={diceStyles.quantityGroup}>\n                          <Text style={diceStyles.quantityLabel}>Quantity</Text>\n                          <TextInput\n                            style={diceStyles.quantityInput}\n                            value={String(diceQuantity)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 1;\n                              setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                      </View>\n                    </View>\n\n                    <View style={diceStyles.diceGrid}>\n                      {DICE_TYPES.map(({ sides }) => (\n                        <TouchableOpacity\n                          key={sides}\n                          style={[diceStyles.diceButton, { backgroundColor: THEME.background.secondary }]}\n                          onPress={() => {\n                            const rolls = [];\n                            for (let i = 0; i < diceQuantity; i++) {\n                              if (rollType !== 'normal') {\n                                const roll1 = Math.floor(Math.random() * sides) + 1;\n                                const roll2 = Math.floor(Math.random() * sides) + 1;\n                                rolls.push(rollType === 'advantage' ? Math.max(roll1, roll2) : Math.min(roll1, roll2));\n                              } else {\n                                rolls.push(Math.floor(Math.random() * sides) + 1);\n                              }\n                            }\n\n                            const total = rolls.reduce((sum, roll) => sum + roll, 0) + modifier;\n                            const result = {\n                              dice: `${diceQuantity}d${sides}`,\n                              rolls,\n                              modifier,\n                              rollType,\n                              total\n                            };\n\n                            setDiceResult(result);\n                            setShowDiceResult(true);\n                            Vibration.vibrate(50);\n                          }}\n                        >\n                          <Text style={diceStyles.diceButtonText}>d{sides}</Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  </View>\n\n                  {/* Player Tools Panel */}\n                  <View style={styles.infoPanel}>\n                    <Text style={styles.infoPanelTitle}>Player Tools</Text>\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll = Math.floor(Math.random() * 20) + 1;\n                          setDiceResult({\n                            dice: \"d20\",\n                            rolls: [roll],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: roll\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick d20</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll1 = Math.floor(Math.random() * 20) + 1;\n                          const roll2 = Math.floor(Math.random() * 20) + 1;\n                          const total = Math.max(roll1, roll2);\n                          setDiceResult({\n                            dice: \"d20 with advantage\",\n                            rolls: [roll1, roll2],\n                            modifier: 0,\n                            rollType: 'advantage',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Advantage</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const damage = Math.floor(Math.random() * 8) + 1;\n                          setDiceResult({\n                            dice: \"d8\",\n                            rolls: [damage],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: damage\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Damage</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll1 = Math.floor(Math.random() * 20) + 1;\n                          const roll2 = Math.floor(Math.random() * 20) + 1;\n                          const total = Math.min(roll1, roll2);\n                          setDiceResult({\n                            dice: \"d20 with disadvantage\",\n                            rolls: [roll1, roll2],\n                            modifier: 0,\n                            rollType: 'disadvantage',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Disadvantage</Text>\n                      </TouchableOpacity>\n                    </View>\n\n                    <View style={styles.divider} />\n\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, { backgroundColor: THEME.accent }]}\n                        onPress={() => {\n                          const rolls = [\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1\n                          ].sort((a, b) => b - a);\n                          // Drop lowest roll\n                          rolls.pop();\n                          const total = rolls.reduce((sum, roll) => sum + roll, 0);\n                          setDiceResult({\n                            dice: \"4d6 drop lowest\",\n                            rolls: rolls,\n                            modifier: 0,\n                            rollType: 'normal',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Roll Ability Score</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                        onPress={() => {\n                          const roll = Math.floor(Math.random() * 100) + 1;\n                          setDiceResult({\n                            dice: \"d100\",\n                            rolls: [roll],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: roll\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Percentile Roll</Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n\n                {/* Grid Section */}\n                <View style={styles.gridSection}>\n                  <ScrollView \n                    horizontal \n                    contentContainerStyle={{ minWidth: '100%' }}\n                  >\n                    <ScrollView>\n                      <View style={[\n                        styles.gridContainer,\n                        { transform: [{ scale: zoomLevel }] }\n                      ]}>\n                        {/* Color Picker */}\n                        <View style={styles.colorPicker}>\n                          {COLORS.map(color => (\n                            <TouchableOpacity\n                              key={color}\n                              style={[\n                                styles.colorButton,\n                                { backgroundColor: color },\n                                color === currentColor && styles.selectedColor\n                              ]}\n                              onPress={() => setCurrentColor(color)}\n                            />\n                          ))}\n                        </View>\n\n                        {/* Grid */}\n                        {Array.from({ length: GRID_SIZE }).map((_, row) => (\n                          <View key={row} style={styles.row}>\n                            {Array.from({ length: GRID_SIZE }).map((_, col) => {\n                              const position = `${row}-${col}`;\n                              const token = tokens[position];\n                              const isCurrentTurn = inCombat && \n                                initiative[currentTurn]?.position === position;\n\n                              return (\n                                <TouchableOpacity\n                                  key={col}\n                                  style={[\n                                    styles.cell,\n                                    token && { backgroundColor: token.color },\n                                    isCurrentTurn && styles.currentTurn\n                                  ]}\n                                  onPress={() => handleCellPress(row, col)}\n                                  onLongPress={() => {\n                                    if (token) {\n                                      setSelectedToken({ ...token, position });\n                                      setShowTokenModal(true);\n                                    }\n                                  }}\n                                >\n                                  {token && (\n                                    <View style={styles.tokenContent}>\n                                      <Text style={[\n                                        styles.tokenText,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]} numberOfLines={1}>\n                                        {token.name}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenHp,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        HP: {token.hp}/{token.maxHp}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenHp,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        AC: {token.ac}\n                                      </Text>\n                                      {token.effects && token.effects.length > 0 && (\n                                        <View style={statusStyles.tokenEffects}>\n                                          {token.effects.map(effect => {\n                                            const statusEffect = STATUS_EFFECTS.find(e => e.id === effect);\n                                            return statusEffect ? (\n                                              <Text key={effect} style={statusStyles.effectIcon}>\n                                                {statusEffect.icon}\n                                              </Text>\n                                            ) : null;\n                                          })}\n                                        </View>\n                                      )}\n                                    </View>\n                                  )}\n                                </TouchableOpacity>\n                              );\n                            })}\n                          </View>\n                        ))}\n                      </View>\n                    </ScrollView>\n                  </ScrollView>\n                  <GridZoomControls \n                    zoomLevel={zoomLevel}\n                    setZoomLevel={setZoomLevel}\n                  />\n\n                  {/* Campaign Story Panel */}\n                  <View style={[styles.infoPanel, { marginTop: 20 }]}>\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 10 }}>\n                      <Text style={styles.infoPanelTitle}>Campaign Story</Text>\n                      {isDM && (\n                        <TouchableOpacity\n                          style={[styles.quickActionButton, { backgroundColor: THEME.accent, width: 100 }]}\n                          onPress={() => {\n                            if (firebaseRef.current) {\n                              // First get the current room data\n                              get(firebaseRef.current).then((snapshot) => {\n                                const currentRoomData = snapshot.val() || {};\n                                \n                                // Update the room data while preserving all existing data\n                                set(firebaseRef.current, {\n                                  ...currentRoomData,\n                                  campaignStory: {\n                                    text: storyText,\n                                    lastUpdate: Date.now(),\n                                    updatedBy: playerName\n                                  }\n                                });\n                              });\n                            }\n                          }}\n                        >\n                          <Text style={styles.quickActionText}>Save Story</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n                    <TextInput\n                      style={[\n                        styles.input,\n                        {\n                          height: 200,\n                          textAlignVertical: 'top',\n                          padding: 10,\n                          backgroundColor: THEME.background.secondary,\n                          color: THEME.text.light,\n                          fontSize: 14,\n                          lineHeight: 20,\n                          marginBottom: 10\n                        }\n                      ]}\n                      multiline={true}\n                      value={storyText}\n                      onChangeText={isDM ? setStoryText : undefined}\n                      editable={isDM}\n                      placeholder=\"Type or paste your campaign story here...\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    {initialGameState.campaignStory?.updatedBy && (\n                      <Text style={[styles.infoLabel, { textAlign: 'right' }]}>\n                        Last updated by {initialGameState.campaignStory.updatedBy}\n                      </Text>\n                    )}\n                  </View>\n                </View>\n\n                {/* Right Sidebar - Character Management & Combat */}\n                <View style={styles.rightSidebar}>\n                  {/* Quick Actions */}\n                  <View style={styles.quickActions}>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={() => setShowCharacterSheet(true)}\n                    >\n                      <Text style={styles.quickActionText}>New Character</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={() => setShowPartyLoot(true)}\n                    >\n                      <Text style={styles.quickActionText}>Party Loot</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={handleInitiativeRoll}\n                    >\n                      <Text style={styles.quickActionText}>Roll Initiative</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={[styles.quickActionButton, { backgroundColor: THEME.danger }]}\n                      onPress={() => {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens: {},\n                            layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0,\n                            partyLoot,\n                            characters\n                          });\n                          setTokens({});\n                          setInitiative([]);\n                          setInCombat(false);\n                          setCurrentTurn(0);\n                        }\n                      }}\n                    >\n                      <Text style={styles.quickActionText}>Clear Board</Text>\n                    </TouchableOpacity>\n                  </View>\n\n                  {/* Character Management Panel */}\n                  <View style={[styles.infoPanel, { marginBottom: 15 }]}>\n                    <Text style={styles.infoPanelTitle}>Characters</Text>\n                    <ScrollView style={{ maxHeight: 200 }}>\n                      {characters\n                        .filter(char => char.owner === playerName)\n                        .map((char, index) => (\n                          <TouchableOpacity\n                            key={index}\n                            style={[\n                              layoutStyles.characterItem,\n                              selectedCharacter?.name === char.name && { backgroundColor: THEME.accent + '40' }\n                            ]}\n                            onPress={() => setSelectedCharacter(char)}\n                          >\n                            <View style={layoutStyles.characterInfo}>\n                              <View>\n                                <Text style={layoutStyles.characterName}>{char.name}</Text>\n                                <Text style={layoutStyles.characterDetails}>\n                                  Level {char.level} {char.class}\n                                </Text>\n                              </View>\n                              <View style={styles.statBadge}>\n                                <Text style={styles.statBadgeText}>\n                                  HP: {char.hp}/{char.maxHp}\n                                </Text>\n                              </View>\n                            </View>\n                          </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                    \n                    {selectedCharacter && (\n                      <>\n                        <View style={styles.divider} />\n                        <View style={styles.infoGrid}>\n                          <TouchableOpacity\n                            style={[styles.quickActionButton, { backgroundColor: THEME.accent }]}\n                            onPress={() => setShowCharacterSheet(true)}\n                          >\n                            <Text style={styles.quickActionText}>Character Sheet</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                            onPress={() => setShowInventory(true)}\n                          >\n                            <Text style={styles.quickActionText}>Inventory</Text>\n                          </TouchableOpacity>\n                        </View>\n                      </>\n                    )}\n                  </View>\n\n                  {/* Combat Tracker Panel */}\n                  <View style={styles.infoPanel}>\n                    <Text style={styles.infoPanelTitle}>Combat Tracker</Text>\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, inCombat ? { backgroundColor: THEME.danger } : {}]}\n                        onPress={() => {\n                          if (inCombat) {\n                            if (firebaseRef.current) {\n                              set(firebaseRef.current, {\n                                ...initialGameState,\n                                tokens,\n                                layers,\n                                initiative: [],\n                                inCombat: false,\n                                currentTurn: 0\n                              });\n                            }\n                            setInitiative([]);\n                            setInCombat(false);\n                            setCurrentTurn(0);\n                          } else {\n                            handleInitiativeRoll();\n                          }\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>\n                          {inCombat ? 'End Combat' : 'Start Combat'}\n                        </Text>\n                      </TouchableOpacity>\n                      \n                      {inCombat && (\n                        <TouchableOpacity\n                          style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                          onPress={() => {\n                            const nextTurn = (currentTurn + 1) % initiative.length;\n                            setCurrentTurn(nextTurn);\n                            if (firebaseRef.current) {\n                              set(firebaseRef.current, {\n                                ...initialGameState,\n                                tokens,\n                                layers,\n                                initiative,\n                                inCombat: true,\n                                currentTurn: nextTurn\n                              });\n                            }\n                          }}\n                        >\n                          <Text style={styles.quickActionText}>Next Turn</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n\n                    {inCombat && initiative.length > 0 && (\n                      <>\n                        <View style={styles.divider} />\n                        <Text style={[styles.infoPanelTitle, { fontSize: 14 }]}>Current Turn</Text>\n                        <View style={[styles.infoCard, { marginBottom: 10 }]}>\n                          <Text style={styles.infoValue}>\n                            {tokens[initiative[currentTurn]?.position]?.name || 'Unknown'}\n                          </Text>\n                          <Text style={styles.infoLabel}>\n                            Initiative: {initiative[currentTurn]?.initiative || '0'}\n                          </Text>\n                        </View>\n                        \n                        <Text style={[styles.infoPanelTitle, { fontSize: 14 }]}>Initiative Order</Text>\n                        <ScrollView style={{ maxHeight: 150 }}>\n                          {initiative.map((item, index) => {\n                            const token = tokens[item.position];\n                            if (!token) return null;\n                            return (\n                              <View \n                                key={item.position}\n                                style={[\n                                  styles.infoCard,\n                                  { marginBottom: 5 },\n                                  index === currentTurn && { backgroundColor: THEME.accent + '40' }\n                                ]}\n                              >\n                                <Text style={styles.infoValue}>{token.name}</Text>\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                                  <Text style={styles.infoLabel}>Initiative: {item.initiative}</Text>\n                                  <Text style={styles.infoLabel}>HP: {token.hp}/{token.maxHp}</Text>\n                                </View>\n                              </View>\n                            );\n                          })}\n                        </ScrollView>\n                      </>\n                    )}\n                  </View>\n                </View>\n              </View>\n            </ScrollView>\n          </>\n        )}\n      </View>\n      <DeleteCharacterModal\n        visible={showDeleteModal}\n        character={selectedCharacter}\n        onClose={() => setShowDeleteModal(false)}\n        onConfirm={handleDeleteCharacter}\n      />\n      <EnemySelectModal\n        visible={showEnemySelect}\n        onClose={() => {\n          setShowEnemySelect(false);\n          setSelectedPosition(null);\n        }}\n        onSelect={handleEnemySelect}\n      />\n    </SafeAreaView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}