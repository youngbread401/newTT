{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, get, off } from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from \"./components/DiceModel\";\nimport ColorPicker from 'react-native-wheel-color-picker';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\nvar app = initializeApp(firebaseConfig);\nvar database = getDatabase(app);\nvar LETTERS = Array.from({\n  length: 26\n}, function (_, i) {\n  return String.fromCharCode(65 + i);\n});\nvar COLORS = ['#4527A0', '#4A90E2', '#7C4DFF', '#00BFA5', '#3F51B5', '#673AB7', '#2196F3', '#B39DDB', '#FF5252', '#FF4081', '#E91E63', '#9C27B0', '#009688', '#4CAF50', '#8BC34A', '#CDDC39', '#FFC107', '#FF9800', '#FF5722', '#795548', '#607D8B', '#F44336', '#E53935', '#D32F2F', '#C2185B', '#7B1FA2', '#512DA8', '#303F9F', '#1976D2', '#0288D1', '#0097A7', '#00796B', '#388E3C', '#689F38', '#AFB42B', '#FBC02D', '#FFA000', '#F57C00', '#E64A19', '#5D4037'];\nvar GRID_SIZE = 10;\nvar ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nvar SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nvar CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nvar DICE_TYPES = [{\n  sides: 4,\n  color: '#FF6B6B'\n}, {\n  sides: 6,\n  color: '#4ECDC4'\n}, {\n  sides: 8,\n  color: '#45B7D1'\n}, {\n  sides: 10,\n  color: '#96CEB4'\n}, {\n  sides: 12,\n  color: '#FFEEAD'\n}, {\n  sides: 20,\n  color: '#D4A5A5'\n}, {\n  sides: 100,\n  color: '#9B59B6'\n}];\nvar STATUS_EFFECTS = [{\n  id: 'blinded',\n  name: 'Blinded',\n  icon: '👁️'\n}, {\n  id: 'charmed',\n  name: 'Charmed',\n  icon: '💕'\n}, {\n  id: 'deafened',\n  name: 'Deafened',\n  icon: '👂'\n}, {\n  id: 'frightened',\n  name: 'Frightened',\n  icon: '😨'\n}, {\n  id: 'grappled',\n  name: 'Grappled',\n  icon: '🤼'\n}, {\n  id: 'incapacitated',\n  name: 'Incapacitated',\n  icon: '💫'\n}, {\n  id: 'invisible',\n  name: 'Invisible',\n  icon: '👻'\n}, {\n  id: 'paralyzed',\n  name: 'Paralyzed',\n  icon: '⚡'\n}, {\n  id: 'petrified',\n  name: 'Petrified',\n  icon: '🗿'\n}, {\n  id: 'poisoned',\n  name: 'Poisoned',\n  icon: '🤢'\n}, {\n  id: 'prone',\n  name: 'Prone',\n  icon: '⬇️'\n}, {\n  id: 'restrained',\n  name: 'Restrained',\n  icon: '⛓️'\n}, {\n  id: 'stunned',\n  name: 'Stunned',\n  icon: '💫'\n}, {\n  id: 'unconscious',\n  name: 'Unconscious',\n  icon: '💤'\n}];\nvar COMMON_ENEMIES = [{\n  name: 'Bandit',\n  hp: 11,\n  maxHp: 11,\n  ac: 12,\n  initiativeBonus: 1,\n  color: '#8B4513'\n}, {\n  name: 'Wolf',\n  hp: 11,\n  maxHp: 11,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#808080'\n}, {\n  name: 'Wraith',\n  hp: 67,\n  maxHp: 67,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#4A0404'\n}, {\n  name: 'Goblin',\n  hp: 7,\n  maxHp: 7,\n  ac: 15,\n  initiativeBonus: 2,\n  color: '#355E3B'\n}, {\n  name: 'Skeleton',\n  hp: 13,\n  maxHp: 13,\n  ac: 13,\n  initiativeBonus: 2,\n  color: '#E1D9D1'\n}, {\n  name: 'Zombie',\n  hp: 22,\n  maxHp: 22,\n  ac: 8,\n  initiativeBonus: -2,\n  color: '#4A412A'\n}];\nvar windowDimensions = Dimensions.get('window');\nvar isSmallScreen = windowDimensions.width < 768;\nvar THEME = {\n  primary: '#2E1F5E',\n  secondary: '#4527A0',\n  accent: '#4A90E2',\n  gold: '#7C4DFF',\n  danger: '#FF5252',\n  success: '#00BFA5',\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1A103C',\n    secondary: '#2E1F5E',\n    dark: '#150D30',\n    panel: '#3F2B85'\n  }\n};\nvar initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {},\n    aoe: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true\n  },\n  partyLoot: {\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  campaignStory: {\n    text: '',\n    lastUpdate: null,\n    updatedBy: null\n  },\n  lastUpdate: Date.now()\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%'\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%'\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start'\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1,\n    width: '100%'\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%'\n  },\n  leftSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 2 : 0\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%',\n    order: isSmallScreen ? 1 : 1\n  },\n  rightSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 3 : 2\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%'\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center'\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40'\n  },\n  diceResult: {\n    color: THEME.text.light\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%'\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent\n  },\n  initiativeText: {\n    color: THEME.text.light\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold'\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none'\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center'\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent\n  },\n  quickActions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    padding: 15,\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    marginBottom: 15\n  },\n  quickActionButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 100,\n    flex: 1\n  },\n  quickActionText: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  infoPanel: {\n    backgroundColor: THEME.background.panel,\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15\n  },\n  infoPanelTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  infoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  infoCard: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    flex: 1,\n    minWidth: 150\n  },\n  infoLabel: {\n    color: THEME.accent,\n    fontSize: 12,\n    marginBottom: 5\n  },\n  infoValue: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  statBadge: {\n    backgroundColor: THEME.accent + '20',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n    alignSelf: 'flex-start'\n  },\n  statBadgeText: {\n    color: THEME.accent,\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  divider: {\n    height: 1,\n    backgroundColor: THEME.accent + '40',\n    marginVertical: 15\n  }\n});\nvar additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%'\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  sheetSection: {\n    marginBottom: 20\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold'\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5\n  },\n  abilityMod: {\n    color: THEME.text.light\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center'\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4\n  },\n  enemyOption: {\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 8,\n    backgroundColor: THEME.background.secondary\n  },\n  dmToggle: {\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginLeft: 10\n  },\n  dmToggleActive: {\n    backgroundColor: THEME.accent\n  }\n});\nvar diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: '0px 2px 3.84px rgba(0, 0, 0, 0.25)'\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold'\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center'\n  },\n  controlActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200\n  },\n  historyScroll: {\n    padding: 10\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary\n  },\n  historyLeft: {\n    flex: 1\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  diceControls: {\n    flexDirection: 'column',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  diceContainer: {\n    width: isSmallScreen ? 80 : 100,\n    height: isSmallScreen ? 80 : 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginBottom: 5\n  }\n});\nvar statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80\n  },\n  effectActive: {\n    backgroundColor: THEME.accent\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12\n  }\n});\nvar saveGameState = function () {\n  var _ref = _asyncToGenerator(function* () {\n    if (firebaseRef.current) {\n      try {\n        yield set(firebaseRef.current, {\n          tokens: tokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          characters: characters,\n          settings: initialGameState.settings,\n          lastUpdate: Date.now()\n        });\n      } catch (error) {\n        console.error('Error saving game state:', error);\n        Alert.alert('Error', 'Failed to save game state');\n      }\n    }\n  });\n  return function saveGameState() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar CharacterSheetModal = memo(function (_ref2) {\n  var visible = _ref2.visible,\n    onClose = _ref2.onClose,\n    character = _ref2.character,\n    characters = _ref2.characters,\n    onUpdate = _ref2.onUpdate;\n  var _useState = useState(function () {\n      return {\n        name: (character == null ? void 0 : character.name) || '',\n        class: (character == null ? void 0 : character.class) || '',\n        level: (character == null ? void 0 : character.level) || 1,\n        owner: (character == null ? void 0 : character.owner) || '',\n        proficiencyBonus: (character == null ? void 0 : character.proficiencyBonus) || 2,\n        hp: (character == null ? void 0 : character.hp) || 0,\n        maxHp: (character == null ? void 0 : character.maxHp) || 0,\n        ac: (character == null ? void 0 : character.ac) || 10,\n        abilityScores: (character == null ? void 0 : character.abilityScores) || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: (character == null ? void 0 : character.proficientSkills) || [],\n        currency: (character == null ? void 0 : character.currency) || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: (character == null ? void 0 : character.items) || [],\n        inventory: (character == null ? void 0 : character.inventory) || []\n      };\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    editedCharacter = _useState2[0],\n    setEditedCharacter = _useState2[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        hp: character.hp || 0,\n        maxHp: character.maxHp || 0,\n        ac: character.ac || 10,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var handleAbilityScoreChange = function handleAbilityScoreChange(ability, value) {\n    var newScore = parseInt(value) || 0;\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        abilityScores: _objectSpread(_objectSpread({}, prev.abilityScores), {}, _defineProperty({}, ability, newScore))\n      });\n    });\n  };\n  var toggleProficiency = function toggleProficiency(skill) {\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        proficientSkills: prev.proficientSkills.includes(skill) ? prev.proficientSkills.filter(function (s) {\n          return s !== skill;\n        }) : [].concat(_toConsumableArray(prev.proficientSkills), [skill])\n      });\n    });\n  };\n  var getSkillModifier = function getSkillModifier(skill, ability) {\n    var abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    var profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n  var handleSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var updatedCharacter = _objectSpread(_objectSpread({}, character), editedCharacter);\n        onUpdate(updatedCharacter);\n      } catch (error) {\n        console.error('Error saving character:', error);\n        Alert.alert('Error', 'Failed to save character');\n      }\n    });\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(GestureScrollView, {\n          children: [_jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Character Info\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: editedCharacter.name,\n              onChangeText: function onChangeText(text) {\n                return setEditedCharacter(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Character Name\",\n              placeholderTextColor: THEME.text.light + '80'\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10\n              },\n              children: [_jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: editedCharacter.class,\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      class: text\n                    });\n                  });\n                },\n                placeholder: \"Class\",\n                placeholderTextColor: THEME.text.light + '80'\n              }), _jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: String(editedCharacter.level),\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      level: parseInt(text) || 1\n                    });\n                  });\n                },\n                placeholder: \"Level\",\n                keyboardType: \"numeric\",\n                placeholderTextColor: THEME.text.light + '80'\n              })]\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginTop: 10\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flex: 2\n                },\n                children: [_jsx(Text, {\n                  style: [styles.buttonText, {\n                    marginBottom: 5\n                  }],\n                  children: \"Hit Points\"\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    gap: 5\n                  },\n                  children: [_jsx(TextInput, {\n                    style: [styles.input, {\n                      flex: 1\n                    }],\n                    value: String(editedCharacter.hp),\n                    onChangeText: function onChangeText(text) {\n                      return setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          hp: parseInt(text) || 0\n                        });\n                      });\n                    },\n                    placeholder: \"Current HP\",\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(Text, {\n                    style: {\n                      color: THEME.text.light,\n                      alignSelf: 'center',\n                      fontSize: 18\n                    },\n                    children: \"/\"\n                  }), _jsx(TextInput, {\n                    style: [styles.input, {\n                      flex: 1\n                    }],\n                    value: String(editedCharacter.maxHp),\n                    onChangeText: function onChangeText(text) {\n                      return setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          maxHp: parseInt(text) || 0\n                        });\n                      });\n                    },\n                    placeholder: \"Max HP\",\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flex: 1\n                },\n                children: [_jsx(Text, {\n                  style: [styles.buttonText, {\n                    marginBottom: 5\n                  }],\n                  children: \"Armor Class\"\n                }), _jsx(TextInput, {\n                  style: styles.input,\n                  value: String(editedCharacter.ac),\n                  onChangeText: function onChangeText(text) {\n                    return setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        ac: parseInt(text) || 10\n                      });\n                    });\n                  },\n                  placeholder: \"AC\",\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              })]\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Ability Scores\"\n            }), _jsx(View, {\n              style: additionalStyles.abilityScores,\n              children: ABILITY_SCORES.map(function (ability) {\n                return _jsxs(View, {\n                  style: additionalStyles.abilityBox,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.abilityLabel,\n                    children: ability\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.abilityScore,\n                    value: String(editedCharacter.abilityScores[ability]),\n                    onChangeText: function onChangeText(text) {\n                      return handleAbilityScoreChange(ability, text);\n                    },\n                    keyboardType: \"numeric\",\n                    maxLength: 2,\n                    selectTextOnFocus: true\n                  }), _jsxs(Text, {\n                    style: additionalStyles.abilityMod,\n                    children: [calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : '', calculateModifier(editedCharacter.abilityScores[ability])]\n                  })]\n                }, ability);\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Skills\"\n            }), _jsx(View, {\n              style: additionalStyles.skillsList,\n              children: Object.entries(SKILLS).map(function (_ref4) {\n                var _ref5 = _slicedToArray(_ref4, 2),\n                  ability = _ref5[0],\n                  skills = _ref5[1];\n                return skills.map(function (skill) {\n                  return _jsxs(TouchableOpacity, {\n                    style: additionalStyles.skillItem,\n                    onPress: function onPress() {\n                      return toggleProficiency(skill);\n                    },\n                    children: [_jsx(View, {\n                      style: [additionalStyles.proficientDot, {\n                        backgroundColor: editedCharacter.proficientSkills.includes(skill) ? THEME.accent : THEME.background.secondary\n                      }]\n                    }), _jsx(Text, {\n                      style: additionalStyles.skillName,\n                      children: skill\n                    }), _jsxs(Text, {\n                      style: additionalStyles.skillMod,\n                      children: [getSkillModifier(skill, ability) >= 0 ? '+' : '', getSkillModifier(skill, ability)]\n                    })]\n                  }, skill);\n                });\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Inventory\"\n            }), _jsx(View, {\n              style: additionalStyles.lootSection,\n              children: CURRENCY.map(function (currency) {\n                return _jsxs(View, {\n                  style: additionalStyles.currencyRow,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.currencyLabel,\n                    children: currency\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.currencyInput,\n                    value: String(editedCharacter.currency[currency] || 0),\n                    onChangeText: function onChangeText(text) {\n                      var value = parseInt(text) || 0;\n                      setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                }, currency);\n              })\n            }), _jsxs(View, {\n              style: additionalStyles.lootSection,\n              children: [_jsxs(View, {\n                style: additionalStyles.lootHeader,\n                children: [_jsx(Text, {\n                  style: additionalStyles.sectionTitle,\n                  children: \"Items\"\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.addButton,\n                  onPress: function onPress() {\n                    setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: [].concat(_toConsumableArray(prev.items), [{\n                          name: '',\n                          quantity: 1,\n                          notes: '',\n                          addedBy: character.name\n                        }])\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"Add Item\"\n                  })\n                })]\n              }), editedCharacter.items.map(function (item, index) {\n                return _jsxs(View, {\n                  style: additionalStyles.itemRow,\n                  children: [_jsxs(View, {\n                    style: additionalStyles.itemInfo,\n                    children: [_jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        flex: 2\n                      }],\n                      value: item.name,\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          name: text\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      placeholder: \"Item name\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), _jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        width: 60\n                      }],\n                      value: String(item.quantity),\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          quantity: parseInt(text) || 1\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      keyboardType: \"numeric\",\n                      placeholder: \"Qty\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                      style: additionalStyles.removeButton,\n                      onPress: function onPress() {\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: prev.items.filter(function (_, i) {\n                              return i !== index;\n                            })\n                          });\n                        });\n                      },\n                      children: _jsx(Text, {\n                        style: styles.buttonText,\n                        children: \"\\xD7\"\n                      })\n                    })]\n                  }), _jsxs(Text, {\n                    style: additionalStyles.addedBy,\n                    children: [\"Added by: \", item.addedBy]\n                  })]\n                }, index);\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.success\n              }],\n              onPress: handleSave,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Save Changes\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n});\nvar TokenModal = memo(function (_ref6) {\n  var showTokenModal = _ref6.showTokenModal,\n    setShowTokenModal = _ref6.setShowTokenModal,\n    selectedToken = _ref6.selectedToken,\n    setSelectedToken = _ref6.setSelectedToken,\n    tokens = _ref6.tokens,\n    firebaseRef = _ref6.firebaseRef,\n    initialGameState = _ref6.initialGameState,\n    layers = _ref6.layers,\n    initiative = _ref6.initiative,\n    inCombat = _ref6.inCombat,\n    currentTurn = _ref6.currentTurn,\n    THEME = _ref6.THEME;\n  return _jsx(Modal, {\n    visible: showTokenModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {\n      return setShowTokenModal(false);\n    },\n    children: _jsx(Pressable, {\n      style: [styles.modalOverlay, {\n        cursor: 'default'\n      }],\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      },\n      children: _jsx(View, {\n        style: styles.modalContent,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.select({\n            ios: 'padding',\n            android: 'height'\n          }),\n          style: styles.modalContainer,\n          keyboardVerticalOffset: Platform.select({\n            ios: 64,\n            android: 0\n          }),\n          children: _jsxs(Pressable, {\n            onPress: function onPress(e) {\n              return e.stopPropagation();\n            },\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Edit Token\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: selectedToken == null ? void 0 : selectedToken.name,\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Token Name\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              spellCheck: false,\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginBottom: 10\n              },\n              children: [_jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.hp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var hp = parseInt(text) || 0;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        hp: Math.max(0, hp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Current HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.maxHp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var maxHp = parseInt(text) || 1;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        maxHp: Math.max(1, maxHp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Max HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              })]\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: String((selectedToken == null ? void 0 : selectedToken.initiativeBonus) || '0'),\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    initiativeBonus: parseInt(text) || 0\n                  });\n                });\n              },\n              keyboardType: \"numeric\",\n              placeholder: \"Initiative Bonus\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: statusStyles.effectsContainer,\n              children: [_jsx(Text, {\n                style: statusStyles.effectsTitle,\n                children: \"Status Effects\"\n              }), _jsx(View, {\n                style: statusStyles.effectsGrid,\n                children: STATUS_EFFECTS.map(function (effect) {\n                  var _selectedToken$effect;\n                  return _jsx(TouchableOpacity, {\n                    style: [statusStyles.effectButton, (selectedToken == null ? void 0 : (_selectedToken$effect = selectedToken.effects) == null ? void 0 : _selectedToken$effect.includes(effect.id)) && statusStyles.effectActive],\n                    onPress: function onPress() {\n                      setSelectedToken(function (prev) {\n                        var currentEffects = prev.effects || [];\n                        var newEffects = currentEffects.includes(effect.id) ? currentEffects.filter(function (e) {\n                          return e !== effect.id;\n                        }) : [].concat(_toConsumableArray(currentEffects), [effect.id]);\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          effects: newEffects\n                        });\n                      });\n                    },\n                    children: _jsxs(Text, {\n                      style: statusStyles.effectText,\n                      children: [effect.icon, \" \", effect.name]\n                    })\n                  }, effect.id);\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.modalButtons,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    get(firebaseRef.current).then(function (snapshot) {\n                      var currentRoomData = snapshot.val() || {};\n                      var newTokens = _objectSpread({}, tokens);\n                      delete newTokens[selectedToken.position];\n                      set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                        tokens: newTokens,\n                        lastUpdate: Date.now()\n                      }));\n                      setShowTokenModal(false);\n                    });\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Delete\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    get(firebaseRef.current).then(function (snapshot) {\n                      var currentRoomData = snapshot.val() || {};\n                      var newTokens = _objectSpread(_objectSpread({}, tokens), {}, _defineProperty({}, selectedToken.position, selectedToken));\n                      set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                        tokens: newTokens,\n                        lastUpdate: Date.now()\n                      }));\n                      setShowTokenModal(false);\n                    });\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Save\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n});\nvar modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001\n  }\n});\nvar RoomModal = memo(function (_ref7) {\n  var showRoomModal = _ref7.showRoomModal,\n    setShowRoomModal = _ref7.setShowRoomModal,\n    isConnected = _ref7.isConnected,\n    roomCode = _ref7.roomCode,\n    setRoomCode = _ref7.setRoomCode,\n    isJoining = _ref7.isJoining,\n    connectToRoom = _ref7.connectToRoom;\n  if (!showRoomModal) return null;\n  return _jsx(Modal, {\n    visible: true,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    children: _jsx(View, {\n      style: [modalStyles.modalOverlay, {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)'\n      }],\n      children: _jsxs(View, {\n        style: modalStyles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Join Room\"\n        }), _jsx(TextInput, {\n          style: [styles.input, {\n            marginBottom: 15\n          }],\n          value: roomCode,\n          onChangeText: function onChangeText(text) {\n            setRoomCode(text.trim().toLowerCase());\n          },\n          placeholder: \"Enter room code...\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          editable: !isJoining,\n          autoFocus: true\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n            width: '100%'\n          }],\n          onPress: function onPress() {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          },\n          disabled: isJoining,\n          children: isJoining ? _jsxs(View, {\n            style: styles.loadingButtonContent,\n            children: [_jsx(ActivityIndicator, {\n              color: THEME.text.light\n            }), _jsx(Text, {\n              style: [styles.buttonText, {\n                marginLeft: 10\n              }],\n              children: \"Connecting...\"\n            })]\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Join Room\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar PartyLootModal = memo(function (_ref8) {\n  var visible = _ref8.visible,\n    onClose = _ref8.onClose,\n    partyLoot = _ref8.partyLoot,\n    onUpdate = _ref8.onUpdate,\n    playerName = _ref8.playerName;\n  var _useState3 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: []\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editedLoot = _useState4[0],\n    setEditedLoot = _useState4[1];\n  useEffect(function () {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: [styles.modalContent, {\n          maxHeight: '90%'\n        }],\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Party Loot\"\n        }), _jsxs(ScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (type) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: type\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedLoot.currency[type] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, type, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, type);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedLoot(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      items: [].concat(_toConsumableArray(prev.items), [{\n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedLoot.items.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    flex: 2\n                  }],\n                  value: item.name,\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      name: text\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  placeholder: \"Item name\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    width: 60\n                  }],\n                  value: String(item.quantity),\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      quantity: parseInt(text) || 1\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Qty\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.removeButton,\n                  onPress: function onPress() {\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: prev.items.filter(function (_, i) {\n                          return i !== index;\n                        })\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"\\xD7\"\n                  })\n                })]\n              }, item.id || index);\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonRow,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, styles.closeButton],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(editedLoot);\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar GridZoomControls = memo(function (_ref9) {\n  var zoomLevel = _ref9.zoomLevel,\n    setZoomLevel = _ref9.setZoomLevel;\n  var debouncedZoom = debounce(function (newZoom) {\n    setZoomLevel(newZoom);\n  }, 100);\n  return _jsxs(View, {\n    style: styles.zoomControls,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.max(0.5, zoomLevel - 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"-\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.min(2, zoomLevel + 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"+\"\n      })\n    })]\n  });\n});\nvar InventoryModal = memo(function (_ref10) {\n  var visible = _ref10.visible,\n    onClose = _ref10.onClose,\n    character = _ref10.character,\n    onUpdate = _ref10.onUpdate;\n  var _useState5 = useState({\n      currency: (character == null ? void 0 : character.currency) || {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      inventory: (character == null ? void 0 : character.inventory) || []\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editedInventory = _useState6[0],\n    setEditedInventory = _useState6[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!visible || !character) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(Text, {\n          style: additionalStyles.sectionTitle,\n          children: [character.name, \"'s Inventory\"]\n        }), _jsxs(GestureScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (currency) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: currency\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedInventory.currency[currency] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedInventory(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, currency);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedInventory(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      inventory: [].concat(_toConsumableArray(prev.inventory), [{\n                        name: '',\n                        quantity: 1,\n                        notes: '',\n                        addedBy: character.name\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedInventory.inventory.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsxs(View, {\n                  style: additionalStyles.itemInfo,\n                  children: [_jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      flex: 2\n                    }],\n                    value: item.name,\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        name: text\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    placeholder: \"Item name\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      width: 60\n                    }],\n                    value: String(item.quantity),\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        quantity: parseInt(text) || 1\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholder: \"Qty\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                    style: additionalStyles.removeButton,\n                    onPress: function onPress() {\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: prev.inventory.filter(function (_, i) {\n                            return i !== index;\n                          })\n                        });\n                      });\n                    },\n                    children: _jsx(Text, {\n                      style: styles.buttonText,\n                      children: \"\\xD7\"\n                    })\n                  })]\n                }), _jsxs(Text, {\n                  style: additionalStyles.addedBy,\n                  children: [\"Added by: \", item.addedBy]\n                })]\n              }, index);\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n                currency: editedInventory.currency,\n                inventory: editedInventory.inventory\n              }));\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar PlayerNameModal = memo(function (_ref11) {\n  var visible = _ref11.visible,\n    onSubmit = _ref11.onSubmit;\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    name = _useState8[0],\n    setName = _useState8[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Enter Your Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: setName,\n          placeholder: \"Your name\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"words\"\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.success,\n            width: '100%',\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            return onSubmit(name);\n          },\n          disabled: !name.trim(),\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Continue\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2\n  }\n});\nvar calculateModifier = function calculateModifier(score) {\n  return Math.floor((score - 10) / 2);\n};\nvar DiceResultModal = memo(function (_ref12) {\n  var visible = _ref12.visible,\n    result = _ref12.result,\n    onClose = _ref12.onClose;\n  useEffect(function () {\n    if (visible) {\n      var timer = setTimeout(onClose, 2000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [visible, onClose]);\n  if (!visible || !result) return null;\n  return _jsx(View, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 9999,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    },\n    children: _jsxs(View, {\n      style: {\n        backgroundColor: THEME.background.panel + 'E6',\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        minWidth: 200,\n        maxWidth: '90%',\n        shadowColor: '#000',\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n      },\n      children: [_jsxs(Text, {\n        style: {\n          color: THEME.text.light,\n          fontSize: 18,\n          marginBottom: 5\n        },\n        children: [result.dice, \" \", result.rollType !== 'normal' ? \"(\" + result.rollType + \")\" : '']\n      }), _jsx(Text, {\n        style: {\n          color: THEME.accent,\n          fontSize: 32,\n          fontWeight: 'bold',\n          marginBottom: 5\n        },\n        children: result.total\n      }), _jsxs(Text, {\n        style: {\n          color: THEME.text.light + '80',\n          fontSize: 14\n        },\n        children: [\"Rolls: [\", result.rolls.join(', '), \"]\", result.modifier !== 0 && \" + \" + result.modifier]\n      })]\n    })\n  });\n});\nvar DeleteCharacterModal = memo(function (_ref13) {\n  var visible = _ref13.visible,\n    character = _ref13.character,\n    onClose = _ref13.onClose,\n    onConfirm = _ref13.onConfirm;\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmName = _useState10[0],\n    setConfirmName = _useState10[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Delete Character\"\n        }), _jsxs(Text, {\n          style: [styles.buttonText, {\n            marginBottom: 10,\n            textAlign: 'center'\n          }],\n          children: [\"Type \\\"\", character == null ? void 0 : character.name, \"\\\" to confirm deletion\"]\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: confirmName,\n          onChangeText: setConfirmName,\n          placeholder: \"Character name\",\n          placeholderTextColor: THEME.text.light + '80'\n        }), _jsxs(View, {\n          style: [styles.modalButtons, {\n            marginTop: 15\n          }],\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.background.secondary\n            }],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: confirmName === (character == null ? void 0 : character.name) ? THEME.danger : THEME.background.secondary,\n              opacity: confirmName === (character == null ? void 0 : character.name) ? 1 : 0.5\n            }],\n            onPress: function onPress() {\n              if (confirmName === (character == null ? void 0 : character.name)) {\n                onConfirm();\n              }\n            },\n            disabled: confirmName !== (character == null ? void 0 : character.name),\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Delete\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar EnemySelectModal = memo(function (_ref14) {\n  var visible = _ref14.visible,\n    onClose = _ref14.onClose,\n    onSelect = _ref14.onSelect;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Select Enemy\"\n        }), _jsx(ScrollView, {\n          style: {\n            maxHeight: 300\n          },\n          children: COMMON_ENEMIES.map(function (enemy, index) {\n            return _jsxs(TouchableOpacity, {\n              style: [styles.enemyOption, {\n                backgroundColor: THEME.background.secondary\n              }],\n              onPress: function onPress() {\n                return onSelect(enemy);\n              },\n              children: [_jsx(Text, {\n                style: styles.buttonText,\n                children: enemy.name\n              }), _jsxs(Text, {\n                style: [styles.buttonText, {\n                  opacity: 0.7,\n                  fontSize: 12\n                }],\n                children: [\"HP: \", enemy.hp, \" \\u2022 AC: \", enemy.ac]\n              })]\n            }, index);\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.background.secondary,\n            marginTop: 10\n          }],\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Cancel\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar ColorWheelModal = memo(function (_ref15) {\n  var visible = _ref15.visible,\n    onClose = _ref15.onClose,\n    onSelectColor = _ref15.onSelectColor,\n    initialColor = _ref15.initialColor;\n  var _useState11 = useState(initialColor || '#FF0000'),\n    _useState12 = _slicedToArray(_useState11, 2),\n    color = _useState12[0],\n    setColor = _useState12[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: [styles.modalContent, {\n          width: isSmallScreen ? '90%' : 400,\n          padding: 20\n        }],\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Select Color\"\n        }), _jsx(View, {\n          style: {\n            height: 300,\n            marginVertical: 20\n          },\n          children: _jsx(ColorPicker, {\n            color: color,\n            onColorChange: setColor,\n            thumbSize: 30,\n            sliderSize: 30,\n            noSnap: true,\n            row: false\n          })\n        }), _jsxs(View, {\n          style: styles.modalButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.background.secondary\n            }],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onSelectColor(color);\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Select\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nexport default function App() {\n  var _initialGameState$cam, _tokens$initiative$cu, _initiative$currentTu2, _initiative$currentTu3;\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    roomCode = _useState14[0],\n    setRoomCode = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isConnected = _useState16[0],\n    setIsConnected = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isLoading = _useState18[0],\n    setIsLoading = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isJoining = _useState20[0],\n    setIsJoining = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isUpdating = _useState22[0],\n    setIsUpdating = _useState22[1];\n  var _useState23 = useState(true),\n    _useState24 = _slicedToArray(_useState23, 2),\n    showRoomModal = _useState24[0],\n    setShowRoomModal = _useState24[1];\n  var _useState25 = useState(true),\n    _useState26 = _slicedToArray(_useState25, 2),\n    isDarkMode = _useState26[0],\n    setIsDarkMode = _useState26[1];\n  var _useState27 = useState(isSmallScreen ? 0.8 : 1),\n    _useState28 = _slicedToArray(_useState27, 2),\n    zoomLevel = _useState28[0],\n    setZoomLevel = _useState28[1];\n  var _useState29 = useState({}),\n    _useState30 = _slicedToArray(_useState29, 2),\n    tokens = _useState30[0],\n    setTokens = _useState30[1];\n  var _useState31 = useState(COLORS[0]),\n    _useState32 = _slicedToArray(_useState31, 2),\n    currentColor = _useState32[0],\n    setCurrentColor = _useState32[1];\n  var _useState33 = useState([]),\n    _useState34 = _slicedToArray(_useState33, 2),\n    initiative = _useState34[0],\n    setInitiative = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    inCombat = _useState36[0],\n    setInCombat = _useState36[1];\n  var _useState37 = useState(0),\n    _useState38 = _slicedToArray(_useState37, 2),\n    currentTurn = _useState38[0],\n    setCurrentTurn = _useState38[1];\n  var _useState39 = useState(initialGameState.layers),\n    _useState40 = _slicedToArray(_useState39, 2),\n    layers = _useState40[0],\n    setLayers = _useState40[1];\n  var _useState41 = useState([]),\n    _useState42 = _slicedToArray(_useState41, 2),\n    diceHistory = _useState42[0],\n    setDiceHistory = _useState42[1];\n  var _useState43 = useState(false),\n    _useState44 = _slicedToArray(_useState43, 2),\n    advantage = _useState44[0],\n    setAdvantage = _useState44[1];\n  var _useState45 = useState(0),\n    _useState46 = _slicedToArray(_useState45, 2),\n    modifier = _useState46[0],\n    setModifier = _useState46[1];\n  var _useState47 = useState(null),\n    _useState48 = _slicedToArray(_useState47, 2),\n    selectedToken = _useState48[0],\n    setSelectedToken = _useState48[1];\n  var _useState49 = useState(false),\n    _useState50 = _slicedToArray(_useState49, 2),\n    showTokenModal = _useState50[0],\n    setShowTokenModal = _useState50[1];\n  var _useState51 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: [],\n      currentViewer: null\n    }),\n    _useState52 = _slicedToArray(_useState51, 2),\n    partyLoot = _useState52[0],\n    setPartyLoot = _useState52[1];\n  var _useState53 = useState(false),\n    _useState54 = _slicedToArray(_useState53, 2),\n    showPartyLoot = _useState54[0],\n    setShowPartyLoot = _useState54[1];\n  var _useState55 = useState(1),\n    _useState56 = _slicedToArray(_useState55, 2),\n    diceQuantity = _useState56[0],\n    setDiceQuantity = _useState56[1];\n  var _useState57 = useState([]),\n    _useState58 = _slicedToArray(_useState57, 2),\n    characters = _useState58[0],\n    setCharacters = _useState58[1];\n  var _useState59 = useState(false),\n    _useState60 = _slicedToArray(_useState59, 2),\n    showCharacterSheet = _useState60[0],\n    setShowCharacterSheet = _useState60[1];\n  var _useState61 = useState(null),\n    _useState62 = _slicedToArray(_useState61, 2),\n    selectedCharacter = _useState62[0],\n    setSelectedCharacter = _useState62[1];\n  var _useState63 = useState(false),\n    _useState64 = _slicedToArray(_useState63, 2),\n    showInventory = _useState64[0],\n    setShowInventory = _useState64[1];\n  var _useState65 = useState(''),\n    _useState66 = _slicedToArray(_useState65, 2),\n    playerName = _useState66[0],\n    setPlayerName = _useState66[1];\n  var _useState67 = useState(true),\n    _useState68 = _slicedToArray(_useState67, 2),\n    showPlayerNameModal = _useState68[0],\n    setShowPlayerNameModal = _useState68[1];\n  var _useState69 = useState('normal'),\n    _useState70 = _slicedToArray(_useState69, 2),\n    rollType = _useState70[0],\n    setRollType = _useState70[1];\n  var _useState71 = useState(null),\n    _useState72 = _slicedToArray(_useState71, 2),\n    diceResult = _useState72[0],\n    setDiceResult = _useState72[1];\n  var _useState73 = useState(false),\n    _useState74 = _slicedToArray(_useState73, 2),\n    showDiceResult = _useState74[0],\n    setShowDiceResult = _useState74[1];\n  var _useState75 = useState(false),\n    _useState76 = _slicedToArray(_useState75, 2),\n    showDeleteModal = _useState76[0],\n    setShowDeleteModal = _useState76[1];\n  var _useState77 = useState(false),\n    _useState78 = _slicedToArray(_useState77, 2),\n    isDM = _useState78[0],\n    setIsDM = _useState78[1];\n  var _useState79 = useState(false),\n    _useState80 = _slicedToArray(_useState79, 2),\n    showEnemySelect = _useState80[0],\n    setShowEnemySelect = _useState80[1];\n  var _useState81 = useState(null),\n    _useState82 = _slicedToArray(_useState81, 2),\n    selectedPosition = _useState82[0],\n    setSelectedPosition = _useState82[1];\n  var _useState83 = useState(''),\n    _useState84 = _slicedToArray(_useState83, 2),\n    storyText = _useState84[0],\n    setStoryText = _useState84[1];\n  var _useState85 = useState(false),\n    _useState86 = _slicedToArray(_useState85, 2),\n    isAoeMode = _useState86[0],\n    setIsAoeMode = _useState86[1];\n  var _useState87 = useState(false),\n    _useState88 = _slicedToArray(_useState87, 2),\n    showColorWheel = _useState88[0],\n    setShowColorWheel = _useState88[1];\n  var firebaseRef = useRef(null);\n  var unsubscribeRef = useRef(null);\n  var handleDisconnect = useCallback(function () {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n  var handleInitiativeRoll = useCallback(function () {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n    var rolls = Object.entries(tokens).map(function (_ref16) {\n      var _ref17 = _slicedToArray(_ref16, 2),\n        position = _ref17[0],\n        token = _ref17[1];\n      var roll = Math.floor(Math.random() * 20) + 1;\n      var initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position: position,\n        initiative: initiative,\n        details: token.name + \" (\" + initiative + \")\"\n      };\n    });\n    rolls.sort(function (a, b) {\n      return b.initiative - a.initiative;\n    });\n    if (firebaseRef.current) {\n      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n        tokens: tokens,\n        layers: layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      }));\n    }\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n  var rollDice = useCallback(function (sides) {\n    var allRolls = [];\n    for (var d = 0; d < diceQuantity; d++) {\n      var rolls = [];\n      var numRolls = rollType !== 'normal' ? 2 : 1;\n      for (var i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n      var finalRoll = rollType === 'advantage' ? Math.max.apply(Math, rolls) : rollType === 'disadvantage' ? Math.min.apply(Math, rolls) : rolls[0];\n      allRolls.push({\n        rolls: rolls,\n        total: finalRoll\n      });\n    }\n    var grandTotal = allRolls.reduce(function (sum, roll) {\n      return sum + roll.total;\n    }, 0) + modifier;\n    var newResult = {\n      dice: diceQuantity + \"d\" + sides,\n      rolls: allRolls.map(function (r) {\n        return r.rolls;\n      }).flat(),\n      individualTotals: allRolls.map(function (r) {\n        return r.total;\n      }),\n      modifier: modifier,\n      rollType: rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n    setDiceHistory(function (prev) {\n      return [newResult].concat(_toConsumableArray(prev.slice(0, 49)));\n    });\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n  var handleCellPress = useCallback(function () {\n    var _ref18 = _asyncToGenerator(function* (row, col) {\n      if (!firebaseRef.current) return;\n      try {\n        var position = row + \"-\" + col;\n        if (isAoeMode) {\n          var _currentRoomData$laye;\n          var _snapshot = yield get(firebaseRef.current);\n          var _currentRoomData = _snapshot.val() || {};\n          var currentAoe = ((_currentRoomData$laye = _currentRoomData.layers) == null ? void 0 : _currentRoomData$laye.aoe) || {};\n          var newAoe = _objectSpread({}, currentAoe);\n          if (newAoe[position]) {\n            delete newAoe[position];\n          } else {\n            newAoe[position] = {\n              color: currentColor\n            };\n          }\n          yield set(firebaseRef.current, _objectSpread(_objectSpread({}, _currentRoomData), {}, {\n            layers: _objectSpread(_objectSpread({}, _currentRoomData.layers), {}, {\n              aoe: newAoe\n            }),\n            lastUpdate: Date.now()\n          }));\n          return;\n        }\n        var newTokens = _objectSpread({}, tokens);\n        var snapshot = yield get(firebaseRef.current);\n        var currentRoomData = snapshot.val() || {};\n        if (tokens[position]) {\n          delete newTokens[position];\n        } else {\n          if (isDM) {\n            setSelectedPosition(position);\n            setShowEnemySelect(true);\n            return;\n          } else {\n            if (!selectedCharacter) {\n              Alert.alert('No Character Selected', 'Please select a character from your list first.');\n              return;\n            }\n            newTokens[position] = {\n              name: selectedCharacter.name,\n              color: currentColor,\n              hp: selectedCharacter.hp,\n              maxHp: selectedCharacter.maxHp,\n              ac: selectedCharacter.ac,\n              initiativeBonus: calculateModifier(selectedCharacter.abilityScores.DEX),\n              effects: [],\n              position: position,\n              owner: playerName\n            };\n          }\n        }\n        yield set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n          tokens: newTokens,\n          lastUpdate: Date.now()\n        }));\n        setTokens(newTokens);\n      } catch (error) {\n        console.error('Error updating tokens:', error);\n        Alert.alert('Error', 'Failed to update token');\n      }\n    });\n    return function (_x, _x2) {\n      return _ref18.apply(this, arguments);\n    };\n  }(), [tokens, isDM, selectedCharacter, playerName, currentColor, isAoeMode]);\n  var savePlayerData = useCallback(function () {\n    var _ref19 = _asyncToGenerator(function* (updatedCharacters) {\n      if (!playerName || !roomCode) return;\n      try {\n        var roomSnapshot = yield get(ref(database, \"rooms/\" + roomCode));\n        var currentRoomData = roomSnapshot.val() || {};\n        var roomPlayerRef = ref(database, \"rooms/\" + roomCode + \"/players/\" + playerName);\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerData = {\n          characters: updatedCharacters,\n          lastUpdate: Date.now()\n        };\n        yield Promise.all([set(roomPlayerRef, playerData), set(globalPlayerRef, playerData), set(ref(database, \"rooms/\" + roomCode), _objectSpread(_objectSpread({}, currentRoomData), {}, {\n          players: _objectSpread(_objectSpread({}, currentRoomData.players || {}), {}, _defineProperty({}, playerName, playerData))\n        }))]);\n        setCharacters(updatedCharacters);\n      } catch (error) {\n        console.error('Error saving player data:', error);\n        Alert.alert('Error', 'Failed to save character data');\n      }\n    });\n    return function (_x3) {\n      return _ref19.apply(this, arguments);\n    };\n  }(), [playerName, roomCode]);\n  var connectToRoom = useCallback(function () {\n    var _ref20 = _asyncToGenerator(function* (code) {\n      if (!code.trim() || !playerName) {\n        Alert.alert(\"Error\", \"Please enter a room code and player name\");\n        return;\n      }\n      setIsJoining(true);\n      setIsLoading(true);\n      try {\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerSnapshot = yield get(globalPlayerRef);\n        var savedCharacters = [];\n        if (playerSnapshot.exists()) {\n          var playerData = playerSnapshot.val();\n          savedCharacters = playerData.characters || [];\n          setCharacters(savedCharacters);\n        }\n        var gameRef = ref(database, \"rooms/\" + code);\n        firebaseRef.current = gameRef;\n        var snapshot = yield get(gameRef);\n        if (!snapshot.exists()) {\n          yield set(gameRef, _objectSpread(_objectSpread({}, initialGameState), {}, {\n            players: _defineProperty({}, playerName, {\n              characters: savedCharacters,\n              lastUpdate: Date.now()\n            })\n          }));\n        } else {\n          var roomData = snapshot.val();\n          if (!roomData.players || !roomData.players[playerName]) {\n            var updatedRoomData = _objectSpread(_objectSpread({}, roomData), {}, {\n              players: _objectSpread(_objectSpread({}, roomData.players || {}), {}, _defineProperty({}, playerName, {\n                characters: savedCharacters,\n                lastUpdate: Date.now()\n              }))\n            });\n            yield set(gameRef, updatedRoomData);\n          }\n        }\n        var unsubscribe = onValue(gameRef, function (snapshot) {\n          var data = snapshot.val();\n          if (data) {\n            var _data$campaignStory, _data$campaignStory2, _data$players, _data$players$playerN;\n            setTokens(data.tokens || {});\n            setLayers(data.layers || initialGameState.layers);\n            setInitiative(data.initiative || []);\n            setInCombat(data.inCombat || false);\n            setCurrentTurn(data.currentTurn || 0);\n            setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n            if (((_data$campaignStory = data.campaignStory) == null ? void 0 : _data$campaignStory.text) !== undefined && ((_data$campaignStory2 = data.campaignStory) == null ? void 0 : _data$campaignStory2.updatedBy) !== playerName) {\n              setStoryText(data.campaignStory.text);\n            }\n            if ((_data$players = data.players) != null && (_data$players$playerN = _data$players[playerName]) != null && _data$players$playerN.characters) {\n              var newCharacters = data.players[playerName].characters;\n              setCharacters(function (prevCharacters) {\n                if ((prevCharacters == null ? void 0 : prevCharacters.length) > 0 && (!newCharacters || newCharacters.length === 0)) {\n                  return prevCharacters;\n                }\n                if (JSON.stringify(newCharacters) !== JSON.stringify(prevCharacters)) {\n                  return newCharacters;\n                }\n                return prevCharacters;\n              });\n            }\n          }\n        });\n        unsubscribeRef.current = unsubscribe;\n        setRoomCode(code);\n        setShowRoomModal(false);\n        setIsConnected(true);\n      } catch (error) {\n        console.error('Connection error:', error);\n        Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n        setIsConnected(false);\n      } finally {\n        setIsJoining(false);\n        setIsLoading(false);\n      }\n    });\n    return function (_x4) {\n      return _ref20.apply(this, arguments);\n    };\n  }(), [playerName]);\n  useEffect(function () {\n    var handleOffline = function handleOffline() {\n      Alert.alert('Connection Lost', 'Please check your internet connection', [{\n        text: 'OK'\n      }]);\n    };\n    window.addEventListener('offline', handleOffline);\n    return function () {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n  var layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%'\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    },\n    characterItem: {\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 5,\n      backgroundColor: THEME.background.secondary\n    },\n    characterInfo: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    },\n    characterDetails: {\n      color: THEME.text.light,\n      opacity: 0.8\n    }\n  };\n  var handleDeleteCharacter = useCallback(_asyncToGenerator(function* () {\n    if (!selectedCharacter) return;\n    try {\n      var newCharacters = characters.filter(function (char) {\n        return char.name !== selectedCharacter.name;\n      });\n      setCharacters(newCharacters);\n      yield savePlayerData(newCharacters);\n      setSelectedCharacter(null);\n      setShowDeleteModal(false);\n    } catch (error) {\n      console.error('Error deleting character:', error);\n      Alert.alert('Error', 'Failed to delete character');\n    }\n  }), [selectedCharacter, characters, savePlayerData]);\n  var handleEnemySelect = useCallback(function () {\n    var _ref22 = _asyncToGenerator(function* (enemy) {\n      if (!selectedPosition || !firebaseRef.current) return;\n      try {\n        var newTokens = _objectSpread({}, tokens);\n        newTokens[selectedPosition] = _objectSpread(_objectSpread({}, enemy), {}, {\n          position: selectedPosition,\n          effects: [],\n          owner: 'DM'\n        });\n        var snapshot = yield get(firebaseRef.current);\n        var currentRoomData = snapshot.val() || {};\n        yield set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n          tokens: newTokens,\n          lastUpdate: Date.now()\n        }));\n        setTokens(newTokens);\n        setShowEnemySelect(false);\n        setSelectedPosition(null);\n      } catch (error) {\n        console.error('Error adding enemy:', error);\n        Alert.alert('Error', 'Failed to add enemy');\n      }\n    });\n    return function (_x5) {\n      return _ref22.apply(this, arguments);\n    };\n  }(), [selectedPosition, tokens]);\n  return _jsxs(SafeAreaView, {\n    style: [styles.container, isDarkMode && styles.darkMode],\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TokenModal, {\n        showTokenModal: showTokenModal,\n        setShowTokenModal: setShowTokenModal,\n        selectedToken: selectedToken,\n        setSelectedToken: setSelectedToken,\n        tokens: tokens,\n        firebaseRef: firebaseRef,\n        initialGameState: initialGameState,\n        layers: layers,\n        initiative: initiative,\n        inCombat: inCombat,\n        currentTurn: currentTurn,\n        THEME: THEME\n      }), _jsx(RoomModal, {\n        showRoomModal: showRoomModal,\n        setShowRoomModal: setShowRoomModal,\n        isConnected: isConnected,\n        roomCode: roomCode,\n        setRoomCode: setRoomCode,\n        isJoining: isJoining,\n        connectToRoom: connectToRoom\n      }), _jsx(PlayerNameModal, {\n        visible: showPlayerNameModal && !playerName,\n        onSubmit: function onSubmit(name) {\n          setPlayerName(name);\n          setShowPlayerNameModal(false);\n          setIsConnected(true);\n        }\n      }), _jsx(DiceResultModal, {\n        visible: showDiceResult,\n        result: diceResult,\n        onClose: function onClose() {\n          return setShowDiceResult(false);\n        }\n      }), _jsx(PartyLootModal, {\n        visible: showPartyLoot,\n        onClose: function onClose() {\n          return setShowPartyLoot(false);\n        },\n        partyLoot: partyLoot,\n        playerName: playerName,\n        onUpdate: function onUpdate(updatedLoot) {\n          setPartyLoot(updatedLoot);\n          if (firebaseRef.current) {\n            set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n              tokens: tokens,\n              layers: layers,\n              initiative: initiative,\n              inCombat: inCombat,\n              currentTurn: currentTurn,\n              partyLoot: updatedLoot\n            }));\n          }\n        }\n      }), _jsx(CharacterSheetModal, {\n        visible: showCharacterSheet,\n        onClose: function onClose() {\n          return setShowCharacterSheet(false);\n        },\n        character: selectedCharacter || {\n          name: '',\n          class: '',\n          level: 1,\n          owner: playerName,\n          proficiencyBonus: 2,\n          hp: 0,\n          maxHp: 0,\n          ac: 10,\n          abilityScores: {\n            STR: 10,\n            DEX: 10,\n            CON: 10,\n            INT: 10,\n            WIS: 10,\n            CHA: 10\n          },\n          proficientSkills: [],\n          currency: {\n            CP: 0,\n            SP: 0,\n            EP: 0,\n            GP: 0,\n            PP: 0\n          },\n          items: [],\n          inventory: []\n        },\n        characters: characters,\n        onUpdate: (function () {\n          var _ref23 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n              var newCharacters = selectedCharacter ? characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              }) : [].concat(_toConsumableArray(characters), [updatedCharacter]);\n              setCharacters(newCharacters);\n              var playerRef = ref(database, \"players/\" + playerName);\n              yield set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n              if (firebaseRef.current) {\n                var roomSnapshot = yield get(firebaseRef.current);\n                var currentRoomData = roomSnapshot.val() || {};\n                yield set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                  tokens: tokens,\n                  layers: layers,\n                  initiative: initiative,\n                  inCombat: inCombat,\n                  currentTurn: currentTurn,\n                  partyLoot: partyLoot,\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                }));\n              }\n              setShowCharacterSheet(false);\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          });\n          return function (_x6) {\n            return _ref23.apply(this, arguments);\n          };\n        }())\n      }), _jsx(InventoryModal, {\n        visible: showInventory,\n        onClose: function onClose() {\n          return setShowInventory(false);\n        },\n        character: selectedCharacter,\n        onUpdate: (function () {\n          var _ref24 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              var newCharacters = characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              });\n              setCharacters(newCharacters);\n              yield savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          });\n          return function (_x7) {\n            return _ref24.apply(this, arguments);\n          };\n        }())\n      }), !isConnected ? _jsx(View, {\n        style: styles.loadingContainer,\n        children: isLoading ? _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(ActivityIndicator, {\n            size: \"large\",\n            color: THEME.accent\n          }), _jsx(Text, {\n            style: [styles.loadingText, {\n              marginTop: 20\n            }],\n            children: \"Connecting to room...\"\n          })]\n        }) : _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Enter a room code to begin\"\n        })\n      }) : _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"D&D Combat Tracker\"\n          }), _jsxs(ScrollView, {\n            horizontal: isSmallScreen,\n            showsHorizontalScrollIndicator: false,\n            contentContainerStyle: styles.controls,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: function onPress() {\n                return setShowRoomModal(true);\n              },\n              children: _jsxs(Text, {\n                style: styles.buttonText,\n                children: [\"Room: \", roomCode]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: handleInitiativeRoll,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Roll Initiative\"\n              })\n            }), inCombat && _jsxs(_Fragment, {\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  var nextTurn = (currentTurn + 1) % initiative.length;\n                  setCurrentTurn(nextTurn);\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: true,\n                      currentTurn: nextTurn\n                    }));\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Next Turn\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: [],\n                      inCombat: false,\n                      currentTurn: 0\n                    }));\n                  }\n                  setInitiative([]);\n                  setInCombat(false);\n                  setCurrentTurn(0);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"End Combat\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.danger\n              }],\n              onPress: function onPress() {\n                Alert.alert(\"Leave Room\", \"Are you sure you want to leave this room?\", [{\n                  text: \"Cancel\",\n                  style: \"cancel\"\n                }, {\n                  text: \"Leave\",\n                  style: \"destructive\",\n                  onPress: function onPress() {\n                    handleDisconnect();\n                    setShowRoomModal(true);\n                  }\n                }]);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Leave Room\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, isDM && styles.dmToggleActive],\n              onPress: function onPress() {\n                return setIsDM(!isDM);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"DM Mode\"\n              })\n            }), _jsx(View, {\n              style: styles.controls,\n              children: _jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: isAoeMode ? THEME.accent : THEME.background.secondary\n                }],\n                onPress: function onPress() {\n                  return setIsAoeMode(!isAoeMode);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"AoE Mode\"\n                })\n              })\n            })]\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.content,\n          children: _jsxs(View, {\n            style: styles.mainArea,\n            children: [_jsxs(View, {\n              style: styles.leftSidebar,\n              children: [_jsxs(View, {\n                style: diceStyles.dicePanel,\n                children: [_jsx(Text, {\n                  style: diceStyles.diceTitle,\n                  children: \"Dice Roller\"\n                }), _jsxs(View, {\n                  style: diceStyles.diceControls,\n                  children: [_jsx(View, {\n                    style: diceStyles.controlsRow,\n                    children: _jsxs(View, {\n                      style: diceStyles.controlGroup,\n                      children: [_jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'advantage' && diceStyles.controlActive, rollType === 'advantage' && {\n                          backgroundColor: THEME.success\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'advantage' ? 'normal' : 'advantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Advantage\"\n                        })\n                      }), _jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'disadvantage' && diceStyles.controlActive, rollType === 'disadvantage' && {\n                          backgroundColor: THEME.danger\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'disadvantage' ? 'normal' : 'disadvantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Disadvantage\"\n                        })\n                      })]\n                    })\n                  }), _jsxs(View, {\n                    style: diceStyles.controlsRow,\n                    children: [_jsxs(View, {\n                      style: diceStyles.modifierGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.modifierLabel,\n                        children: \"Modifier\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.modifierInput,\n                        value: String(modifier),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 0;\n                          setModifier(num);\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    }), _jsxs(View, {\n                      style: diceStyles.quantityGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.quantityLabel,\n                        children: \"Quantity\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.quantityInput,\n                        value: String(diceQuantity),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 1;\n                          setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    })]\n                  })]\n                }), _jsx(View, {\n                  style: diceStyles.diceGrid,\n                  children: DICE_TYPES.map(function (_ref25) {\n                    var sides = _ref25.sides;\n                    return _jsx(TouchableOpacity, {\n                      style: [diceStyles.diceButton, {\n                        backgroundColor: THEME.background.secondary\n                      }],\n                      onPress: function onPress() {\n                        var rolls = [];\n                        for (var i = 0; i < diceQuantity; i++) {\n                          if (rollType !== 'normal') {\n                            var roll1 = Math.floor(Math.random() * sides) + 1;\n                            var roll2 = Math.floor(Math.random() * sides) + 1;\n                            rolls.push(rollType === 'advantage' ? Math.max(roll1, roll2) : Math.min(roll1, roll2));\n                          } else {\n                            rolls.push(Math.floor(Math.random() * sides) + 1);\n                          }\n                        }\n                        var total = rolls.reduce(function (sum, roll) {\n                          return sum + roll;\n                        }, 0) + modifier;\n                        var result = {\n                          dice: diceQuantity + \"d\" + sides,\n                          rolls: rolls,\n                          modifier: modifier,\n                          rollType: rollType,\n                          total: total\n                        };\n                        setDiceResult(result);\n                        setShowDiceResult(true);\n                        Vibration.vibrate(50);\n                      },\n                      children: _jsxs(Text, {\n                        style: diceStyles.diceButtonText,\n                        children: [\"d\", sides]\n                      })\n                    }, sides);\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.infoPanel,\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Player Tools\"\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll = Math.floor(Math.random() * 20) + 1;\n                      setDiceResult({\n                        dice: \"d20\",\n                        rolls: [roll],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: roll\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick d20\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll1 = Math.floor(Math.random() * 20) + 1;\n                      var roll2 = Math.floor(Math.random() * 20) + 1;\n                      var total = Math.max(roll1, roll2);\n                      setDiceResult({\n                        dice: \"d20 with advantage\",\n                        rolls: [roll1, roll2],\n                        modifier: 0,\n                        rollType: 'advantage',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Advantage\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var damage = Math.floor(Math.random() * 8) + 1;\n                      setDiceResult({\n                        dice: \"d8\",\n                        rolls: [damage],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: damage\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Damage\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.quickActionButton,\n                    onPress: function onPress() {\n                      var roll1 = Math.floor(Math.random() * 20) + 1;\n                      var roll2 = Math.floor(Math.random() * 20) + 1;\n                      var total = Math.min(roll1, roll2);\n                      setDiceResult({\n                        dice: \"d20 with disadvantage\",\n                        rolls: [roll1, roll2],\n                        modifier: 0,\n                        rollType: 'disadvantage',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Quick Disadvantage\"\n                    })\n                  })]\n                }), _jsx(View, {\n                  style: styles.divider\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.accent\n                    }],\n                    onPress: function onPress() {\n                      var rolls = [Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1, Math.floor(Math.random() * 6) + 1].sort(function (a, b) {\n                        return b - a;\n                      });\n                      rolls.pop();\n                      var total = rolls.reduce(function (sum, roll) {\n                        return sum + roll;\n                      }, 0);\n                      setDiceResult({\n                        dice: \"4d6 drop lowest\",\n                        rolls: rolls,\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: total\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Roll Ability Score\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.success\n                    }],\n                    onPress: function onPress() {\n                      var roll = Math.floor(Math.random() * 100) + 1;\n                      setDiceResult({\n                        dice: \"d100\",\n                        rolls: [roll],\n                        modifier: 0,\n                        rollType: 'normal',\n                        total: roll\n                      });\n                      setShowDiceResult(true);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Percentile Roll\"\n                    })\n                  })]\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.gridSection,\n              children: [_jsx(ScrollView, {\n                horizontal: true,\n                contentContainerStyle: {\n                  minWidth: '100%'\n                },\n                children: _jsx(ScrollView, {\n                  children: _jsxs(View, {\n                    style: [styles.gridContainer, {\n                      transform: [{\n                        scale: zoomLevel\n                      }]\n                    }],\n                    children: [_jsx(View, {\n                      style: styles.colorPicker,\n                      children: _jsx(TouchableOpacity, {\n                        style: [styles.colorButton, {\n                          backgroundColor: currentColor,\n                          width: 40,\n                          height: 40\n                        }],\n                        onPress: function onPress() {\n                          return setShowColorWheel(true);\n                        }\n                      })\n                    }), Array.from({\n                      length: GRID_SIZE\n                    }).map(function (_, row) {\n                      return _jsx(View, {\n                        style: styles.row,\n                        children: Array.from({\n                          length: GRID_SIZE\n                        }).map(function (_, col) {\n                          var _initiative$currentTu, _layers$aoe;\n                          var position = row + \"-\" + col;\n                          var token = tokens[position];\n                          var isCurrentTurn = inCombat && ((_initiative$currentTu = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu.position) === position;\n                          return _jsx(TouchableOpacity, {\n                            style: [styles.cell, token && {\n                              backgroundColor: token.color\n                            }, ((_layers$aoe = layers.aoe) == null ? void 0 : _layers$aoe[position]) && {\n                              backgroundColor: layers.aoe[position].color,\n                              opacity: 0.5\n                            }, isCurrentTurn && styles.currentTurn],\n                            onPress: function onPress() {\n                              return handleCellPress(row, col);\n                            },\n                            onLongPress: function onLongPress() {\n                              if (token) {\n                                setSelectedToken(_objectSpread(_objectSpread({}, token), {}, {\n                                  position: position\n                                }));\n                                setShowTokenModal(true);\n                              }\n                            },\n                            children: token && _jsxs(View, {\n                              style: styles.tokenContent,\n                              children: [_jsx(Text, {\n                                style: [styles.tokenText, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                numberOfLines: 1,\n                                children: token.name\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [\"HP: \", token.hp, \"/\", token.maxHp]\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [\"AC: \", token.ac]\n                              }), token.effects && token.effects.length > 0 && _jsx(View, {\n                                style: statusStyles.tokenEffects,\n                                children: token.effects.map(function (effect) {\n                                  var statusEffect = STATUS_EFFECTS.find(function (e) {\n                                    return e.id === effect;\n                                  });\n                                  return statusEffect ? _jsx(Text, {\n                                    style: statusStyles.effectIcon,\n                                    children: statusEffect.icon\n                                  }, effect) : null;\n                                })\n                              })]\n                            })\n                          }, col);\n                        })\n                      }, row);\n                    })]\n                  })\n                })\n              }), _jsx(GridZoomControls, {\n                zoomLevel: zoomLevel,\n                setZoomLevel: setZoomLevel\n              }), _jsxs(View, {\n                style: [styles.infoPanel, {\n                  marginTop: 20\n                }],\n                children: [_jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: 10\n                  },\n                  children: [_jsx(Text, {\n                    style: styles.infoPanelTitle,\n                    children: \"Campaign Story\"\n                  }), isDM && _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.accent,\n                      width: 100\n                    }],\n                    onPress: function onPress() {\n                      if (firebaseRef.current) {\n                        get(firebaseRef.current).then(function (snapshot) {\n                          var currentRoomData = snapshot.val() || {};\n                          set(firebaseRef.current, _objectSpread(_objectSpread({}, currentRoomData), {}, {\n                            campaignStory: {\n                              text: storyText,\n                              lastUpdate: Date.now(),\n                              updatedBy: playerName\n                            }\n                          }));\n                        });\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Save Story\"\n                    })\n                  })]\n                }), _jsx(TextInput, {\n                  style: [styles.input, {\n                    height: 200,\n                    textAlignVertical: 'top',\n                    padding: 10,\n                    backgroundColor: THEME.background.secondary,\n                    color: THEME.text.light,\n                    fontSize: 14,\n                    lineHeight: 20,\n                    marginBottom: 10\n                  }],\n                  multiline: true,\n                  value: storyText,\n                  onChangeText: isDM ? setStoryText : undefined,\n                  editable: isDM,\n                  placeholder: \"Type or paste your campaign story here...\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), ((_initialGameState$cam = initialGameState.campaignStory) == null ? void 0 : _initialGameState$cam.updatedBy) && _jsxs(Text, {\n                  style: [styles.infoLabel, {\n                    textAlign: 'right'\n                  }],\n                  children: [\"Last updated by \", initialGameState.campaignStory.updatedBy]\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.rightSidebar,\n              children: [_jsxs(View, {\n                style: styles.quickActions,\n                children: [_jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: function onPress() {\n                    return setShowCharacterSheet(true);\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"New Character\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: function onPress() {\n                    return setShowPartyLoot(true);\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Party Loot\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.quickActionButton,\n                  onPress: handleInitiativeRoll,\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Roll Initiative\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: [styles.quickActionButton, {\n                    backgroundColor: THEME.danger\n                  }],\n                  onPress: function onPress() {\n                    if (firebaseRef.current) {\n                      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                        tokens: {},\n                        layers: layers,\n                        initiative: [],\n                        inCombat: false,\n                        currentTurn: 0,\n                        partyLoot: partyLoot,\n                        characters: characters\n                      }));\n                      setTokens({});\n                      setInitiative([]);\n                      setInCombat(false);\n                      setCurrentTurn(0);\n                    }\n                  },\n                  children: _jsx(Text, {\n                    style: styles.quickActionText,\n                    children: \"Clear Board\"\n                  })\n                })]\n              }), _jsxs(View, {\n                style: [styles.infoPanel, {\n                  marginBottom: 15\n                }],\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Characters\"\n                }), _jsx(ScrollView, {\n                  style: {\n                    maxHeight: 200\n                  },\n                  children: characters.filter(function (char) {\n                    return char.owner === playerName;\n                  }).map(function (char, index) {\n                    return _jsx(TouchableOpacity, {\n                      style: [layoutStyles.characterItem, (selectedCharacter == null ? void 0 : selectedCharacter.name) === char.name && {\n                        backgroundColor: THEME.accent + '40'\n                      }],\n                      onPress: function onPress() {\n                        return setSelectedCharacter(char);\n                      },\n                      children: _jsxs(View, {\n                        style: layoutStyles.characterInfo,\n                        children: [_jsxs(View, {\n                          children: [_jsx(Text, {\n                            style: layoutStyles.characterName,\n                            children: char.name\n                          }), _jsxs(Text, {\n                            style: layoutStyles.characterDetails,\n                            children: [\"Level \", char.level, \" \", char.class]\n                          })]\n                        }), _jsx(View, {\n                          style: styles.statBadge,\n                          children: _jsxs(Text, {\n                            style: styles.statBadgeText,\n                            children: [\"HP: \", char.hp, \"/\", char.maxHp]\n                          })\n                        })]\n                      })\n                    }, index);\n                  })\n                }), selectedCharacter && _jsxs(_Fragment, {\n                  children: [_jsx(View, {\n                    style: styles.divider\n                  }), _jsxs(View, {\n                    style: styles.infoGrid,\n                    children: [_jsx(TouchableOpacity, {\n                      style: [styles.quickActionButton, {\n                        backgroundColor: THEME.accent\n                      }],\n                      onPress: function onPress() {\n                        return setShowCharacterSheet(true);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.quickActionText,\n                        children: \"Character Sheet\"\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      style: [styles.quickActionButton, {\n                        backgroundColor: THEME.success\n                      }],\n                      onPress: function onPress() {\n                        return setShowInventory(true);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.quickActionText,\n                        children: \"Inventory\"\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      style: [styles.quickActionButton, {\n                        backgroundColor: THEME.danger\n                      }],\n                      onPress: function onPress() {\n                        return setShowDeleteModal(true);\n                      },\n                      children: _jsx(Text, {\n                        style: styles.quickActionText,\n                        children: \"Delete Character\"\n                      })\n                    })]\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: styles.infoPanel,\n                children: [_jsx(Text, {\n                  style: styles.infoPanelTitle,\n                  children: \"Combat Tracker\"\n                }), _jsxs(View, {\n                  style: styles.infoGrid,\n                  children: [_jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, inCombat ? {\n                      backgroundColor: THEME.danger\n                    } : {}],\n                    onPress: function onPress() {\n                      if (inCombat) {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                            tokens: tokens,\n                            layers: layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0\n                          }));\n                        }\n                        setInitiative([]);\n                        setInCombat(false);\n                        setCurrentTurn(0);\n                      } else {\n                        handleInitiativeRoll();\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: inCombat ? 'End Combat' : 'Start Combat'\n                    })\n                  }), inCombat && _jsx(TouchableOpacity, {\n                    style: [styles.quickActionButton, {\n                      backgroundColor: THEME.success\n                    }],\n                    onPress: function onPress() {\n                      var nextTurn = (currentTurn + 1) % initiative.length;\n                      setCurrentTurn(nextTurn);\n                      if (firebaseRef.current) {\n                        set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                          tokens: tokens,\n                          layers: layers,\n                          initiative: initiative,\n                          inCombat: true,\n                          currentTurn: nextTurn\n                        }));\n                      }\n                    },\n                    children: _jsx(Text, {\n                      style: styles.quickActionText,\n                      children: \"Next Turn\"\n                    })\n                  })]\n                }), inCombat && initiative.length > 0 && _jsxs(_Fragment, {\n                  children: [_jsx(View, {\n                    style: styles.divider\n                  }), _jsx(Text, {\n                    style: [styles.infoPanelTitle, {\n                      fontSize: 14\n                    }],\n                    children: \"Current Turn\"\n                  }), _jsxs(View, {\n                    style: [styles.infoCard, {\n                      marginBottom: 10\n                    }],\n                    children: [_jsx(Text, {\n                      style: styles.infoValue,\n                      children: ((_tokens$initiative$cu = tokens[(_initiative$currentTu2 = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu2.position]) == null ? void 0 : _tokens$initiative$cu.name) || 'Unknown'\n                    }), _jsxs(Text, {\n                      style: styles.infoLabel,\n                      children: [\"Initiative: \", ((_initiative$currentTu3 = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu3.initiative) || '0']\n                    })]\n                  }), _jsx(Text, {\n                    style: [styles.infoPanelTitle, {\n                      fontSize: 14\n                    }],\n                    children: \"Initiative Order\"\n                  }), _jsx(ScrollView, {\n                    style: {\n                      maxHeight: 150\n                    },\n                    children: initiative.map(function (item, index) {\n                      var token = tokens[item.position];\n                      if (!token) return null;\n                      return _jsxs(View, {\n                        style: [styles.infoCard, {\n                          marginBottom: 5\n                        }, index === currentTurn && {\n                          backgroundColor: THEME.accent + '40'\n                        }],\n                        children: [_jsx(Text, {\n                          style: styles.infoValue,\n                          children: token.name\n                        }), _jsxs(View, {\n                          style: {\n                            flexDirection: 'row',\n                            justifyContent: 'space-between'\n                          },\n                          children: [_jsxs(Text, {\n                            style: styles.infoLabel,\n                            children: [\"Initiative: \", item.initiative]\n                          }), _jsxs(Text, {\n                            style: styles.infoLabel,\n                            children: [\"HP: \", token.hp, \"/\", token.maxHp]\n                          })]\n                        })]\n                      }, item.position);\n                    })\n                  })]\n                })]\n              })]\n            })]\n          })\n        })]\n      })]\n    }), _jsx(DeleteCharacterModal, {\n      visible: showDeleteModal,\n      character: selectedCharacter,\n      onClose: function onClose() {\n        return setShowDeleteModal(false);\n      },\n      onConfirm: handleDeleteCharacter\n    }), _jsx(EnemySelectModal, {\n      visible: showEnemySelect,\n      onClose: function onClose() {\n        setShowEnemySelect(false);\n        setSelectedPosition(null);\n      },\n      onSelect: handleEnemySelect\n    }), _jsx(ColorWheelModal, {\n      visible: showColorWheel,\n      onClose: function onClose() {\n        return setShowColorWheel(false);\n      },\n      onSelectColor: setCurrentColor,\n      initialColor: currentColor\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","memo","StyleSheet","View","Text","TouchableOpacity","Pressable","TextInput","ScrollView","Alert","Modal","KeyboardAvoidingView","Platform","SafeAreaView","ActivityIndicator","Keyboard","Vibration","Dimensions","initializeApp","getDatabase","ref","onValue","set","get","off","debounce","GestureScrollView","DiceRoller","ColorPicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","LETTERS","Array","from","length","_","i","String","fromCharCode","COLORS","GRID_SIZE","ABILITY_SCORES","SKILLS","STR","DEX","CON","INT","WIS","CHA","CURRENCY","DICE_TYPES","sides","color","STATUS_EFFECTS","id","name","icon","COMMON_ENEMIES","hp","maxHp","ac","initiativeBonus","windowDimensions","isSmallScreen","width","THEME","primary","secondary","accent","gold","danger","success","text","light","dark","background","panel","initialGameState","tokens","layers","grid","terrain","effects","fog","aoe","initiative","inCombat","currentTurn","settings","gridSize","showCoordinates","partyLoot","currency","CP","SP","EP","GP","PP","items","currentViewer","characters","campaignStory","lastUpdate","updatedBy","Date","now","styles","create","container","flex","backgroundColor","height","header","padding","title","fontSize","fontWeight","marginBottom","controls","flexDirection","flexWrap","gap","justifyContent","controlButton","borderRadius","minWidth","alignItems","content","mainArea","minHeight","leftSidebar","flexShrink","order","gridSection","rightSidebar","gridContainer","row","cell","borderWidth","borderColor","tokenContent","tokenText","textAlign","tokenHp","modalOverlay","modalContainer","modalContent","modalTitle","input","modalButtons","marginTop","modalButton","buttonText","loadingContainer","loadingText","loadingButtonContent","diceBox","diceControls","diceButtons","diceButton","diceHistory","maxHeight","diceResultContainer","borderBottomWidth","borderBottomColor","diceResult","diceTotal","diceRolls","initiativeList","initiativeScroll","initiativeItem","currentInitiative","initiativeText","currentInitiativeText","zoomControls","position","right","bottom","display","zoomButton","opacity","advantageButton","advantageActive","modifierInput","boxTitle","colorPicker","colorButton","margin","selectedColor","quickActions","quickActionButton","quickActionText","infoPanel","infoPanelTitle","infoGrid","infoCard","infoLabel","infoValue","statBadge","paddingVertical","paddingHorizontal","alignSelf","statBadgeText","divider","marginVertical","additionalStyles","characterSheet","maxWidth","sheetHeader","sheetSection","sectionTitle","abilityScores","abilityBox","abilityLabel","abilityScore","abilityMod","skillsList","skillItem","proficientDot","marginRight","skillName","skillMod","closeButton","top","closeButtonText","lootSection","currencyRow","currencyInput","currencyLabel","itemRow","itemInput","removeButton","addButton","lootHeader","itemInfo","addedBy","enemyOption","dmToggle","marginLeft","dmToggleActive","diceStyles","dicePanel","diceHeader","diceTitle","diceGrid","boxShadow","diceButtonText","controlGroup","controlActive","modifierGroup","modifierLabel","historyContainer","historyScroll","historyItem","historyLeft","historyInfo","historyDice","historyRolls","historyTotal","clearButton","quantityGroup","quantityLabel","quantityInput","controlsRow","diceContainer","overflow","statusStyles","effectsContainer","borderTopWidth","borderTopColor","paddingTop","effectsTitle","effectsGrid","effectButton","effectActive","effectText","tokenEffects","effectIcon","saveGameState","_ref","_asyncToGenerator","firebaseRef","current","error","console","alert","apply","arguments","CharacterSheetModal","_ref2","visible","onClose","character","onUpdate","_useState","class","level","owner","proficiencyBonus","proficientSkills","inventory","_useState2","_slicedToArray","editedCharacter","setEditedCharacter","calculateModifier","score","Math","floor","handleAbilityScoreChange","ability","value","newScore","parseInt","prev","_objectSpread","_defineProperty","toggleProficiency","skill","includes","filter","s","concat","_toConsumableArray","getSkillModifier","profBonus","handleSave","_ref3","updatedCharacter","transparent","animationType","onRequestClose","children","style","onPress","onChangeText","placeholder","placeholderTextColor","keyboardType","map","maxLength","selectTextOnFocus","Object","entries","_ref4","_ref5","skills","quantity","notes","item","index","newItems","TokenModal","_ref6","showTokenModal","setShowTokenModal","selectedToken","setSelectedToken","cursor","dismiss","behavior","select","ios","android","keyboardVerticalOffset","e","stopPropagation","blurOnSubmit","autoComplete","spellCheck","enablesReturnKeyAutomatically","max","effect","_selectedToken$effect","currentEffects","newEffects","then","snapshot","currentRoomData","val","newTokens","modalStyles","left","zIndex","RoomModal","_ref7","showRoomModal","setShowRoomModal","isConnected","roomCode","setRoomCode","isJoining","connectToRoom","trim","toLowerCase","autoCapitalize","autoCorrect","editable","autoFocus","disabled","PartyLootModal","_ref8","playerName","_useState3","_useState4","editedLoot","setEditedLoot","type","toString","buttonRow","button","GridZoomControls","_ref9","zoomLevel","setZoomLevel","debouncedZoom","newZoom","min","InventoryModal","_ref10","_useState5","_useState6","editedInventory","setEditedInventory","newInventory","PlayerNameModal","_ref11","onSubmit","_useState7","_useState8","setName","viewerStyles","viewersList","viewersTitle","viewerName","DiceResultModal","_ref12","result","timer","setTimeout","clearTimeout","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","dice","rollType","total","rolls","join","modifier","DeleteCharacterModal","_ref13","onConfirm","_useState9","_useState10","confirmName","setConfirmName","EnemySelectModal","_ref14","onSelect","enemy","ColorWheelModal","_ref15","onSelectColor","initialColor","_useState11","_useState12","setColor","onColorChange","thumbSize","sliderSize","noSnap","App","_initialGameState$cam","_tokens$initiative$cu","_initiative$currentTu2","_initiative$currentTu3","_useState13","_useState14","_useState15","_useState16","setIsConnected","_useState17","_useState18","isLoading","setIsLoading","_useState19","_useState20","setIsJoining","_useState21","_useState22","isUpdating","setIsUpdating","_useState23","_useState24","_useState25","_useState26","isDarkMode","setIsDarkMode","_useState27","_useState28","_useState29","_useState30","setTokens","_useState31","_useState32","currentColor","setCurrentColor","_useState33","_useState34","setInitiative","_useState35","_useState36","setInCombat","_useState37","_useState38","setCurrentTurn","_useState39","_useState40","setLayers","_useState41","_useState42","setDiceHistory","_useState43","_useState44","advantage","setAdvantage","_useState45","_useState46","setModifier","_useState47","_useState48","_useState49","_useState50","_useState51","_useState52","setPartyLoot","_useState53","_useState54","showPartyLoot","setShowPartyLoot","_useState55","_useState56","diceQuantity","setDiceQuantity","_useState57","_useState58","setCharacters","_useState59","_useState60","showCharacterSheet","setShowCharacterSheet","_useState61","_useState62","selectedCharacter","setSelectedCharacter","_useState63","_useState64","showInventory","setShowInventory","_useState65","_useState66","setPlayerName","_useState67","_useState68","showPlayerNameModal","setShowPlayerNameModal","_useState69","_useState70","setRollType","_useState71","_useState72","setDiceResult","_useState73","_useState74","showDiceResult","setShowDiceResult","_useState75","_useState76","showDeleteModal","setShowDeleteModal","_useState77","_useState78","isDM","setIsDM","_useState79","_useState80","showEnemySelect","setShowEnemySelect","_useState81","_useState82","selectedPosition","setSelectedPosition","_useState83","_useState84","storyText","setStoryText","_useState85","_useState86","isAoeMode","setIsAoeMode","_useState87","_useState88","showColorWheel","setShowColorWheel","unsubscribeRef","handleDisconnect","handleInitiativeRoll","keys","_ref16","_ref17","token","roll","random","details","sort","a","b","rollDice","allRolls","d","numRolls","push","finalRoll","grandTotal","reduce","sum","newResult","r","flat","individualTotals","timestamp","slice","vibrate","handleCellPress","_ref18","col","_currentRoomData$laye","currentAoe","newAoe","_x","_x2","savePlayerData","_ref19","updatedCharacters","roomSnapshot","roomPlayerRef","globalPlayerRef","playerData","Promise","all","players","_x3","_ref20","code","playerSnapshot","savedCharacters","exists","gameRef","roomData","updatedRoomData","unsubscribe","data","_data$campaignStory","_data$campaignStory2","_data$players","_data$players$playerN","undefined","newCharacters","prevCharacters","JSON","stringify","_x4","handleOffline","window","addEventListener","removeEventListener","layoutStyles","sidePanel","sidePanelTitle","panelButton","panelButtonText","characterItem","characterInfo","characterName","characterDetails","handleDeleteCharacter","char","handleEnemySelect","_ref22","_x5","darkMode","updatedLoot","_ref23","Error","playerRef","_x6","_ref24","_x7","size","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","nextTurn","num","_ref25","roll1","roll2","damage","pop","transform","scale","_initiative$currentTu","_layers$aoe","isCurrentTurn","onLongPress","numberOfLines","statusEffect","find","textAlignVertical","lineHeight","multiline"],"sources":["C:/Users/Daniel/Desktop/3d-dice-main/App.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  TouchableOpacity, \n  Pressable,\n  TextInput, \n  ScrollView, \n  Alert, \n  Modal,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ActivityIndicator,\n  Keyboard,\n  Vibration,\n  Dimensions\n} from 'react-native';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getDatabase, \n  ref, \n  onValue, \n  set, \n  get, \n  off \n} from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from './components/DiceModel';\nimport ColorPicker from 'react-native-wheel-color-picker';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Constants\nconst LETTERS = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\nconst COLORS = [\n  '#4527A0',  // Rich purple\n  '#4A90E2',  // Bright blue\n  '#7C4DFF',  // Bright purple\n  '#00BFA5',  // Teal\n  '#3F51B5',  // Indigo\n  '#673AB7',  // Deep Purple\n  '#2196F3',  // Blue\n  '#B39DDB',  // Light Purple\n  '#FF5252',  // Red\n  '#FF4081',  // Pink\n  '#E91E63',  // Deep Pink\n  '#9C27B0',  // Purple\n  '#009688',  // Green\n  '#4CAF50',  // Light Green\n  '#8BC34A',  // Lime\n  '#CDDC39',  // Yellow-Green\n  '#FFC107',  // Amber\n  '#FF9800',  // Orange\n  '#FF5722',  // Deep Orange\n  '#795548',  // Brown\n  '#607D8B',  // Blue Grey\n  '#F44336',  // Bright Red\n  '#E53935',  // Dark Red\n  '#D32F2F',  // Darker Red\n  '#C2185B',  // Dark Pink\n  '#7B1FA2',  // Dark Purple\n  '#512DA8',  // Dark Indigo\n  '#303F9F',  // Dark Blue\n  '#1976D2',  // Medium Blue\n  '#0288D1',  // Light Blue\n  '#0097A7',  // Cyan\n  '#00796B',  // Dark Teal\n  '#388E3C',  // Dark Green\n  '#689F38',  // Olive Green\n  '#AFB42B',  // Dark Lime\n  '#FBC02D',  // Golden\n  '#FFA000',  // Dark Amber\n  '#F57C00',  // Dark Orange\n  '#E64A19',  // Burnt Orange\n  '#5D4037'   // Dark Brown\n];\nconst GRID_SIZE = 10;\nconst ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nconst SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nconst CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nconst DICE_TYPES = [\n  { sides: 4, color: '#FF6B6B' },\n  { sides: 6, color: '#4ECDC4' },\n  { sides: 8, color: '#45B7D1' },\n  { sides: 10, color: '#96CEB4' },\n  { sides: 12, color: '#FFEEAD' },\n  { sides: 20, color: '#D4A5A5' },\n  { sides: 100, color: '#9B59B6' }\n];\nconst STATUS_EFFECTS = [\n  { id: 'blinded', name: 'Blinded', icon: '👁️' },\n  { id: 'charmed', name: 'Charmed', icon: '💕' },\n  { id: 'deafened', name: 'Deafened', icon: '👂' },\n  { id: 'frightened', name: 'Frightened', icon: '😨' },\n  { id: 'grappled', name: 'Grappled', icon: '🤼' },\n  { id: 'incapacitated', name: 'Incapacitated', icon: '💫' },\n  { id: 'invisible', name: 'Invisible', icon: '👻' },\n  { id: 'paralyzed', name: 'Paralyzed', icon: '⚡' },\n  { id: 'petrified', name: 'Petrified', icon: '🗿' },\n  { id: 'poisoned', name: 'Poisoned', icon: '🤢' },\n  { id: 'prone', name: 'Prone', icon: '⬇️' },\n  { id: 'restrained', name: 'Restrained', icon: '⛓️' },\n  { id: 'stunned', name: 'Stunned', icon: '💫' },\n  { id: 'unconscious', name: 'Unconscious', icon: '💤' }\n];\n\n// Add this constant near the other constants at the top\nconst COMMON_ENEMIES = [\n  {\n    name: 'Bandit',\n    hp: 11,\n    maxHp: 11,\n    ac: 12,\n    initiativeBonus: 1,\n    color: '#8B4513'\n  },\n  {\n    name: 'Wolf',\n    hp: 11,\n    maxHp: 11,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#808080'\n  },\n  {\n    name: 'Wraith',\n    hp: 67,\n    maxHp: 67,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#4A0404'\n  },\n  {\n    name: 'Goblin',\n    hp: 7,\n    maxHp: 7,\n    ac: 15,\n    initiativeBonus: 2,\n    color: '#355E3B'\n  },\n  {\n    name: 'Skeleton',\n    hp: 13,\n    maxHp: 13,\n    ac: 13,\n    initiativeBonus: 2,\n    color: '#E1D9D1'\n  },\n  {\n    name: 'Zombie',\n    hp: 22,\n    maxHp: 22,\n    ac: 8,\n    initiativeBonus: -2,\n    color: '#4A412A'\n  }\n];\n\n// Get window dimensions\nconst windowDimensions = Dimensions.get('window');\nconst isSmallScreen = windowDimensions.width < 768;\n\n// Theme configuration\nconst THEME = {\n  primary: '#2E1F5E',      // Deep purple\n  secondary: '#4527A0',    // Rich purple\n  accent: '#4A90E2',       // Bright blue\n  gold: '#7C4DFF',         // Bright purple\n  danger: '#FF5252',       // Red (keeping for clear danger indication)\n  success: '#00BFA5',      // Teal (keeping for clear success indication)\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1A103C',    // Darkest purple\n    secondary: '#2E1F5E',  // Deep purple\n    dark: '#150D30',       // Very dark purple\n    panel: '#3F2B85'       // Medium purple\n  }\n};\n\n// Initial game state\nconst initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {},\n    aoe: {} // Add AoE layer\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true,\n  },\n  partyLoot: {\n    currency: { CP: 0, SP: 0, EP: 0, GP: 0, PP: 0 },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  campaignStory: {\n    text: '',\n    lastUpdate: null,\n    updatedBy: null\n  },\n  lastUpdate: Date.now()\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%',\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%',\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start',\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%',\n  },\n  leftSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 2 : 0,\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%',\n    order: isSmallScreen ? 1 : 1,\n  },\n  rightSidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n    order: isSmallScreen ? 3 : 2,\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary,\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2,\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400,\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15,\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%',\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10,\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center',\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60,\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10,\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40',\n  },\n  diceResult: {\n    color: THEME.text.light,\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent,\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12,\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%',\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200,\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary,\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent,\n  },\n  initiativeText: {\n    color: THEME.text.light,\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold',\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none',\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8,\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center',\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10,\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2,\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent,\n  },\n  quickActions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    padding: 15,\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    marginBottom: 15,\n  },\n  quickActionButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 100,\n    flex: 1,\n  },\n  quickActionText: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  infoPanel: {\n    backgroundColor: THEME.background.panel,\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n  },\n  infoPanelTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  infoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  infoCard: {\n    backgroundColor: THEME.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    flex: 1,\n    minWidth: 150,\n  },\n  infoLabel: {\n    color: THEME.accent,\n    fontSize: 12,\n    marginBottom: 5,\n  },\n  infoValue: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  statBadge: {\n    backgroundColor: THEME.accent + '20',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n    alignSelf: 'flex-start',\n  },\n  statBadgeText: {\n    color: THEME.accent,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  divider: {\n    height: 1,\n    backgroundColor: THEME.accent + '40',\n    marginVertical: 15,\n  },\n});\n\nconst additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%',\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  sheetSection: {\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10,\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10,\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5,\n  },\n  abilityMod: {\n    color: THEME.text.light,\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200,\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1,\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10,\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20,\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15,\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center',\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30,\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10,\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger,\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1,\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4,\n  },\n  enemyOption: {\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 8,\n    backgroundColor: THEME.background.secondary,\n  },\n  dmToggle: {\n    backgroundColor: THEME.background.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginLeft: 10,\n  },\n  dmToggleActive: {\n    backgroundColor: THEME.accent,\n  }\n});\n\nconst diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: '0px 2px 3.84px rgba(0, 0, 0, 0.25)', // Replace elevation and shadowProps\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold',\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  controlActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200,\n  },\n  historyScroll: {\n    padding: 10,\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary,\n  },\n  historyLeft: {\n    flex: 1,\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7,\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5,\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  diceControls: {\n    flexDirection: 'column',\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10,\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  diceContainer: {\n    width: isSmallScreen ? 80 : 100,\n    height: isSmallScreen ? 80 : 100,\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginBottom: 5,\n  }\n});\n\nconst statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15,\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80,\n  },\n  effectActive: {\n    backgroundColor: THEME.accent,\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12,\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2,\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12,\n  },\n});\n\n// Create a helper function to save game state\nconst saveGameState = async () => {\n  if (firebaseRef.current) {\n    try {\n      await set(firebaseRef.current, {\n        tokens,\n        layers,\n        initiative,\n        inCombat,\n        currentTurn,\n        partyLoot,\n        characters,\n        settings: initialGameState.settings,\n        lastUpdate: Date.now()\n      });\n    } catch (error) {\n      console.error('Error saving game state:', error);\n      Alert.alert('Error', 'Failed to save game state');\n    }\n  }\n};\n\n// Add this component definition before the TokenModal component\nconst CharacterSheetModal = memo(({ visible, onClose, character, characters, onUpdate }) => {\n  const [editedCharacter, setEditedCharacter] = useState(() => ({\n    name: character?.name || '',\n    class: character?.class || '',\n    level: character?.level || 1,\n    owner: character?.owner || '',\n    proficiencyBonus: character?.proficiencyBonus || 2,\n    // Add HP and AC\n    hp: character?.hp || 0,\n    maxHp: character?.maxHp || 0,\n    ac: character?.ac || 10,\n    abilityScores: character?.abilityScores || {\n      STR: 10,\n      DEX: 10,\n      CON: 10,\n      INT: 10,\n      WIS: 10,\n      CHA: 10\n    },\n    proficientSkills: character?.proficientSkills || [],\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: character?.items || [],\n    inventory: character?.inventory || []\n  }));\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        hp: character.hp || 0,\n        maxHp: character.maxHp || 0,\n        ac: character.ac || 10,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n\n  // Add error boundary\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  const handleAbilityScoreChange = (ability, value) => {\n    const newScore = parseInt(value) || 0;\n    setEditedCharacter(prev => ({\n      ...prev,\n      abilityScores: {\n        ...prev.abilityScores,\n        [ability]: newScore\n      }\n    }));\n  };\n\n  const toggleProficiency = (skill) => {\n    setEditedCharacter(prev => ({\n      ...prev,\n      proficientSkills: prev.proficientSkills.includes(skill)\n        ? prev.proficientSkills.filter(s => s !== skill)\n        : [...prev.proficientSkills, skill]\n    }));\n  };\n\n  const getSkillModifier = (skill, ability) => {\n    const abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    const profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n\n  const handleSave = async () => {\n    try {\n      const updatedCharacter = {\n        ...character,\n        ...editedCharacter\n      };\n\n      onUpdate(updatedCharacter);\n    } catch (error) {\n      console.error('Error saving character:', error);\n      Alert.alert('Error', 'Failed to save character');\n    }\n  };\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <GestureScrollView>\n            {/* Basic Info */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Character Info</Text>\n              <TextInput\n                style={styles.input}\n                value={editedCharacter.name}\n                onChangeText={(text) => setEditedCharacter(prev => ({...prev, name: text}))}\n                placeholder=\"Character Name\"\n                placeholderTextColor={THEME.text.light + '80'}\n              />\n              <View style={{ flexDirection: 'row', gap: 10 }}>\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={editedCharacter.class}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, class: text}))}\n                  placeholder=\"Class\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={String(editedCharacter.level)}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, level: parseInt(text) || 1}))}\n                  placeholder=\"Level\"\n                  keyboardType=\"numeric\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n              </View>\n\n              {/* Add HP and AC fields here */}\n              <View style={{ flexDirection: 'row', gap: 10, marginTop: 10 }}>\n                <View style={{ flex: 2 }}>\n                  <Text style={[styles.buttonText, { marginBottom: 5 }]}>Hit Points</Text>\n                  <View style={{ flexDirection: 'row', gap: 5 }}>\n                    <TextInput\n                      style={[styles.input, { flex: 1 }]}\n                      value={String(editedCharacter.hp)}\n                      onChangeText={(text) => setEditedCharacter(prev => ({\n                        ...prev,\n                        hp: parseInt(text) || 0\n                      }))}\n                      placeholder=\"Current HP\"\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <Text style={{ color: THEME.text.light, alignSelf: 'center', fontSize: 18 }}>/</Text>\n                    <TextInput\n                      style={[styles.input, { flex: 1 }]}\n                      value={String(editedCharacter.maxHp)}\n                      onChangeText={(text) => setEditedCharacter(prev => ({\n                        ...prev,\n                        maxHp: parseInt(text) || 0\n                      }))}\n                      placeholder=\"Max HP\"\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                </View>\n                <View style={{ flex: 1 }}>\n                  <Text style={[styles.buttonText, { marginBottom: 5 }]}>Armor Class</Text>\n                  <TextInput\n                    style={styles.input}\n                    value={String(editedCharacter.ac)}\n                    onChangeText={(text) => setEditedCharacter(prev => ({\n                      ...prev,\n                      ac: parseInt(text) || 10\n                    }))}\n                    placeholder=\"AC\"\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              </View>\n            </View>\n\n            {/* Ability Scores */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Ability Scores</Text>\n              <View style={additionalStyles.abilityScores}>\n                {ABILITY_SCORES.map(ability => (\n                  <View key={ability} style={additionalStyles.abilityBox}>\n                    <Text style={additionalStyles.abilityLabel}>{ability}</Text>\n                    <TextInput\n                      style={additionalStyles.abilityScore}\n                      value={String(editedCharacter.abilityScores[ability])}\n                      onChangeText={(text) => handleAbilityScoreChange(ability, text)}\n                      keyboardType=\"numeric\"\n                      maxLength={2}\n                      selectTextOnFocus={true}\n                    />\n                    <Text style={additionalStyles.abilityMod}>\n                      {calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : ''}\n                      {calculateModifier(editedCharacter.abilityScores[ability])}\n                    </Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n\n            {/* Skills */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Skills</Text>\n              <View style={additionalStyles.skillsList}>\n                {Object.entries(SKILLS).map(([ability, skills]) =>\n                  skills.map(skill => (\n                    <TouchableOpacity\n                      key={skill}\n                      style={additionalStyles.skillItem}\n                      onPress={() => toggleProficiency(skill)}\n                    >\n                      <View style={[\n                        additionalStyles.proficientDot,\n                        {\n                          backgroundColor: editedCharacter.proficientSkills.includes(skill)\n                            ? THEME.accent\n                            : THEME.background.secondary\n                        }\n                      ]} />\n                      <Text style={additionalStyles.skillName}>{skill}</Text>\n                      <Text style={additionalStyles.skillMod}>\n                        {getSkillModifier(skill, ability) >= 0 ? '+' : ''}\n                        {getSkillModifier(skill, ability)}\n                      </Text>\n                    </TouchableOpacity>\n                  ))\n                )}\n              </View>\n            </View>\n\n            {/* Inventory */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Inventory</Text>\n\n              <View style={additionalStyles.lootSection}>\n                {/* Currency */}\n                {CURRENCY.map(currency => (\n                  <View key={currency} style={additionalStyles.currencyRow}>\n                    <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                    <TextInput\n                      style={additionalStyles.currencyInput}\n                      value={String(editedCharacter.currency[currency] || 0)}\n                      onChangeText={(text) => {\n                        const value = parseInt(text) || 0;\n                        setEditedCharacter(prev => ({\n                          ...prev,\n                          currency: {\n                            ...prev.currency,\n                            [currency]: value\n                          }\n                        }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                ))}\n              </View>\n\n              <View style={additionalStyles.lootSection}>\n                <View style={additionalStyles.lootHeader}>\n                  <Text style={additionalStyles.sectionTitle}>Items</Text>\n                  <TouchableOpacity\n                    style={additionalStyles.addButton}\n                    onPress={() => {\n                      setEditedCharacter(prev => ({\n                        ...prev,\n                        items: [...prev.items, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>Add Item</Text>\n                  </TouchableOpacity>\n                </View>\n\n                {editedCharacter.items.map((item, index) => (\n                  <View key={index} style={additionalStyles.itemRow}>\n                    <View style={additionalStyles.itemInfo}>\n                      <TextInput\n                        style={[additionalStyles.itemInput, { flex: 2 }]}\n                        value={item.name}\n                        onChangeText={(text) => {\n                          const newItems = [...editedCharacter.items];\n                          newItems[index] = { ...item, name: text };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        placeholder=\"Item name\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      <TextInput\n                        style={[additionalStyles.itemInput, { width: 60 }]}\n                        value={String(item.quantity)}\n                        onChangeText={(text) => {\n                          const newItems = [...editedCharacter.items];\n                          newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        keyboardType=\"numeric\"\n                        placeholder=\"Qty\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      {item.addedBy === character.name && (\n                        <TouchableOpacity\n                          style={additionalStyles.removeButton}\n                          onPress={() => {\n                            setEditedCharacter(prev => ({\n                              ...prev,\n                              items: prev.items.filter((_, i) => i !== index)\n                            }));\n                          }}\n                        >\n                          <Text style={styles.buttonText}>×</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n                    <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                  </View>\n                ))}\n              </View>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={handleSave}\n              >\n                <Text style={styles.buttonText}>Save Changes</Text>\n              </TouchableOpacity>\n            </View>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Memoized Modal Components\nconst TokenModal = memo(({ \n  showTokenModal, \n  setShowTokenModal, \n  selectedToken, \n  setSelectedToken, \n  tokens, \n  firebaseRef, \n  initialGameState, \n  layers, \n  initiative, \n  inCombat, \n  currentTurn, \n  THEME \n}) => (\n  <Modal\n    visible={showTokenModal}\n    transparent={true}\n    animationType=\"fade\"\n    onRequestClose={() => setShowTokenModal(false)}\n  >\n    <Pressable \n      style={[styles.modalOverlay, { cursor: 'default' }]}\n      onPress={() => Keyboard.dismiss()}\n    >\n      <View style={styles.modalContent}>\n        <KeyboardAvoidingView \n          behavior={Platform.select({ ios: 'padding', android: 'height' })}\n          style={styles.modalContainer}\n          keyboardVerticalOffset={Platform.select({ ios: 64, android: 0 })}\n        >\n          <Pressable onPress={e => e.stopPropagation()}>\n            <Text style={styles.modalTitle}>Edit Token</Text>\n            <TextInput\n              style={styles.input}\n              value={selectedToken?.name}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  name: text\n                }));\n              }}\n              placeholder=\"Token Name\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              spellCheck={false}\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n\n            <View style={{ flexDirection: 'row', gap: 10, marginBottom: 10 }}>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.hp || '')}\n                  onChangeText={(text) => {\n                    const hp = parseInt(text) || 0;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      hp: Math.max(0, hp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Current HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.maxHp || '')}\n                  onChangeText={(text) => {\n                    const maxHp = parseInt(text) || 1;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      maxHp: Math.max(1, maxHp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Max HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n            </View>\n\n            <TextInput\n              style={styles.input}\n              value={String(selectedToken?.initiativeBonus || '0')}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  initiativeBonus: parseInt(text) || 0\n                }));\n              }}\n              keyboardType=\"numeric\"\n              placeholder=\"Initiative Bonus\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n\n            <View style={statusStyles.effectsContainer}>\n              <Text style={statusStyles.effectsTitle}>Status Effects</Text>\n              <View style={statusStyles.effectsGrid}>\n                {STATUS_EFFECTS.map(effect => (\n                  <TouchableOpacity\n                    key={effect.id}\n                    style={[\n                      statusStyles.effectButton,\n                      selectedToken?.effects?.includes(effect.id) && statusStyles.effectActive\n                    ]}\n                    onPress={() => {\n                      setSelectedToken(prev => {\n                        const currentEffects = prev.effects || [];\n                        const newEffects = currentEffects.includes(effect.id)\n                          ? currentEffects.filter(e => e !== effect.id)\n                          : [...currentEffects, effect.id];\n                        return {\n                          ...prev,\n                          effects: newEffects\n                        };\n                      });\n                    }}\n                  >\n                    <Text style={statusStyles.effectText}>\n                      {effect.icon} {effect.name}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            </View>\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.danger }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    // First get current room data\n                    get(firebaseRef.current).then((snapshot) => {\n                      const currentRoomData = snapshot.val() || {};\n                      const newTokens = { ...tokens };\n                      delete newTokens[selectedToken.position];\n                      \n                      // Update while preserving existing data\n                      set(firebaseRef.current, { \n                        ...currentRoomData,\n                        tokens: newTokens,\n                        lastUpdate: Date.now()\n                      });\n                      setShowTokenModal(false);\n                    });\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Delete</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    // First get current room data\n                    get(firebaseRef.current).then((snapshot) => {\n                      const currentRoomData = snapshot.val() || {};\n                      const newTokens = {\n                        ...tokens,\n                        [selectedToken.position]: selectedToken\n                      };\n                      \n                      // Update while preserving existing data\n                      set(firebaseRef.current, {\n                        ...currentRoomData,\n                        tokens: newTokens,\n                        lastUpdate: Date.now()\n                      });\n                      setShowTokenModal(false);\n                    });\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </Pressable>\n        </KeyboardAvoidingView>\n      </View>\n    </Pressable>\n  </Modal>\n));\n\n// Update the RoomModal styles\nconst modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000, // Add high z-index\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001, // Even higher z-index\n  },\n});\n\n// Update the RoomModal component\nconst RoomModal = memo(({ \n  showRoomModal, \n  setShowRoomModal, \n  isConnected, \n  roomCode, \n  setRoomCode, \n  isJoining, \n  connectToRoom \n}) => {\n  if (!showRoomModal) return null;\n  \n  return (\n    <Modal\n      visible={true}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={() => {}}\n    >\n      <View style={[modalStyles.modalOverlay, { backgroundColor: 'rgba(0, 0, 0, 0.8)' }]}>\n        <View style={modalStyles.modalContent}>\n          <Text style={styles.modalTitle}>Join Room</Text>\n          <TextInput\n            style={[styles.input, { marginBottom: 15 }]}\n            value={roomCode}\n            onChangeText={(text) => {\n              setRoomCode(text.trim().toLowerCase());\n            }}\n            placeholder=\"Enter room code...\"\n            placeholderTextColor={THEME.text.light + '80'}\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            editable={!isJoining}\n            autoFocus={true}\n          />\n          <TouchableOpacity\n            style={[\n              styles.modalButton,\n              { \n                backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n                width: '100%'\n              }\n            ]}\n            onPress={() => {\n              Keyboard.dismiss();\n              connectToRoom(roomCode);\n            }}\n            disabled={isJoining}\n          >\n            {isJoining ? (\n              <View style={styles.loadingButtonContent}>\n                <ActivityIndicator color={THEME.text.light} />\n                <Text style={[styles.buttonText, { marginLeft: 10 }]}>\n                  Connecting...\n                </Text>\n              </View>\n            ) : (\n              <Text style={styles.buttonText}>Join Room</Text>\n            )}\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\nconst PartyLootModal = memo(({ visible, onClose, partyLoot, onUpdate, playerName }) => {\n  const [editedLoot, setEditedLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: []\n  });\n\n  useEffect(() => {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[styles.modalContent, { maxHeight: '90%' }]}>\n          <Text style={styles.modalTitle}>Party Loot</Text>\n\n          <ScrollView>\n            {/* Currency Section */}\n            <View style={additionalStyles.lootSection}>\n              {CURRENCY.map(type => (\n                <View key={type} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{type}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedLoot.currency[type] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [type]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            {/* Items Section */}\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedLoot(prev => ({\n                      ...prev,\n                      items: [...prev.items, { \n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName \n                      }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedLoot.items.map((item, index) => (\n                <View key={item.id || index} style={additionalStyles.itemRow}>\n                  <TextInput\n                    style={[additionalStyles.itemInput, { flex: 2 }]}\n                    value={item.name}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, name: text };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    placeholder=\"Item name\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TextInput\n                    style={[additionalStyles.itemInput, { width: 60 }]}\n                    value={String(item.quantity)}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Qty\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TouchableOpacity\n                    style={additionalStyles.removeButton}\n                    onPress={() => {\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        items: prev.items.filter((_, i) => i !== index)\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>×</Text>\n                  </TouchableOpacity>\n                </View>\n              ))}\n            </View>\n          </ScrollView>\n\n          <View style={styles.buttonRow}>\n            <TouchableOpacity\n              style={[styles.button, styles.closeButton]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate(editedLoot);\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add this component definition before the App component\nconst GridZoomControls = memo(({ zoomLevel, setZoomLevel }) => {\n  const debouncedZoom = debounce((newZoom) => {\n    setZoomLevel(newZoom);\n  }, 100);\n\n  return (\n    <View style={styles.zoomControls}>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.max(0.5, zoomLevel - 0.1))}\n      >\n        <Text style={styles.buttonText}>-</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.min(2, zoomLevel + 0.1))}\n      >\n        <Text style={styles.buttonText}>+</Text>\n      </TouchableOpacity>\n    </View>\n  );\n});\n\n// Add InventoryModal component\nconst InventoryModal = memo(({ visible, onClose, character, onUpdate }) => {\n  const [editedInventory, setEditedInventory] = useState({\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    inventory: character?.inventory || []\n  });\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n\n  if (!visible || !character) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <Text style={additionalStyles.sectionTitle}>{character.name}'s Inventory</Text>\n\n          <GestureScrollView>\n            <View style={additionalStyles.lootSection}>\n              {/* Currency */}\n              {CURRENCY.map(currency => (\n                <View key={currency} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedInventory.currency[currency] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedInventory(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [currency]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedInventory(prev => ({\n                      ...prev,\n                      inventory: [...prev.inventory, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedInventory.inventory.map((item, index) => (\n                <View key={index} style={additionalStyles.itemRow}>\n                  <View style={additionalStyles.itemInfo}>\n                    <TextInput\n                      style={[additionalStyles.itemInput, { flex: 2 }]}\n                      value={item.name}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, name: text };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      placeholder=\"Item name\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <TextInput\n                      style={[additionalStyles.itemInput, { width: 60 }]}\n                      value={String(item.quantity)}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, quantity: parseInt(text) || 1 };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholder=\"Qty\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    {item.addedBy === character.name && (\n                      <TouchableOpacity\n                        style={additionalStyles.removeButton}\n                        onPress={() => {\n                          setEditedInventory(prev => ({\n                            ...prev,\n                            inventory: prev.inventory.filter((_, i) => i !== index)\n                          }));\n                        }}\n                      >\n                        <Text style={styles.buttonText}>×</Text>\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                  <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                </View>\n              ))}\n            </View>\n\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate({\n                  ...character,\n                  currency: editedInventory.currency,\n                  inventory: editedInventory.inventory\n                });\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add PlayerNameModal component\nconst PlayerNameModal = memo(({ visible, onSubmit }) => {\n  const [name, setName] = useState('');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={() => {}}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Enter Your Name</Text>\n          <TextInput\n            style={styles.input}\n            value={name}\n            onChangeText={setName}\n            placeholder=\"Your name\"\n            placeholderTextColor={THEME.text.light + '80'}\n            autoCapitalize=\"words\"\n          />\n          <TouchableOpacity\n            style={[styles.modalButton, { \n              backgroundColor: THEME.success,\n              width: '100%',\n              marginTop: 10\n            }]}\n            onPress={() => onSubmit(name)}\n            disabled={!name.trim()}\n          >\n            <Text style={styles.buttonText}>Continue</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add to styles\nconst viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5,\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2,\n  },\n});\n\n// Add this function at the top level of the App component, before the state declarations\nconst calculateModifier = (score) => {\n  return Math.floor((score - 10) / 2);\n};\n\n// Add this new component near the other modal components\nconst DiceResultModal = memo(({ visible, result, onClose }) => {\n  useEffect(() => {\n    if (visible) {\n      const timer = setTimeout(onClose, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [visible, onClose]);\n\n  if (!visible || !result) return null;\n\n  return (\n    <View style={{\n      position: 'fixed', // Change from 'absolute' to 'fixed'\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 9999, // Increase zIndex to ensure it's above everything\n      backgroundColor: 'rgba(0, 0, 0, 0.5)', // Add semi-transparent background\n    }}>\n      <View style={{\n        backgroundColor: THEME.background.panel + 'E6',\n        padding: 20,\n        borderRadius: 10,\n        alignItems: 'center',\n        minWidth: 200,\n        maxWidth: '90%',\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5,\n      }}>\n        <Text style={{\n          color: THEME.text.light,\n          fontSize: 18,\n          marginBottom: 5,\n        }}>\n          {result.dice} {result.rollType !== 'normal' ? `(${result.rollType})` : ''}\n        </Text>\n        <Text style={{\n          color: THEME.accent,\n          fontSize: 32,\n          fontWeight: 'bold',\n          marginBottom: 5,\n        }}>\n          {result.total}\n        </Text>\n        <Text style={{\n          color: THEME.text.light + '80',\n          fontSize: 14,\n        }}>\n          Rolls: [{result.rolls.join(', ')}]\n          {result.modifier !== 0 && ` + ${result.modifier}`}\n        </Text>\n      </View>\n    </View>\n  );\n});\n\n// Add this new component near the other modal components\nconst DeleteCharacterModal = memo(({ visible, character, onClose, onConfirm }) => {\n  const [confirmName, setConfirmName] = useState('');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Delete Character</Text>\n          <Text style={[styles.buttonText, { marginBottom: 10, textAlign: 'center' }]}>\n            Type \"{character?.name}\" to confirm deletion\n          </Text>\n          <TextInput\n            style={styles.input}\n            value={confirmName}\n            onChangeText={setConfirmName}\n            placeholder=\"Character name\"\n            placeholderTextColor={THEME.text.light + '80'}\n          />\n          <View style={[styles.modalButtons, { marginTop: 15 }]}>\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.background.secondary }]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[\n                styles.modalButton, \n                { \n                  backgroundColor: confirmName === character?.name ? THEME.danger : THEME.background.secondary,\n                  opacity: confirmName === character?.name ? 1 : 0.5\n                }\n              ]}\n              onPress={() => {\n                if (confirmName === character?.name) {\n                  onConfirm();\n                }\n              }}\n              disabled={confirmName !== character?.name}\n            >\n              <Text style={styles.buttonText}>Delete</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add this new component for the enemy selection modal\nconst EnemySelectModal = memo(({ visible, onClose, onSelect }) => {\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Select Enemy</Text>\n          <ScrollView style={{ maxHeight: 300 }}>\n            {COMMON_ENEMIES.map((enemy, index) => (\n              <TouchableOpacity\n                key={index}\n                style={[\n                  styles.enemyOption,\n                  { backgroundColor: THEME.background.secondary }\n                ]}\n                onPress={() => onSelect(enemy)}\n              >\n                <Text style={styles.buttonText}>{enemy.name}</Text>\n                <Text style={[styles.buttonText, { opacity: 0.7, fontSize: 12 }]}>\n                  HP: {enemy.hp} • AC: {enemy.ac}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            style={[styles.modalButton, { backgroundColor: THEME.background.secondary, marginTop: 10 }]}\n            onPress={onClose}\n          >\n            <Text style={styles.buttonText}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add new ColorWheel component before the App component\nconst ColorWheelModal = memo(({ visible, onClose, onSelectColor, initialColor }) => {\n  const [color, setColor] = useState(initialColor || '#FF0000');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[styles.modalContent, { width: isSmallScreen ? '90%' : 400, padding: 20 }]}>\n          <Text style={styles.modalTitle}>Select Color</Text>\n          <View style={{ height: 300, marginVertical: 20 }}>\n            <ColorPicker\n              color={color}\n              onColorChange={setColor}\n              thumbSize={30}\n              sliderSize={30}\n              noSnap={true}\n              row={false}\n            />\n          </View>\n          <View style={styles.modalButtons}>\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.background.secondary }]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onSelectColor(color);\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Select</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\nexport default function App() {\n  // Add calculateModifier here\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  // State declarations\n  const [roomCode, setRoomCode] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isJoining, setIsJoining] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [showRoomModal, setShowRoomModal] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [zoomLevel, setZoomLevel] = useState(isSmallScreen ? 0.8 : 1);\n  const [tokens, setTokens] = useState({});\n  const [currentColor, setCurrentColor] = useState(COLORS[0]);\n  const [initiative, setInitiative] = useState([]);\n  const [inCombat, setInCombat] = useState(false);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [layers, setLayers] = useState(initialGameState.layers);\n  const [diceHistory, setDiceHistory] = useState([]);\n  const [advantage, setAdvantage] = useState(false);\n  const [modifier, setModifier] = useState(0);\n  const [selectedToken, setSelectedToken] = useState(null);\n  const [showTokenModal, setShowTokenModal] = useState(false);\n  const [partyLoot, setPartyLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  });\n  const [showPartyLoot, setShowPartyLoot] = useState(false);\n  const [diceQuantity, setDiceQuantity] = useState(1);\n  const [characters, setCharacters] = useState([]);\n  const [showCharacterSheet, setShowCharacterSheet] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [showInventory, setShowInventory] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showPlayerNameModal, setShowPlayerNameModal] = useState(true);\n  const [rollType, setRollType] = useState('normal'); // 'normal', 'advantage', or 'disadvantage'\n  const [diceResult, setDiceResult] = useState(null);\n  const [showDiceResult, setShowDiceResult] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [isDM, setIsDM] = useState(false);\n  const [showEnemySelect, setShowEnemySelect] = useState(false);\n  const [selectedPosition, setSelectedPosition] = useState(null);\n  const [storyText, setStoryText] = useState('');\n  const [isAoeMode, setIsAoeMode] = useState(false);\n  const [showColorWheel, setShowColorWheel] = useState(false);\n\n  // Refs\n  const firebaseRef = useRef(null);\n  const unsubscribeRef = useRef(null);\n\n  // Helper Functions\n  const handleDisconnect = useCallback(() => {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n\n      // Reset room-specific state\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n      // Don't clear characters or player name\n\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n\n  const handleInitiativeRoll = useCallback(() => {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n\n    const rolls = Object.entries(tokens).map(([position, token]) => {\n      const roll = Math.floor(Math.random() * 20) + 1;\n      const initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position,\n        initiative,\n        details: `${token.name} (${initiative})`\n      };\n    });\n\n    rolls.sort((a, b) => b.initiative - a.initiative);\n\n    if (firebaseRef.current) {\n      set(firebaseRef.current, {\n        ...initialGameState,\n        tokens,\n        layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      });\n    }\n\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n\n  const rollDice = useCallback((sides) => {\n    const allRolls = [];\n\n    // Roll for each die in quantity\n    for (let d = 0; d < diceQuantity; d++) {\n      const rolls = [];\n      const numRolls = rollType !== 'normal' ? 2 : 1;\n\n      // Roll with advantage/disadvantage if enabled\n      for (let i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n\n      const finalRoll = rollType === 'advantage' \n        ? Math.max(...rolls) \n        : rollType === 'disadvantage'\n          ? Math.min(...rolls)\n          : rolls[0];\n\n      allRolls.push({\n        rolls,\n        total: finalRoll\n      });\n    }\n\n    // Calculate grand total including modifier\n    const grandTotal = allRolls.reduce((sum, roll) => sum + roll.total, 0) + modifier;\n\n    const newResult = {\n      dice: `${diceQuantity}d${sides}`,\n      rolls: allRolls.map(r => r.rolls).flat(),\n      individualTotals: allRolls.map(r => r.total),\n      modifier,\n      rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n\n    setDiceHistory(prev => [newResult, ...prev.slice(0, 49)]);\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n\n  const handleCellPress = useCallback(async (row, col) => {\n    if (!firebaseRef.current) return;\n\n    try {\n      const position = `${row}-${col}`;\n      \n      // Handle AoE mode\n      if (isAoeMode) {\n        const snapshot = await get(firebaseRef.current);\n        const currentRoomData = snapshot.val() || {};\n        const currentAoe = currentRoomData.layers?.aoe || {};\n        \n        const newAoe = { ...currentAoe };\n        if (newAoe[position]) {\n          delete newAoe[position];\n        } else {\n          newAoe[position] = { color: currentColor };\n        }\n\n        await set(firebaseRef.current, {\n          ...currentRoomData,\n          layers: {\n            ...currentRoomData.layers,\n            aoe: newAoe\n          },\n          lastUpdate: Date.now()\n        });\n        return;\n      }\n\n      // Original token handling code\n      const newTokens = { ...tokens };\n\n      // First get current room data to preserve all existing data\n      const snapshot = await get(firebaseRef.current);\n      const currentRoomData = snapshot.val() || {};\n\n      if (tokens[position]) {\n        delete newTokens[position];\n      } else {\n        if (isDM) {\n          setSelectedPosition(position);\n          setShowEnemySelect(true);\n          return;\n        } else {\n          // Check if a character is selected\n          if (!selectedCharacter) {\n            Alert.alert('No Character Selected', 'Please select a character from your list first.');\n            return;\n          }\n\n          // Create token from selected character\n          newTokens[position] = {\n            name: selectedCharacter.name,\n            color: currentColor,\n            hp: selectedCharacter.hp,\n            maxHp: selectedCharacter.maxHp,\n            ac: selectedCharacter.ac,\n            initiativeBonus: calculateModifier(selectedCharacter.abilityScores.DEX),\n            effects: [],\n            position,\n            owner: playerName\n          };\n        }\n      }\n\n      // Update Firebase while preserving all existing data\n      await set(firebaseRef.current, {\n        ...currentRoomData,\n        tokens: newTokens,\n        lastUpdate: Date.now()\n      });\n\n      setTokens(newTokens);\n    } catch (error) {\n      console.error('Error updating tokens:', error);\n      Alert.alert('Error', 'Failed to update token');\n    }\n  }, [tokens, isDM, selectedCharacter, playerName, currentColor, isAoeMode]);\n\n  // Update the savePlayerData function\n  const savePlayerData = useCallback(async (updatedCharacters) => {\n    if (!playerName || !roomCode) return;\n\n    try {\n      // First get current room data to preserve existing data\n      const roomSnapshot = await get(ref(database, `rooms/${roomCode}`));\n      const currentRoomData = roomSnapshot.val() || {};\n\n      // Save to both the room and a separate players collection\n      const roomPlayerRef = ref(database, `rooms/${roomCode}/players/${playerName}`);\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n\n      const playerData = {\n        characters: updatedCharacters,\n        lastUpdate: Date.now()\n      };\n\n      // Update both locations\n      await Promise.all([\n        set(roomPlayerRef, playerData),\n        set(globalPlayerRef, playerData),\n        // Update room data while preserving existing data\n        set(ref(database, `rooms/${roomCode}`), {\n          ...currentRoomData,\n          players: {\n            ...(currentRoomData.players || {}),\n            [playerName]: playerData\n          }\n        })\n      ]);\n\n      // Update local state after successful save\n      setCharacters(updatedCharacters);\n    } catch (error) {\n      console.error('Error saving player data:', error);\n      Alert.alert('Error', 'Failed to save character data');\n    }\n  }, [playerName, roomCode]);\n\n  // Update the connectToRoom function's onValue listener\n  const connectToRoom = useCallback(async (code) => {\n    if (!code.trim() || !playerName) {\n      Alert.alert(\"Error\", \"Please enter a room code and player name\");\n      return;\n    }\n\n    setIsJoining(true);\n    setIsLoading(true);\n\n    try {\n      // First try to load player's global data\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n      const playerSnapshot = await get(globalPlayerRef);\n      let savedCharacters = [];\n      \n      if (playerSnapshot.exists()) {\n        const playerData = playerSnapshot.val();\n        savedCharacters = playerData.characters || [];\n        // Set characters from global data first\n        setCharacters(savedCharacters);\n      }\n\n      const gameRef = ref(database, `rooms/${code}`);\n      firebaseRef.current = gameRef;\n\n      // Check if room exists\n      const snapshot = await get(gameRef);\n      if (!snapshot.exists()) {\n        // If room doesn't exist, create it with the player's characters\n        await set(gameRef, {\n          ...initialGameState,\n          players: {\n            [playerName]: {\n              characters: savedCharacters,\n              lastUpdate: Date.now()\n            }\n          }\n        });\n      } else {\n        // If room exists, check for room-specific character data\n        const roomData = snapshot.val();\n        if (!roomData.players || !roomData.players[playerName]) {\n          // If no room-specific data, update room with player's global characters\n          const updatedRoomData = {\n            ...roomData,\n            players: {\n              ...(roomData.players || {}),\n              [playerName]: {\n                characters: savedCharacters,\n                lastUpdate: Date.now()\n              }\n            }\n          };\n          await set(gameRef, updatedRoomData);\n        }\n      }\n\n      // Set up real-time listener\n      const unsubscribe = onValue(gameRef, (snapshot) => {\n        const data = snapshot.val();\n        if (data) {\n          setTokens(data.tokens || {});\n          setLayers(data.layers || initialGameState.layers);\n          setInitiative(data.initiative || []);\n          setInCombat(data.inCombat || false);\n          setCurrentTurn(data.currentTurn || 0);\n          setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n          \n          // Only update story text if it's different from current text\n          // and if it was updated by someone else\n          if (data.campaignStory?.text !== undefined && \n              data.campaignStory?.updatedBy !== playerName) {\n            setStoryText(data.campaignStory.text);\n          }\n\n          // Only update characters if they've changed and new data exists\n          if (data.players?.[playerName]?.characters) {\n            const newCharacters = data.players[playerName].characters;\n            setCharacters(prevCharacters => {\n              // Don't update if we have existing characters and new data is empty\n              if (prevCharacters?.length > 0 && (!newCharacters || newCharacters.length === 0)) {\n                return prevCharacters;\n              }\n              // Only update if the data is different\n              if (JSON.stringify(newCharacters) !== JSON.stringify(prevCharacters)) {\n                return newCharacters;\n              }\n              return prevCharacters;\n            });\n          }\n        }\n      });\n\n      unsubscribeRef.current = unsubscribe;\n      setRoomCode(code);\n      setShowRoomModal(false);\n      setIsConnected(true);\n\n    } catch (error) {\n      console.error('Connection error:', error);\n      Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n      setIsConnected(false);\n    } finally {\n      setIsJoining(false);\n      setIsLoading(false);\n    }\n  }, [playerName]);\n\n  // Effects\n  useEffect(() => {\n    const handleOffline = () => {\n      Alert.alert(\n        'Connection Lost',\n        'Please check your internet connection',\n        [{ text: 'OK' }]\n      );\n    };\n\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n\n  // Add to styles\n  const layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%',\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10,\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10,\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1,\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold',\n    },\n    characterItem: {\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 5,\n      backgroundColor: THEME.background.secondary,\n    },\n    characterInfo: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontWeight: 'bold',\n    },\n    characterDetails: {\n      color: THEME.text.light,\n      opacity: 0.8,\n    },\n  };\n\n  // Add the delete function in App component\n  const handleDeleteCharacter = useCallback(async () => {\n    if (!selectedCharacter) return;\n\n    try {\n      const newCharacters = characters.filter(char => char.name !== selectedCharacter.name);\n      setCharacters(newCharacters);\n      await savePlayerData(newCharacters);\n      setSelectedCharacter(null);\n      setShowDeleteModal(false);\n    } catch (error) {\n      console.error('Error deleting character:', error);\n      Alert.alert('Error', 'Failed to delete character');\n    }\n  }, [selectedCharacter, characters, savePlayerData]);\n\n  // Add the handleEnemySelect function\n  const handleEnemySelect = useCallback(async (enemy) => {\n    if (!selectedPosition || !firebaseRef.current) return;\n\n    try {\n      const newTokens = { ...tokens };\n      newTokens[selectedPosition] = {\n        ...enemy,\n        position: selectedPosition,\n        effects: [],\n        owner: 'DM'\n      };\n\n      // First get current room data to preserve all existing data\n      const snapshot = await get(firebaseRef.current);\n      const currentRoomData = snapshot.val() || {};\n\n      // Update Firebase while preserving all existing data\n      await set(firebaseRef.current, {\n        ...currentRoomData,\n        tokens: newTokens,\n        lastUpdate: Date.now()\n      });\n\n      setTokens(newTokens);\n      setShowEnemySelect(false);\n      setSelectedPosition(null);\n    } catch (error) {\n      console.error('Error adding enemy:', error);\n      Alert.alert('Error', 'Failed to add enemy');\n    }\n  }, [selectedPosition, tokens]);\n\n  // Main render return\n  return (\n    <SafeAreaView style={[styles.container, isDarkMode && styles.darkMode]}>\n      <View style={styles.container}>\n        {/* Modals stay at the top level */}\n        <TokenModal \n          showTokenModal={showTokenModal}\n          setShowTokenModal={setShowTokenModal}\n          selectedToken={selectedToken}\n          setSelectedToken={setSelectedToken}\n          tokens={tokens}\n          firebaseRef={firebaseRef}\n          initialGameState={initialGameState}\n          layers={layers}\n          initiative={initiative}\n          inCombat={inCombat}\n          currentTurn={currentTurn}\n          THEME={THEME}\n        />\n\n        <RoomModal \n          showRoomModal={showRoomModal}\n          setShowRoomModal={setShowRoomModal}\n          isConnected={isConnected}\n          roomCode={roomCode}\n          setRoomCode={setRoomCode}\n          isJoining={isJoining}\n          connectToRoom={connectToRoom}\n        />\n\n        <PlayerNameModal\n          visible={showPlayerNameModal && !playerName}\n          onSubmit={(name) => {\n            setPlayerName(name);\n            setShowPlayerNameModal(false);\n            setIsConnected(true);\n          }}\n        />\n\n        <DiceResultModal\n          visible={showDiceResult}\n          result={diceResult}\n          onClose={() => setShowDiceResult(false)}\n        />\n\n        <PartyLootModal\n          visible={showPartyLoot}\n          onClose={() => setShowPartyLoot(false)}\n          partyLoot={partyLoot}\n          playerName={playerName}\n          onUpdate={(updatedLoot) => {\n            setPartyLoot(updatedLoot);\n            if (firebaseRef.current) {\n              set(firebaseRef.current, {\n                ...initialGameState,\n                tokens,\n                layers,\n                initiative,\n                inCombat,\n                currentTurn,\n                partyLoot: updatedLoot\n              });\n            }\n          }}\n        />\n\n        <CharacterSheetModal\n          visible={showCharacterSheet}\n          onClose={() => setShowCharacterSheet(false)}\n          character={selectedCharacter || {\n            name: '',\n            class: '',\n            level: 1,\n            owner: playerName,\n            proficiencyBonus: 2,\n            hp: 0,\n            maxHp: 0,\n            ac: 10,\n            abilityScores: {\n              STR: 10,\n              DEX: 10,\n              CON: 10,\n              INT: 10,\n              WIS: 10,\n              CHA: 10\n            },\n            proficientSkills: [],\n            currency: {\n              CP: 0,\n              SP: 0,\n              EP: 0,\n              GP: 0,\n              PP: 0\n            },\n            items: [],\n            inventory: []\n          }}\n          characters={characters}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n\n              // Create new array with updated character\n              const newCharacters = selectedCharacter\n                ? characters.map(char => \n                    char.name === selectedCharacter.name ? updatedCharacter : char\n                  )\n                : [...characters, updatedCharacter];\n\n              // Update local state first\n              setCharacters(newCharacters);\n\n              // Save to Firebase\n              const playerRef = ref(database, `players/${playerName}`);\n              await set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n\n              // Also save to room data while preserving campaign story\n              if (firebaseRef.current) {\n                // First get the current room data\n                const roomSnapshot = await get(firebaseRef.current);\n                const currentRoomData = roomSnapshot.val() || {};\n                \n                // Update the room data while preserving campaign story and other data\n                await set(firebaseRef.current, {\n                  ...currentRoomData,\n                  tokens,\n                  layers,\n                  initiative,\n                  inCombat,\n                  currentTurn,\n                  partyLoot,\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                });\n              }\n\n              setShowCharacterSheet(false);\n\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          }}\n        />\n\n        <InventoryModal\n          visible={showInventory}\n          onClose={() => setShowInventory(false)}\n          character={selectedCharacter}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              const newCharacters = characters.map(char => \n                char.name === selectedCharacter.name ? updatedCharacter : char\n              );\n\n              setCharacters(newCharacters);\n              await savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          }}\n        />\n\n        {!isConnected ? (\n          <View style={styles.loadingContainer}>\n            {isLoading ? (\n              <View style={{ alignItems: 'center' }}>\n                <ActivityIndicator size=\"large\" color={THEME.accent} />\n                <Text style={[styles.loadingText, { marginTop: 20 }]}>\n                  Connecting to room...\n                </Text>\n              </View>\n            ) : (\n              <Text style={styles.loadingText}>\n                Enter a room code to begin\n              </Text>\n            )}\n          </View>\n        ) : (\n          <>\n            <View style={styles.header}>\n              <Text style={styles.title}>D&D Combat Tracker</Text>\n              <ScrollView \n                horizontal={isSmallScreen} \n                showsHorizontalScrollIndicator={false}\n                contentContainerStyle={styles.controls}\n              >\n                <TouchableOpacity \n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={() => setShowRoomModal(true)}\n                >\n                  <Text style={styles.buttonText}>Room: {roomCode}</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={handleInitiativeRoll}\n                >\n                  <Text style={styles.buttonText}>Roll Initiative</Text>\n                </TouchableOpacity>\n\n                {inCombat && (\n                  <>\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.success }]}\n                      onPress={() => {\n                        const nextTurn = (currentTurn + 1) % initiative.length;\n                        setCurrentTurn(nextTurn);\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative,\n                            inCombat: true,\n                            currentTurn: nextTurn\n                          });\n                        }\n                      }}\n                    >\n                      <Text style={styles.buttonText}>Next Turn</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                      onPress={() => {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0\n                          });\n                        }\n                        setInitiative([]);\n                        setInCombat(false);\n                        setCurrentTurn(0);\n                      }}\n                    >\n                      <Text style={styles.buttonText}>End Combat</Text>\n                    </TouchableOpacity>\n                  </>\n                )}\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                  onPress={() => {\n                    Alert.alert(\n                      \"Leave Room\",\n                      \"Are you sure you want to leave this room?\",\n                      [\n                        { text: \"Cancel\", style: \"cancel\" },\n                        { \n                          text: \"Leave\", \n                          style: \"destructive\",\n                          onPress: () => {\n                            handleDisconnect();\n                            setShowRoomModal(true);\n                          }\n                        }\n                      ]\n                    );\n                  }}\n                >\n                  <Text style={styles.buttonText}>Leave Room</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity \n                  style={[\n                    styles.controlButton,\n                    isDM && styles.dmToggleActive\n                  ]}\n                  onPress={() => setIsDM(!isDM)}\n                >\n                  <Text style={styles.buttonText}>DM Mode</Text>\n                </TouchableOpacity>\n\n                {/* Add AoE toggle button to controls */}\n                <View style={styles.controls}>\n                  {/* ... existing control buttons ... */}\n                  <TouchableOpacity\n                    style={[\n                      styles.controlButton,\n                      { backgroundColor: isAoeMode ? THEME.accent : THEME.background.secondary }\n                    ]}\n                    onPress={() => setIsAoeMode(!isAoeMode)}\n                  >\n                    <Text style={styles.buttonText}>AoE Mode</Text>\n                  </TouchableOpacity>\n                </View>\n              </ScrollView>\n            </View>\n            <ScrollView style={styles.content}>\n              <View style={styles.mainArea}>\n                {/* Left Sidebar - Dice Roller */}\n                <View style={styles.leftSidebar}>\n                  <View style={diceStyles.dicePanel}>\n                    <Text style={diceStyles.diceTitle}>Dice Roller</Text>\n                    <View style={diceStyles.diceControls}>\n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.controlGroup}>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'advantage' && diceStyles.controlActive,\n                              rollType === 'advantage' && { backgroundColor: THEME.success }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'advantage' ? 'normal' : 'advantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Advantage</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'disadvantage' && diceStyles.controlActive,\n                              rollType === 'disadvantage' && { backgroundColor: THEME.danger }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'disadvantage' ? 'normal' : 'disadvantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Disadvantage</Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n\n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.modifierGroup}>\n                          <Text style={diceStyles.modifierLabel}>Modifier</Text>\n                          <TextInput\n                            style={diceStyles.modifierInput}\n                            value={String(modifier)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 0;\n                              setModifier(num);\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                        <View style={diceStyles.quantityGroup}>\n                          <Text style={diceStyles.quantityLabel}>Quantity</Text>\n                          <TextInput\n                            style={diceStyles.quantityInput}\n                            value={String(diceQuantity)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 1;\n                              setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                      </View>\n                    </View>\n\n                    <View style={diceStyles.diceGrid}>\n                      {DICE_TYPES.map(({ sides }) => (\n                        <TouchableOpacity\n                          key={sides}\n                          style={[diceStyles.diceButton, { backgroundColor: THEME.background.secondary }]}\n                          onPress={() => {\n                            const rolls = [];\n                            for (let i = 0; i < diceQuantity; i++) {\n                              if (rollType !== 'normal') {\n                                const roll1 = Math.floor(Math.random() * sides) + 1;\n                                const roll2 = Math.floor(Math.random() * sides) + 1;\n                                rolls.push(rollType === 'advantage' ? Math.max(roll1, roll2) : Math.min(roll1, roll2));\n                              } else {\n                                rolls.push(Math.floor(Math.random() * sides) + 1);\n                              }\n                            }\n\n                            const total = rolls.reduce((sum, roll) => sum + roll, 0) + modifier;\n                            const result = {\n                              dice: `${diceQuantity}d${sides}`,\n                              rolls,\n                              modifier,\n                              rollType,\n                              total\n                            };\n\n                            setDiceResult(result);\n                            setShowDiceResult(true);\n                            Vibration.vibrate(50);\n                          }}\n                        >\n                          <Text style={diceStyles.diceButtonText}>d{sides}</Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  </View>\n\n                  {/* Player Tools Panel */}\n                  <View style={styles.infoPanel}>\n                    <Text style={styles.infoPanelTitle}>Player Tools</Text>\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll = Math.floor(Math.random() * 20) + 1;\n                          setDiceResult({\n                            dice: \"d20\",\n                            rolls: [roll],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: roll\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick d20</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll1 = Math.floor(Math.random() * 20) + 1;\n                          const roll2 = Math.floor(Math.random() * 20) + 1;\n                          const total = Math.max(roll1, roll2);\n                          setDiceResult({\n                            dice: \"d20 with advantage\",\n                            rolls: [roll1, roll2],\n                            modifier: 0,\n                            rollType: 'advantage',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Advantage</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const damage = Math.floor(Math.random() * 8) + 1;\n                          setDiceResult({\n                            dice: \"d8\",\n                            rolls: [damage],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: damage\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Damage</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={styles.quickActionButton}\n                        onPress={() => {\n                          const roll1 = Math.floor(Math.random() * 20) + 1;\n                          const roll2 = Math.floor(Math.random() * 20) + 1;\n                          const total = Math.min(roll1, roll2);\n                          setDiceResult({\n                            dice: \"d20 with disadvantage\",\n                            rolls: [roll1, roll2],\n                            modifier: 0,\n                            rollType: 'disadvantage',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Quick Disadvantage</Text>\n                      </TouchableOpacity>\n                    </View>\n\n                    <View style={styles.divider} />\n\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, { backgroundColor: THEME.accent }]}\n                        onPress={() => {\n                          const rolls = [\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1,\n                            Math.floor(Math.random() * 6) + 1\n                          ].sort((a, b) => b - a);\n                          // Drop lowest roll\n                          rolls.pop();\n                          const total = rolls.reduce((sum, roll) => sum + roll, 0);\n                          setDiceResult({\n                            dice: \"4d6 drop lowest\",\n                            rolls: rolls,\n                            modifier: 0,\n                            rollType: 'normal',\n                            total\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Roll Ability Score</Text>\n                      </TouchableOpacity>\n\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                        onPress={() => {\n                          const roll = Math.floor(Math.random() * 100) + 1;\n                          setDiceResult({\n                            dice: \"d100\",\n                            rolls: [roll],\n                            modifier: 0,\n                            rollType: 'normal',\n                            total: roll\n                          });\n                          setShowDiceResult(true);\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>Percentile Roll</Text>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n\n                {/* Grid Section */}\n                <View style={styles.gridSection}>\n                  <ScrollView \n                    horizontal \n                    contentContainerStyle={{ minWidth: '100%' }}\n                  >\n                    <ScrollView>\n                      <View style={[\n                        styles.gridContainer,\n                        { transform: [{ scale: zoomLevel }] }\n                      ]}>\n                        {/* Color Picker */}\n                        <View style={styles.colorPicker}>\n                          <TouchableOpacity\n                            style={[\n                              styles.colorButton,\n                              { backgroundColor: currentColor, width: 40, height: 40 }\n                            ]}\n                            onPress={() => setShowColorWheel(true)}\n                          />\n                        </View>\n\n                        {/* Grid */}\n                        {Array.from({ length: GRID_SIZE }).map((_, row) => (\n                          <View key={row} style={styles.row}>\n                            {Array.from({ length: GRID_SIZE }).map((_, col) => {\n                              const position = `${row}-${col}`;\n                              const token = tokens[position];\n                              const isCurrentTurn = inCombat && \n                                initiative[currentTurn]?.position === position;\n\n                              return (\n                                <TouchableOpacity\n                                  key={col}\n                                  style={[\n                                    styles.cell,\n                                    token && { backgroundColor: token.color },\n                                    layers.aoe?.[position] && {\n                                      backgroundColor: layers.aoe[position].color,\n                                      opacity: 0.5\n                                    },\n                                    isCurrentTurn && styles.currentTurn\n                                  ]}\n                                  onPress={() => handleCellPress(row, col)}\n                                  onLongPress={() => {\n                                    if (token) {\n                                      setSelectedToken({ ...token, position });\n                                      setShowTokenModal(true);\n                                    }\n                                  }}\n                                >\n                                  {token && (\n                                    <View style={styles.tokenContent}>\n                                      <Text style={[\n                                        styles.tokenText,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]} numberOfLines={1}>\n                                        {token.name}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenHp,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        HP: {token.hp}/{token.maxHp}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenHp,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        AC: {token.ac}\n                                      </Text>\n                                      {token.effects && token.effects.length > 0 && (\n                                        <View style={statusStyles.tokenEffects}>\n                                          {token.effects.map(effect => {\n                                            const statusEffect = STATUS_EFFECTS.find(e => e.id === effect);\n                                            return statusEffect ? (\n                                              <Text key={effect} style={statusStyles.effectIcon}>\n                                                {statusEffect.icon}\n                                              </Text>\n                                            ) : null;\n                                          })}\n                                        </View>\n                                      )}\n                                    </View>\n                                  )}\n                                </TouchableOpacity>\n                              );\n                            })}\n                          </View>\n                        ))}\n                      </View>\n                    </ScrollView>\n                  </ScrollView>\n                  <GridZoomControls \n                    zoomLevel={zoomLevel}\n                    setZoomLevel={setZoomLevel}\n                  />\n\n                  {/* Campaign Story Panel */}\n                  <View style={[styles.infoPanel, { marginTop: 20 }]}>\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 10 }}>\n                      <Text style={styles.infoPanelTitle}>Campaign Story</Text>\n                      {isDM && (\n                        <TouchableOpacity\n                          style={[styles.quickActionButton, { backgroundColor: THEME.accent, width: 100 }]}\n                          onPress={() => {\n                            if (firebaseRef.current) {\n                              // First get the current room data\n                              get(firebaseRef.current).then((snapshot) => {\n                                const currentRoomData = snapshot.val() || {};\n                                \n                                // Update the room data while preserving all existing data\n                                set(firebaseRef.current, {\n                                  ...currentRoomData,\n                                  campaignStory: {\n                                    text: storyText,\n                                    lastUpdate: Date.now(),\n                                    updatedBy: playerName\n                                  }\n                                });\n                              });\n                            }\n                          }}\n                        >\n                          <Text style={styles.quickActionText}>Save Story</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n                    <TextInput\n                      style={[\n                        styles.input,\n                        {\n                          height: 200,\n                          textAlignVertical: 'top',\n                          padding: 10,\n                          backgroundColor: THEME.background.secondary,\n                          color: THEME.text.light,\n                          fontSize: 14,\n                          lineHeight: 20,\n                          marginBottom: 10\n                        }\n                      ]}\n                      multiline={true}\n                      value={storyText}\n                      onChangeText={isDM ? setStoryText : undefined}\n                      editable={isDM}\n                      placeholder=\"Type or paste your campaign story here...\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    {initialGameState.campaignStory?.updatedBy && (\n                      <Text style={[styles.infoLabel, { textAlign: 'right' }]}>\n                        Last updated by {initialGameState.campaignStory.updatedBy}\n                      </Text>\n                    )}\n                  </View>\n                </View>\n\n                {/* Right Sidebar - Character Management & Combat */}\n                <View style={styles.rightSidebar}>\n                  {/* Quick Actions */}\n                  <View style={styles.quickActions}>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={() => setShowCharacterSheet(true)}\n                    >\n                      <Text style={styles.quickActionText}>New Character</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={() => setShowPartyLoot(true)}\n                    >\n                      <Text style={styles.quickActionText}>Party Loot</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={styles.quickActionButton}\n                      onPress={handleInitiativeRoll}\n                    >\n                      <Text style={styles.quickActionText}>Roll Initiative</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity \n                      style={[styles.quickActionButton, { backgroundColor: THEME.danger }]}\n                      onPress={() => {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens: {},\n                            layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0,\n                            partyLoot,\n                            characters\n                          });\n                          setTokens({});\n                          setInitiative([]);\n                          setInCombat(false);\n                          setCurrentTurn(0);\n                        }\n                      }}\n                    >\n                      <Text style={styles.quickActionText}>Clear Board</Text>\n                    </TouchableOpacity>\n                  </View>\n\n                  {/* Character Management Panel */}\n                  <View style={[styles.infoPanel, { marginBottom: 15 }]}>\n                    <Text style={styles.infoPanelTitle}>Characters</Text>\n                    <ScrollView style={{ maxHeight: 200 }}>\n                      {characters\n                        .filter(char => char.owner === playerName)\n                        .map((char, index) => (\n                          <TouchableOpacity\n                            key={index}\n                            style={[\n                              layoutStyles.characterItem,\n                              selectedCharacter?.name === char.name && { backgroundColor: THEME.accent + '40' }\n                            ]}\n                            onPress={() => setSelectedCharacter(char)}\n                          >\n                            <View style={layoutStyles.characterInfo}>\n                              <View>\n                                <Text style={layoutStyles.characterName}>{char.name}</Text>\n                                <Text style={layoutStyles.characterDetails}>\n                                  Level {char.level} {char.class}\n                                </Text>\n                              </View>\n                              <View style={styles.statBadge}>\n                                <Text style={styles.statBadgeText}>\n                                  HP: {char.hp}/{char.maxHp}\n                                </Text>\n                              </View>\n                            </View>\n                          </TouchableOpacity>\n                        ))}\n                    </ScrollView>\n                    \n                    {selectedCharacter && (\n                      <>\n                        <View style={styles.divider} />\n                        <View style={styles.infoGrid}>\n                          <TouchableOpacity\n                            style={[styles.quickActionButton, { backgroundColor: THEME.accent }]}\n                            onPress={() => setShowCharacterSheet(true)}\n                          >\n                            <Text style={styles.quickActionText}>Character Sheet</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                            onPress={() => setShowInventory(true)}\n                          >\n                            <Text style={styles.quickActionText}>Inventory</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[styles.quickActionButton, { backgroundColor: THEME.danger }]}\n                            onPress={() => setShowDeleteModal(true)}\n                          >\n                            <Text style={styles.quickActionText}>Delete Character</Text>\n                          </TouchableOpacity>\n                        </View>\n                      </>\n                    )}\n                  </View>\n\n                  {/* Combat Tracker Panel */}\n                  <View style={styles.infoPanel}>\n                    <Text style={styles.infoPanelTitle}>Combat Tracker</Text>\n                    <View style={styles.infoGrid}>\n                      <TouchableOpacity \n                        style={[styles.quickActionButton, inCombat ? { backgroundColor: THEME.danger } : {}]}\n                        onPress={() => {\n                          if (inCombat) {\n                            if (firebaseRef.current) {\n                              set(firebaseRef.current, {\n                                ...initialGameState,\n                                tokens,\n                                layers,\n                                initiative: [],\n                                inCombat: false,\n                                currentTurn: 0\n                              });\n                            }\n                            setInitiative([]);\n                            setInCombat(false);\n                            setCurrentTurn(0);\n                          } else {\n                            handleInitiativeRoll();\n                          }\n                        }}\n                      >\n                        <Text style={styles.quickActionText}>\n                          {inCombat ? 'End Combat' : 'Start Combat'}\n                        </Text>\n                      </TouchableOpacity>\n                      \n                      {inCombat && (\n                        <TouchableOpacity\n                          style={[styles.quickActionButton, { backgroundColor: THEME.success }]}\n                          onPress={() => {\n                            const nextTurn = (currentTurn + 1) % initiative.length;\n                            setCurrentTurn(nextTurn);\n                            if (firebaseRef.current) {\n                              set(firebaseRef.current, {\n                                ...initialGameState,\n                                tokens,\n                                layers,\n                                initiative,\n                                inCombat: true,\n                                currentTurn: nextTurn\n                              });\n                            }\n                          }}\n                        >\n                          <Text style={styles.quickActionText}>Next Turn</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n\n                    {inCombat && initiative.length > 0 && (\n                      <>\n                        <View style={styles.divider} />\n                        <Text style={[styles.infoPanelTitle, { fontSize: 14 }]}>Current Turn</Text>\n                        <View style={[styles.infoCard, { marginBottom: 10 }]}>\n                          <Text style={styles.infoValue}>\n                            {tokens[initiative[currentTurn]?.position]?.name || 'Unknown'}\n                          </Text>\n                          <Text style={styles.infoLabel}>\n                            Initiative: {initiative[currentTurn]?.initiative || '0'}\n                          </Text>\n                        </View>\n                        \n                        <Text style={[styles.infoPanelTitle, { fontSize: 14 }]}>Initiative Order</Text>\n                        <ScrollView style={{ maxHeight: 150 }}>\n                          {initiative.map((item, index) => {\n                            const token = tokens[item.position];\n                            if (!token) return null;\n                            return (\n                              <View \n                                key={item.position}\n                                style={[\n                                  styles.infoCard,\n                                  { marginBottom: 5 },\n                                  index === currentTurn && { backgroundColor: THEME.accent + '40' }\n                                ]}\n                              >\n                                <Text style={styles.infoValue}>{token.name}</Text>\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                                  <Text style={styles.infoLabel}>Initiative: {item.initiative}</Text>\n                                  <Text style={styles.infoLabel}>HP: {token.hp}/{token.maxHp}</Text>\n                                </View>\n                              </View>\n                            );\n                          })}\n                        </ScrollView>\n                      </>\n                    )}\n                  </View>\n                </View>\n              </View>\n            </ScrollView>\n          </>\n        )}\n      </View>\n      <DeleteCharacterModal\n        visible={showDeleteModal}\n        character={selectedCharacter}\n        onClose={() => setShowDeleteModal(false)}\n        onConfirm={handleDeleteCharacter}\n      />\n      <EnemySelectModal\n        visible={showEnemySelect}\n        onClose={() => {\n          setShowEnemySelect(false);\n          setSelectedPosition(null);\n        }}\n        onSelect={handleEnemySelect}\n      />\n      <ColorWheelModal\n        visible={showColorWheel}\n        onClose={() => setShowColorWheel(false)}\n        onSelectColor={setCurrentColor}\n        initialColor={currentColor}\n      />\n    </SafeAreaView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}